<Activity mc:Ignorable="sap sap2010 sads" x:Class="Tax1040WorkFlow.WorkFlow.Activities.F8862BusinessRuleValidation"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject"
 xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Tax1040Object" Type="InOutArgument(jtb:Tax1040)" />
    <x:Property Name="ErrorMessages" Type="InArgument(jtco:ErrorMessages)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Tax1040WorkFlow.WorkFlow.Activities.F8862BusinessRuleValidation_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Object</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.PDFBinding</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Form8862Eligibility Check" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="jtb:Form8862" Name="Form8862" />
      <Variable x:TypeArguments="jtco:ErrorMessage" Name="ErrorMessage" />
      <Variable x:TypeArguments="scg:List(jtco:ErrorMessage)" Name="ErrorMessageList">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpValue>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <If DisplayName="If Tax1040ObjectCheck" sap2010:WorkflowViewState.IdRef="If_13">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object != null) &amp;&amp; (Tax1040Object.Income != null))</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <If DisplayName="If Formm 8862Check" sap2010:WorkflowViewState.IdRef="If_8">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.Income.Form8862 !=null)</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence DisplayName="F8862" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <If DisplayName="EICdisallowed Check" sap2010:WorkflowViewState.IdRef="If_16">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form8862.HasEICdisallowed.HasValue) &amp;&amp; (Tax1040Object.Income.Form8862.HasEICdisallowed.Value))</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Else>
                  <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="jtco:ErrorMessage">
                          <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_EARNED_INCOME_CREDIT_DISALLOWED]</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6">
                      <AddToCollection.Item>
                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                        </InArgument>
                      </AddToCollection.Item>
                      <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                        <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                      </InArgument>
                    </AddToCollection>
                  </Sequence>
                </If.Else>
              </If>
              <If DisplayName="ReportedIncorrectIncome" sap2010:WorkflowViewState.IdRef="If_17">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form8862.HasReportedIncorrectIncome.HasValue) &amp;&amp; (Tax1040Object.Income.Form8862.HasReportedIncorrectIncome.Value))</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="jtco:ErrorMessage">
                          <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_EIC_REDUCED_DISALLOWED_EARLIER_YEAR]</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7">
                      <AddToCollection.Item>
                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                        </InArgument>
                      </AddToCollection.Item>
                      <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                        <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                      </InArgument>
                    </AddToCollection>
                  </Sequence>
                </If.Then>
              </If>
              <Sequence DisplayName="DaysLivedInUS" sap2010:WorkflowViewState.IdRef="Sequence_15">
                <If DisplayName="If PersonalDetailsCheck" sap2010:WorkflowViewState.IdRef="If_23">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails !=null</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <If DisplayName="If PrimaryTaxpayerCheck" sap2010:WorkflowViewState.IdRef="If_22">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails.PrimaryTaxPayer !=null</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Switch x:TypeArguments="jtco:FilingStatus" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                          <Switch.Expression>
                            <InArgument x:TypeArguments="jtco:FilingStatus">
                              <mca:CSharpValue x:TypeArguments="jtco:FilingStatus">Tax1040Object.PersonalDetails.PrimaryTaxPayer.FilingStatus</mca:CSharpValue>
                            </InArgument>
                          </Switch.Expression>
                          <If x:Key="Single" DisplayName="DaysLivedInUS" sap2010:WorkflowViewState.IdRef="If_19">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form8862.HasDaysLivedInUS.HasValue) &amp;&amp; (Tax1040Object.Income.Form8862.HasDaysLivedInUS.Value))</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <If DisplayName="IfTaxPayerLivedInUS" sap2010:WorkflowViewState.IdRef="If_18">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Income.Form8862.DaysLivedInUS &gt; 0</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Else>
                                  <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_TAXPAYER_DAYS_LIVED_US]</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_8">
                                      <AddToCollection.Item>
                                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                        </InArgument>
                                      </AddToCollection.Item>
                                      <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                        <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </If.Then>
                          </If>
                          <If x:Key="MarriedFilingJointly" DisplayName="DaysLivedInUS" sap2010:WorkflowViewState.IdRef="If_21">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">(((Form8862.HasDaysLivedInUS.HasValue) &amp;&amp; (Form8862.HasDaysSpouseLivedInUS.HasValue)) &amp;&amp; ((Form8862.HasDaysLivedInUS.Value) &amp;&amp; (Form8862.HasDaysSpouseLivedInUS.Value)))</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <If DisplayName="ifTaxPayerAndSpouseLivedInUS" sap2010:WorkflowViewState.IdRef="If_20">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.Income.Form8862.DaysLivedInUS &gt; 0) &amp;&amp; (Tax1040Object.Income.Form8862.DaysSpouseLivedInUS &gt; 0)</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Else>
                                  <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_TAXPAYER_DAYS_LIVED_US]</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_SPOUSE_DAYS_LIVED_US]</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_9">
                                      <AddToCollection.Item>
                                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                        </InArgument>
                                      </AddToCollection.Item>
                                      <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                        <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </If.Then>
                          </If>
                        </Switch>
                      </If.Then>
                    </If>
                  </If.Then>
                </If>
              </Sequence>
              <Sequence DisplayName="QualifyingChild" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <If DisplayName="If CreditsCheck" sap2010:WorkflowViewState.IdRef="If_26">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Credits !=null</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <If DisplayName="If EICCheck" sap2010:WorkflowViewState.IdRef="If_25">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Credits.EIC !=null</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="QualifyingChild" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Nullable(x:Boolean)">
                                <mca:CSharpReference x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.Income.Form8862.HasClaimedAsQualifyingChild</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                                <mca:CSharpValue x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.Credits.EIC.HasClaimedAsQualifyingChild</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <If DisplayName="QualifyingChild Check" sap2010:WorkflowViewState.IdRef="If_24">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form8862.HasClaimedAsQualifyingChild.HasValue) &amp;&amp; (Tax1040Object.Income.Form8862.HasClaimedAsQualifyingChild.Value))</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.EIC_NON_QUALIFIED_CHILD]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_10">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                    </If>
                  </If.Then>
                </If>
              </Sequence>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                    <mca:CSharpReference x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                    <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
        </If>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d3RFOlxUYXhHYXJkZW5zXEplZXZhbjEwNDBcRmVhdHVyZVxDb2RlXEpUTC5UYXgxMDQwLkJ1c2luZXNzTG9naWNcV29ya0Zsb3dcQWN0aXZpdGllc1xGODg2MkJ1c2luZXNzUnVsZVZhbGlkYXRpb24ueGFtbE48A+cCDgIBAUILQncCAQJGBeUCCgIBCEkLSY0BAgEJTQnjAg4CAQ9QD1B0AgEQVA3hAhgCARZVD3UUAwH6AXYPlgEUAwHYAZcBD5ECGgIBY5ICD9QCGgIBJNUCD+ACGAIBF1gVWNEBAwH7AVwTcx4DAYECeRV55QEDAdkBfROUAR4DAd8BmAERkAIWAgFkkwIR0wIWAgEl3QIV3QJ2AgEe2AIV2AKJAQIBGF0VaB4DAY8CaRVyJwMBggJ+FYkBHgMB7QGKARWTAScDAeABmwEXmwF6AgFlnwEVjgIaAgFrlgIXlgJyAgEmmgIV0QIaAgEsZRtloAEDAZYCYBtgdgMBkAJwGXCBAQMBiQJsG2xuAwGDAoYBG4YBpAEDAfQBgQEbgQF2AwHuAZEBGZEBgQEDAecBjQEbjQFuAwHhAaIBG6IBjgECAWymARmMAiICAXKdAhudAnoCAS2hAhnPAiQCATOpAR+pAaABAgFzrAEb1QEgAwGvAdYBG4sCIAIBeaICG60CJAIBVq4CG84CIAIBNK8BIa8B3QEDAbABswEf0wEkAwG2AdkBIdkBoAICAXrdAR+JAiQDAYABqgIhqgKhAQIBXaUCIaUCrQECAVexAiGxAvMBAgE1tQIfzAIqAgE7tgEltgGWAQMBtwG6ASPRAS4DAb0B4AEl4AHeAQMBgQHkASOHAi4DAYcBtgIhwQIqAgFJwgIhywIzAgE8uwElxgEuAwHLAccBJdABNwMBvgHlASXwAS4DAaIB8QEl/AEuAwGVAf0BJYYCNwMBiAG+Aie+Ap4BAgFQuQInuQKCAQIBSskCJckCjQECAUPFAifFAnoCAT3DASvDAacBAwHSAb4BK74BhgEDAcwBzgEpzgGRAQMBxQHKASvKAX4DAb8B7QEr7QGnAQMBqQHoASvoAYYBAwGjAfkBK/kBpQEDAZwB9AEr9AGGAQMBlgGEAimEApEBAwGPAYACK4ACfgMBiQE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_6" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="881,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_7" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="881,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_8" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="464,398" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="589,548">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_9" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="464,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="589,650">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Switch`1_2" sap:VirtualizedContainerService.HintSize="609,858">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_22" sap:VirtualizedContainerService.HintSize="734,1008" />
      <sap2010:ViewStateData Id="If_23" sap:VirtualizedContainerService.HintSize="859,1158">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="881,1282">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_10" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="464,398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="486,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_25" sap:VirtualizedContainerService.HintSize="611,774" />
      <sap2010:ViewStateData Id="If_26" sap:VirtualizedContainerService.HintSize="736,924" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="881,1048">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="881,62" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="903,3472">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="1028,3622">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="1153,3772" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1175,3896">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Tax1040WorkFlow.WorkFlow.Activities.F8862BusinessRuleValidation_1" sap:VirtualizedContainerService.HintSize="1215,3976" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>