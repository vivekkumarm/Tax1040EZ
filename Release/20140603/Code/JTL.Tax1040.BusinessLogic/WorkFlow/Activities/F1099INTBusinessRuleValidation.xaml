<Activity mc:Ignorable="sap sap2010 sads" x:Class="Tax1040WorkFlow.WorkFlow.Activities.F1099INTBusinessValidationRules"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject"
 xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Tax1040Object" Type="InOutArgument(jtb:Tax1040)" />
    <x:Property Name="ErrorMessages" Type="InArgument(jtco:ErrorMessages)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Tax1040WorkFlow.WorkFlow.Activities.F1099INTBusinessValidationRules_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Object</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="1099INTBusinessValidationRules" sap2010:WorkflowViewState.IdRef="Sequence_6">
    <Sequence.Variables>
      <Variable x:TypeArguments="jtb:Form1099INT" Name="F1099INT" />
      <Variable x:TypeArguments="jtco:ErrorMessage" Name="ErrorMessage" />
      <Variable x:TypeArguments="scg:List(jtco:ErrorMessage)" Name="ErrorMessageList">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Double" Default="0" Name="StateTaxWithholdingAmountTotal" />
    </Sequence.Variables>
    <If DisplayName="If Tax1040ObjectCheck" sap2010:WorkflowViewState.IdRef="If_11">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object !=null) &amp;&amp; (Tax1040Object.Income !=null))</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <If DisplayName="If Form1099INT" sap2010:WorkflowViewState.IdRef="If_8">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form1099INT != null) &amp;&amp; (Tax1040Object.Income.Form1099INT.Any()))</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <ForEach x:TypeArguments="jtb:Form1099INT" DisplayName="ForEach&lt;Form1099INT&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
              <ForEach.Values>
                <InArgument x:TypeArguments="scg:IEnumerable(jtb:Form1099INT)">
                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(jtb:Form1099INT)">Tax1040Object.Income.Form1099INT</mca:CSharpValue>
                </InArgument>
              </ForEach.Values>
              <ActivityAction x:TypeArguments="jtb:Form1099INT">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="jtb:Form1099INT" Name="F1099INT" />
                </ActivityAction.Argument>
                <Sequence DisplayName="1099INT Validation" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <Sequence DisplayName="Box 2 Early Withdrawal Penalty" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <If DisplayName="If InvestmentExpensesCheck" sap2010:WorkflowViewState.IdRef="If_12">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">F1099INT.EarlyWithdrawalPenalty.HasValue &amp;&amp; F1099INT.EarlyWithdrawalPenalty.Value &gt; 0</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                            <Assign.To>
                              <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.INT_EARLY_WITHDRAWAL_PENALTY_BR]</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="F1099INTId" sap2010:WorkflowViewState.IdRef="Assign_23">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int64">
                                <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int64">
                                <mca:CSharpValue x:TypeArguments="x:Int64">F1099INT.Form1099INTId</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_9">
                            <AddToCollection.Item>
                              <InArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection.Item>
                            <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                              <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                  <Sequence DisplayName="Box4-Federal withholding" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <If DisplayName="If FederalWithholdCheck" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean" xml:space="preserve">(F1099INT.FederalTaxWithHoldingAmount.HasValue?F1099INT.FederalTaxWithHoldingAmount.Value:0)  &gt;  ((F1099INT.USBondsTreasury.HasValue?F1099INT.USBondsTreasury.Value:0) + (F1099INT.InterestIncome.HasValue?F1099INT.InterestIncome.Value:0))</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_10">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.INTEREST_INCOME_FEDERAL_WITHHOLDING]</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="F1099INTId" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int64">
                                <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int64">
                                <mca:CSharpValue x:TypeArguments="x:Int64">F1099INT.Form1099INTId</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4">
                            <AddToCollection.Item>
                              <InArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection.Item>
                            <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                              <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                  <Sequence DisplayName="Box5-Investment expenses" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <If DisplayName="If InvestmentExpensesCheck" sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">F1099INT.InvestmentExpenses.HasValue &amp;&amp; F1099INT.InvestmentExpenses.Value &gt; 0</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.INVESTMENT_EXPENSES]</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="F1099INTId" sap2010:WorkflowViewState.IdRef="Assign_18">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int64">
                                <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int64">
                                <mca:CSharpValue x:TypeArguments="x:Int64">F1099INT.Form1099INTId</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5">
                            <AddToCollection.Item>
                              <InArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection.Item>
                            <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                              <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                  <Sequence DisplayName="Box6-ForeignTaxPaid" sap2010:WorkflowViewState.IdRef="Sequence_14">
                    <If DisplayName="If ForeignTaxPaid" sap2010:WorkflowViewState.IdRef="If_6">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">F1099INT.ForeignTaxPaid.HasValue &amp;&amp; F1099INT.ForeignTaxPaid.Value &gt; 0</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.FOREIGN_TAX_WITHHELD]</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="F1099INTId" sap2010:WorkflowViewState.IdRef="Assign_19">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int64">
                                <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int64">
                                <mca:CSharpValue x:TypeArguments="x:Int64">F1099INT.Form1099INTId</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6">
                            <AddToCollection.Item>
                              <InArgument x:TypeArguments="jtco:ErrorMessage">
                                <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection.Item>
                            <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                              <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                  <Sequence DisplayName="Box13-StateTaxwithheld" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="jtb:Form1099StateInformation" Name="Form1099StateInfo" />
                    </Sequence.Variables>
                    <If DisplayName="If StateWithheld" sap2010:WorkflowViewState.IdRef="If_9">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">((F1099INT.Form1099StateInfo != null) &amp;&amp; (F1099INT.Form1099StateInfo.Any()))</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="StateWithheld" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <ForEach x:TypeArguments="jtb:Form1099StateInformation" DisplayName="ForEach&lt;Form1099StateInformation&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
                            <ForEach.Values>
                              <InArgument x:TypeArguments="scg:IEnumerable(jtb:Form1099StateInformation)">
                                <mca:CSharpValue x:TypeArguments="scg:IEnumerable(jtb:Form1099StateInformation)">F1099INT.Form1099StateInfo</mca:CSharpValue>
                              </InArgument>
                            </ForEach.Values>
                            <ActivityAction x:TypeArguments="jtb:Form1099StateInformation">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="jtb:Form1099StateInformation" Name="Form1099StateInfo" />
                              </ActivityAction.Argument>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <mca:CSharpReference x:TypeArguments="x:Double">StateTaxWithholdingAmountTotal</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">
                                    <mca:CSharpValue x:TypeArguments="x:Double">StateTaxWithholdingAmountTotal + (Form1099StateInfo.StateTaxWithholdingAmount.HasValue?Form1099StateInfo.StateTaxWithholdingAmount.Value:0)</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </ForEach>
                          <If DisplayName="If StateTaxWithholdingAmountTotalCheck" sap2010:WorkflowViewState.IdRef="If_7">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">StateTaxWithholdingAmountTotal &gt; ((F1099INT.USBondsTreasury.HasValue?F1099INT.USBondsTreasury.Value:0) + (F1099INT.InterestIncome.HasValue?F1099INT.InterestIncome.Value:0))</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.INTEREST_INCOME_STATE_TAX_WITHHELD]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="F1099INTId" sap2010:WorkflowViewState.IdRef="Assign_21">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpValue x:TypeArguments="x:Int64">F1099INT.Form1099INTId</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                        <mca:CSharpReference x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                        <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ActivityAction>
            </ForEach>
          </If.Then>
        </If>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d5QBRTpcVGF4R2FyZGVuc1xKZWV2YW4xMDQwXFBPQ1xXb3JrRmxvd1xUYXgxMDQwV0ZSdWxlc2FuZENhbGN1bGF0aW9uXEpUTC5UYXgxMDQwLkJ1c2luZXNzTG9naWNcV29ya0Zsb3dcQWN0aXZpdGllc1xGMTA5OUlOVEJ1c2luZXNzUnVsZVZhbGlkYXRpb24ueGFtbFY6A4MDDgIBAUALQHcCAQNDNEM3AgECRQWBAwoCAQpIC0iLAQIBC0wJ/wIOAgESTw9PrgECARNTDf0CFwIBGlYTVokBAwGUA10R+wIcAgEbXhOMAR4DAdYCjQETuwEeAwGYArwBE+oBHgMB2gHrAROZAh4DAZwBmgIT7gIeAgEt7wIT+gIcAgEcXxWLARoDAdcCjgEVugEaAwGZAr0BFekBGgMB2wHsARWYAhoDAZ0BngIV7QIaAgEu9wIZ9wJ6AgEl8gIZ8gKNAQIBHWIbYroBAwHYAmYZiQEkAwHgApEBG5EB3gIDAZoClQEZuAEkAwGiAsABG8ABsgEDAdwBxAEZ5wEkAwHkAe8BG+8BqgEDAZ4B8wEZlgIkAwGmAaECG6ECrgECAS+lAhnrAiQCAThnG3IkAwGDA3MbfiQDAfICfxuIAS0DAeEClgEboQEkAwHFAqIBG60BJAMBtAKuARu3AS0DAaMCxQEb0AEkAwGHAtEBG9wBJAMB9gHdARvmAS0DAeUB9AEb/wEkAwHJAYACG4sCJAMBuAGMAhuVAi0DAacBpgIbvQIlAgF9vgIb6gIgAgE5byFvoAEDAYwDaiFqfAMBhAN7IXt0AwH7AnYhdnkDAfMChgEfhgGHAQMB6gKCASGCAXQDAeICngEhngGkAQMBzgKZASGZAXwDAcYCqgEhqgF0AwG9AqUBIaUBeQMBtQK1AR+1AYcBAwGsArEBIbEBdAMBpALNASHNAZQBAwGQAsgBIcgBfAMBiALZASHZAXQDAf8B1AEh1AF5AwH3AeQBH+QBhwEDAe4B4AEh4AF0AwHmAfwBIfwBlQEDAdIB9wEh9wF8AwHKAYgCIYgCdAMBwQGDAiGDAnkDAbkBkwIfkwKHAQMBsAGPAiGPAnQDAagBqQIhqQKeAQMBkwGwAh+7AigCAX7BAiHBAo8CAgE6xQIf6AIqAgFDuAIluALuAQMBiQGzAiWzAokBAgF/xgIh0QIqAgFq0gIh3QIqAgFX3gIh5wIzAgFEzgInzgKpAQIBdMkCJ8kCggECAWvaAifaAnoCAWHVAifVAn8CAVjlAiXlAo0BAgFO4QIn4QJ6AgFF</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_9" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="464,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="633,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="633,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_5" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="633,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_6" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="633,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="464,212">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_7" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="486,876">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="611,1026">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="633,1150">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="633,62" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="655,4032">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="685,4182">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="810,4332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="935,4482" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="957,4606">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Tax1040WorkFlow.WorkFlow.Activities.F1099INTBusinessValidationRules_1" sap:VirtualizedContainerService.HintSize="997,4686" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>