<Activity mc:Ignorable="sap sap2010 sads" x:Class="Tax1040WorkFlow.WorkFlow.Activities.F1099GBusinessValidationRule"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject"
 xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Tax1040Object" Type="InOutArgument(jtb:Tax1040)" />
    <x:Property Name="ErrorMessages" Type="InArgument(jtco:ErrorMessages)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>Tax1040WorkFlow.WorkFlow.Activities.F1099GBusinessValidationRule_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Object</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="1099GBusinessValidationRule" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="jtco:ErrorMessage" Name="ErrorMessage" />
      <Variable x:TypeArguments="scg:List(jtco:ErrorMessage)" Name="ErrorMessageList">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="jtb:Form1099G" Name="F1099G" />
    </Sequence.Variables>
    <Sequence DisplayName="1099GBusinessRuleCheck" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <If DisplayName="If Tax1040ObjectCheck" sap2010:WorkflowViewState.IdRef="If_7">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object != null) &amp;&amp; (Tax1040Object.Income != null))</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <If DisplayName="If F1099G" sap2010:WorkflowViewState.IdRef="If_4">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form1099G != null) &amp;&amp; (Tax1040Object.Income.Form1099G.Any()))</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <ForEach x:TypeArguments="jtb:Form1099G" DisplayName="ForEach&lt;F1099G&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                <ForEach.Values>
                  <InArgument x:TypeArguments="scg:IEnumerable(jtb:Form1099G)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(jtb:Form1099G)">Tax1040Object.Income.Form1099G</mca:CSharpValue>
                  </InArgument>
                </ForEach.Values>
                <ActivityAction x:TypeArguments="jtb:Form1099G">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="jtb:Form1099G" Name="F1099G" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="1099 G " sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <Sequence DisplayName="Box4-FederalTaxWithHoldingAmount" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <If DisplayName="If FederalTaxWithholdingAmount Check" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">(F1099G.FederalTaxWithHoldingAmount.HasValue?F1099G.FederalTaxWithHoldingAmount.Value : 0) &gt; (F1099G.UnEmploymentCompensation.HasValue?F1099G.UnEmploymentCompensation.Value : 0)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_3">
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F1099G_FEDERAL_WITHHOLDING]</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="F1099GID" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int64">
                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int64">
                                  <mca:CSharpValue x:TypeArguments="x:Int64">F1099G.Form1099GId</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2">
                              <AddToCollection.Item>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                </InArgument>
                              </AddToCollection.Item>
                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                    <Sequence DisplayName="Box11-StateTaxWithholdingAmount" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="jtb:Form1099StateInformation" Name="FormStateInfo" />
                        <Variable x:TypeArguments="x:Double" Name="TotalStateWithHeldAmount" />
                      </Sequence.Variables>
                      <If DisplayName="If StateWithholdingCheck" sap2010:WorkflowViewState.IdRef="If_5">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">((F1099G.Form1099StateInfo != null) &amp;&amp; (F1099G.Form1099StateInfo.Any()))</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="F1099G StateWithholding" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <ForEach x:TypeArguments="jtb:Form1099StateInformation" DisplayName="ForEach&lt;Form1099StateInformation&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
                              <ForEach.Values>
                                <InArgument x:TypeArguments="scg:IEnumerable(jtb:Form1099StateInformation)">
                                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(jtb:Form1099StateInformation)">F1099G.Form1099StateInfo</mca:CSharpValue>
                                </InArgument>
                              </ForEach.Values>
                              <ActivityAction x:TypeArguments="jtb:Form1099StateInformation">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="jtb:Form1099StateInformation" Name="FormStateInfo" />
                                </ActivityAction.Argument>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">
                                      <mca:CSharpReference x:TypeArguments="x:Double">TotalStateWithHeldAmount</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">
                                      <mca:CSharpValue x:TypeArguments="x:Double">(FormStateInfo.StateTaxWithholdingAmount.HasValue?FormStateInfo.StateTaxWithholdingAmount.Value : 0) + TotalStateWithHeldAmount</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                              </ActivityAction>
                            </ForEach>
                            <If DisplayName="If TotalStateWithholdAmount" sap2010:WorkflowViewState.IdRef="If_3">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">TotalStateWithHeldAmount &gt; (F1099G.UnEmploymentCompensation.HasValue?F1099G.UnEmploymentCompensation.Value : 0)</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                        <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="jtco:ErrorMessage">
                                        <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F1099G_STATE_WITHHOLDING]</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="F1099GID" sap2010:WorkflowViewState.IdRef="Assign_10">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int64">
                                        <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int64">
                                        <mca:CSharpValue x:TypeArguments="x:Int64">F1099G.Form1099GId</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3">
                                    <AddToCollection.Item>
                                      <InArgument x:TypeArguments="jtco:ErrorMessage">
                                        <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection.Item>
                                    <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                      <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                    <Sequence DisplayName="Prior year compensation repaid - Eligibility Check" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="jtb:Form1099StateInformation" Name="FormStateInfo" />
                        <Variable x:TypeArguments="x:Double" Name="TotalStateWithHeldAmount" />
                      </Sequence.Variables>
                      <If DisplayName="Prior year Unemployment compensation Eligibility check" sap2010:WorkflowViewState.IdRef="If_8">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">((F1099G.IsPriorYearUnEmploymentRepaid.HasValue ? F1099G.IsPriorYearUnEmploymentRepaid.Value : false) &amp;&amp; (F1099G.PriorYearUnEmploymentRepaid.HasValue ? F1099G.PriorYearUnEmploymentRepaid.Value : 0) &gt; 0)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="F1099G Prior year unemployment repaid" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <Sequence DisplayName="Error Message" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                    <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="jtco:ErrorMessage">
                                    <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F1099G__REPAID_AMOUNT_FOR_EARLIER_YEAR]</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="F1099GID" sap2010:WorkflowViewState.IdRef="Assign_12">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int64">
                                    <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int64">
                                    <mca:CSharpValue x:TypeArguments="x:Int64">F1099G.Form1099GId</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4">
                                <AddToCollection.Item>
                                  <InArgument x:TypeArguments="jtco:ErrorMessage">
                                    <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection.Item>
                                <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                  <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                </InArgument>
                              </AddToCollection>
                            </Sequence>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                          <mca:CSharpReference x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                          <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ForEach>
            </If.Then>
          </If>
        </If.Then>
      </If>
    </Sequence>
    <sads:DebugSymbol.Symbol>d4cBRDpcSmVldmFuMTA0MFxQT0NcV29ya0Zsb3dcVGF4MTA0MFdGUnVsZXNhbmRDYWxjdWxhdGlvblxKVEwuVGF4MTA0MC5CdXNpbmVzc0xvZ2ljXFdvcmtGbG93XEFjdGl2aXRpZXNcRjEwOTlHQnVzaW5lc3NSdWxlVmFsaWRhdGlvbi54YW1sPToDrQIOAgEBPws/dwIBAkQFqwIQAgEIRQeqAgwCAQlIDUiPAQIBCkwLqAIQAgEQTxFPrAECARFTD6YCGQIBF1YVVocBAwGUAl0TpAIeAgEYXhWMASADAd0BjQEV4gEgAgFu4wEVlwIgAgEomAIVowIeAgEZXxeLARwDAd4BkgEX4QEcAgFv6AEXlgIcAgEpoAIboAJ8AgEhmwIbmwKPAQIBGmIdYpACAwHfAWYbiQEmAwHmAZUBHZUBrAECAXCZARvfASYCAXnrAR3rAbECAgEq7wEblAImAgEzZx1yJgMBhQJzHX4mAwH2AX8diAEvAwHnAZoBHbEBJwMBvgGyAR3eASICAXrwAR2TAigCATRvI2+dAQMBjQJqI2p+AwGGAnsje3IDAf4BdiN2ewMB9wGGASGGAYkBAwHvAYIBI4IBdgMB6AGdASOdAZ4BAwHUAaQBIa8BKgMBvwG1ASO1AdQBAgF7uQEh3AEsAwGEAfEBH/wBKAIBW/0BH4gCKAIBSIkCH5ICMQIBNawBJ6wB5AEDAcoBpwEnpwGFAQMBwAG6ASPFASwDAasBxgEj0QEsAwGYAdIBI9sBNQMBhQH5ASX5AasBAgFl9AEl9AGAAQIBXIUCJYUCdAIBUoACJYACfQIBSZACI5ACiwECAT+MAiWMAngCATbCASnCAaEBAwG1Ab0BKb0BhAEDAawBzgEpzgF4AwGiAckBKckBgQEDAZkB2QEn2QGPAQMBjwHVASnVAXwDAYYB</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="486,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="464,212">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="486,876">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="611,1026">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="486,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="286,474">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="486,748">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="486,62" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="508,1729">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="538,1879">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="663,2029">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="788,2179" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="810,2303">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="832,2427">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Tax1040WorkFlow.WorkFlow.Activities.F1099GBusinessValidationRule_1" sap:VirtualizedContainerService.HintSize="872,2507" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>