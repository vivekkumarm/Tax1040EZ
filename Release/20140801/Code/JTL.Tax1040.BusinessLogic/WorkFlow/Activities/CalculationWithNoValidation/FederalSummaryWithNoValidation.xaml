<Activity mc:Ignorable="sap sap2010 sads" x:Class="JTL.Tax1040.BusinessLogic.WorkFlow.Activities.CalculationWithNoValidation.FederalSummaryWithNoValidation"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject"
 xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object"
 xmlns:local="clr-namespace:JTL.Tax1040.BusinessLogic.WorkFlow.Activities.CalculationWithNoValidation"
 xmlns:local1="clr-namespace:Tax1040WorkFlow.WorkFlow"
 xmlns:local2="clr-namespace:Tax1040WorkFlow.WorkFlow.Activities"
 xmlns:local3="clr-namespace:JTL.Tax1040.BusinessLogic.WorkFlow.Activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Tax1040Object" Type="InOutArgument(jtb:Tax1040)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>JTL.Tax1040.BusinessLogic.WorkFlow.Activities.CalculationWithNoValidation.FederalSummaryWithNoValidation_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Object</x:String>
      <x:String>System.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.PDFBinding</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="FederalSummaryWithNoValidation" sap2010:WorkflowViewState.IdRef="Sequence_30">
    <Sequence.Variables>
      <Variable x:TypeArguments="jtb:Form1099OID" Name="Form1099OID" />
    </Sequence.Variables>
    <If DisplayName="IfTax1040ObjectCheck" sap2010:WorkflowViewState.IdRef="If_11">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object !=null</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence DisplayName="Tax1040LineByLineCheck" sap2010:WorkflowViewState.IdRef="Sequence_29">
          <Sequence DisplayName="Initialization" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="jtb:OutputForms">
                  <mca:CSharpReference x:TypeArguments="jtb:OutputForms">Tax1040Object.OutputForms</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="jtb:OutputForms">
                  <mca:CSharpValue x:TypeArguments="jtb:OutputForms">new OutputForms()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="jtb:Tax1040EZPage1">
                  <mca:CSharpReference x:TypeArguments="jtb:Tax1040EZPage1">Tax1040Object.OutputForms.Tax1040EZPage1</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="jtb:Tax1040EZPage1">
                  <mca:CSharpValue x:TypeArguments="jtb:Tax1040EZPage1">new Tax1040EZPage1()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <If DisplayName="IfTax1040IncomeCheck" sap2010:WorkflowViewState.IdRef="If_10">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Income !=null</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Sequence DisplayName="Tax1040IncomeCheck" sap2010:WorkflowViewState.IdRef="Sequence_28">
                <Sequence DisplayName="F1040EZLine1 - TotalWages" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="jtb:W2" Name="W2" />
                  </Sequence.Variables>
                  <If DisplayName="TotalWages Calculation" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.W2Wages != null) &amp;&amp; (Tax1040Object.Income.W2Wages.Count&gt;0))</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="W2 Calculation" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Double" Name="TotalWages" />
                          <Variable x:TypeArguments="x:String" Name="WagesPrefix" />
                        </Sequence.Variables>
                        <local:W2WithNoValidation sap2010:WorkflowViewState.IdRef="W2WithNoValidation_1">
                          <local:W2WithNoValidation.PrefixTotalWages>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">WagesPrefix</mca:CSharpReference>
                            </OutArgument>
                          </local:W2WithNoValidation.PrefixTotalWages>
                          <local:W2WithNoValidation.Tax1040Object>
                            <InOutArgument x:TypeArguments="jtb:Tax1040">
                              <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                            </InOutArgument>
                          </local:W2WithNoValidation.Tax1040Object>
                          <local:W2WithNoValidation.TotalWages>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">TotalWages</mca:CSharpReference>
                            </OutArgument>
                          </local:W2WithNoValidation.TotalWages>
                        </local:W2WithNoValidation>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TotalWages</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double">TotalWages</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">Tax1040Object.OutputForms.Tax1040EZPage1.WagesPrefix</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">WagesPrefix</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
                <Sequence DisplayName="F1040EZLine2 - TaxableInterest" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="jtb:Form1099INT" Name="Form1099INT" />
                    <Variable x:TypeArguments="x:Double" Name="Totol1099OIDAmount" />
                    <Variable x:TypeArguments="x:Double" Name="Form1099INTTotal" />
                    <Variable x:TypeArguments="x:Double" Name="Form1099OIDTotal" />
                    <Variable x:TypeArguments="x:Double" Name="F1099INTTaxExemptInterest" />
                    <Variable x:TypeArguments="x:Double" Name="F1099OIDTaxExemptInterest" />
                    <Variable x:TypeArguments="x:Double" Name="TotalWages" />
                    <Variable x:TypeArguments="x:String" Default="TEI -" Name="TEIPrefix" />
                  </Sequence.Variables>
                  <If DisplayName="1099 INT Calculation" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form1099INT != null) &amp;&amp; (Tax1040Object.Income.Form1099INT.Count &gt; 0))</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="1099-INT" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Double" Name="Total1099INTAmount" />
                        </Sequence.Variables>
                        <local:F1099INTWithNoValidation sap2010:WorkflowViewState.IdRef="F1099INTWithNoValidation_1">
                          <local:F1099INTWithNoValidation.Tax1040Object>
                            <InOutArgument x:TypeArguments="jtb:Tax1040">
                              <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                            </InOutArgument>
                          </local:F1099INTWithNoValidation.Tax1040Object>
                          <local:F1099INTWithNoValidation.TotalTaxableInterest>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Form1099INTTotal</mca:CSharpReference>
                            </OutArgument>
                          </local:F1099INTWithNoValidation.TotalTaxableInterest>
                          <local:F1099INTWithNoValidation.TotaltaxExemptInterest1099INT>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">F1099INTTaxExemptInterest</mca:CSharpReference>
                            </OutArgument>
                          </local:F1099INTWithNoValidation.TotaltaxExemptInterest1099INT>
                        </local:F1099INTWithNoValidation>
                      </Sequence>
                    </If.Then>
                  </If>
                  <If DisplayName="1099OID Calculation" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form1099OID != null) &amp;&amp; (Tax1040Object.Income.Form1099OID.Count &gt; 0))</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="F1099-OID" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <local:F1099OIDWithNoValidation argument1="{x:Null}" sap2010:WorkflowViewState.IdRef="F1099OIDWithNoValidation_2">
                          <local:F1099OIDWithNoValidation.Tax1040Object>
                            <InOutArgument x:TypeArguments="jtb:Tax1040">
                              <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                            </InOutArgument>
                          </local:F1099OIDWithNoValidation.Tax1040Object>
                          <local:F1099OIDWithNoValidation.TotalTaxableInterest>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Form1099OIDTotal</mca:CSharpReference>
                            </OutArgument>
                          </local:F1099OIDWithNoValidation.TotalTaxableInterest>
                          <local:F1099OIDWithNoValidation.TotaltaxExemptInterest1099OID>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">F1099OIDTaxExemptInterest</mca:CSharpReference>
                            </OutArgument>
                          </local:F1099OIDWithNoValidation.TotaltaxExemptInterest1099OID>
                        </local:F1099OIDWithNoValidation>
                      </Sequence>
                    </If.Then>
                  </If>
                  <Assign DisplayName="Total Interest Income" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">
                        <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableInterest</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">
                        <mca:CSharpValue x:TypeArguments="x:Double">Form1099INTTotal + Form1099OIDTotal</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Total Taxable Interest" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">
                        <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TEI</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">
                        <mca:CSharpValue x:TypeArguments="x:Double">F1099INTTaxExemptInterest + F1099OIDTaxExemptInterest</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <If DisplayName="If TEI VAlue" sap2010:WorkflowViewState.IdRef="If_16">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.OutputForms.Tax1040EZPage1.TEI !=null</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign DisplayName=" Taxable Exempt Interest" sap2010:WorkflowViewState.IdRef="Assign_28">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableExemptInterestPrefix</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">TEIPrefix</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </Sequence>
                <Sequence DisplayName="F1040EZLine3 - UnemploymentCompensation" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="jtb:Form1099G" Name="Form1099G" />
                    <Variable x:TypeArguments="x:Double" Name="AlaskaPermanantFundAmount" />
                    <Variable x:TypeArguments="x:Double" Name="UnemploymentAmount" />
                  </Sequence.Variables>
                  <If DisplayName="UnemploymentCompensation Calculation" sap2010:WorkflowViewState.IdRef="If_4">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form1099G != null) &amp;&amp; (Tax1040Object.Income.Form1099G.Count &gt; 0))</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="Unemployment" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <Sequence DisplayName="1099G" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Double" Name="TotalUnemploymentCompensationAmount" />
                            <Variable x:TypeArguments="x:Double" Name="TotalRepaid" />
                            <Variable x:TypeArguments="x:String" Default="Repaid $" Name="RepaidPrefix" />
                          </Sequence.Variables>
                          <local:F1099GWithNoValidation sap2010:WorkflowViewState.IdRef="F1099GWithNoValidation_1">
                            <local:F1099GWithNoValidation.Tax1040Object>
                              <InOutArgument x:TypeArguments="jtb:Tax1040">
                                <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                              </InOutArgument>
                            </local:F1099GWithNoValidation.Tax1040Object>
                            <local:F1099GWithNoValidation.TotalRepaidForCurrentYear>
                              <OutArgument x:TypeArguments="x:Double">
                                <mca:CSharpReference x:TypeArguments="x:Double">TotalRepaid</mca:CSharpReference>
                              </OutArgument>
                            </local:F1099GWithNoValidation.TotalRepaidForCurrentYear>
                            <local:F1099GWithNoValidation.UnEmployment>
                              <OutArgument x:TypeArguments="x:Double">
                                <mca:CSharpReference x:TypeArguments="x:Double">UnemploymentAmount</mca:CSharpReference>
                              </OutArgument>
                            </local:F1099GWithNoValidation.UnEmployment>
                          </local:F1099GWithNoValidation>
                          <Assign DisplayName="TotalRepaidAmount" sap2010:WorkflowViewState.IdRef="Assign_29">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <mca:CSharpReference x:TypeArguments="x:String">Tax1040Object.OutputForms.Tax1040EZPage1.TotalRepaidForCurrentYear</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">RepaidPrefix+TotalRepaid.ToString()</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                  </If>
                  <If DisplayName="Alaska Permanent Fund" sap2010:WorkflowViewState.IdRef="If_6">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Income.OtherIncome !=null</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <If DisplayName="If Alaska Check" sap2010:WorkflowViewState.IdRef="If_5">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Income.OtherIncome.HasAlaskaPermanantFund.HasValue &amp;&amp; Tax1040Object.Income.OtherIncome.HasAlaskaPermanantFund.Value</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="AlaskaPermanantFund" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <local:AlaskaWithNoValidation sap2010:WorkflowViewState.IdRef="AlaskaWithNoValidation_1">
                              <local:AlaskaWithNoValidation.AlaskaPermanentFund>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double">AlaskaPermanantFundAmount</mca:CSharpReference>
                                </OutArgument>
                              </local:AlaskaWithNoValidation.AlaskaPermanentFund>
                              <local:AlaskaWithNoValidation.Tax1040Object>
                                <InOutArgument x:TypeArguments="jtb:Tax1040">
                                  <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                                </InOutArgument>
                              </local:AlaskaWithNoValidation.Tax1040Object>
                            </local:AlaskaWithNoValidation>
                          </Sequence>
                        </If.Then>
                      </If>
                    </If.Then>
                  </If>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">
                        <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.UnemploymentCompensation</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">
                        <mca:CSharpValue x:TypeArguments="x:Double">UnemploymentAmount + AlaskaPermanantFundAmount</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="F1040EZLine4 - AdjustedGrossIncome" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Double" Name="TotalAdjustedGrossIncome" />
                  </Sequence.Variables>
                  <Sequence DisplayName="AdjustedGrossIncome Calculation" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.AdjustedGrossIncome</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">
                          <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TotalWages + Tax1040Object.OutputForms.Tax1040EZPage1.TaxableInterest + Tax1040Object.OutputForms.Tax1040EZPage1.UnemploymentCompensation</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Sequence>
                <Sequence DisplayName="F1040EZLine5 - Personal Exemptions &amp; Standard Deduction" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <Sequence DisplayName="StandardDeduction" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Double" Name="TotalStandardDeduction" />
                    </Sequence.Variables>
                    <local1:F1040EZStandardDeduction sap2010:WorkflowViewState.IdRef="F1040EZStandardDeduction_1">
                      <local1:F1040EZStandardDeduction.Tax1040Object>
                        <InOutArgument x:TypeArguments="jtb:Tax1040">
                          <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                        </InOutArgument>
                      </local1:F1040EZStandardDeduction.Tax1040Object>
                      <local1:F1040EZStandardDeduction.TotalWorksheetStandardDeduction>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">TotalStandardDeduction</mca:CSharpReference>
                        </OutArgument>
                      </local1:F1040EZStandardDeduction.TotalWorksheetStandardDeduction>
                    </local1:F1040EZStandardDeduction>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.StandardDeduction</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">
                          <mca:CSharpValue x:TypeArguments="x:Double">TotalStandardDeduction</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Sequence>
                <Sequence DisplayName="F1040EZLine6 - TaxableIncome" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <If DisplayName="TaxableIncome Calculation" sap2010:WorkflowViewState.IdRef="If_7">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.OutputForms.Tax1040EZPage1.AdjustedGrossIncome &gt; Tax1040Object.OutputForms.Tax1040EZPage1.StandardDeduction</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">
                            <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableIncome</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">
                            <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.AdjustedGrossIncome - Tax1040Object.OutputForms.Tax1040EZPage1.StandardDeduction</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">
                            <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableIncome</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">0</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                </Sequence>
                <Sequence DisplayName="F1040EZLine7 - FederalTaxWithholdingAmount" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Double" Name="W2FederalTaxWithholdTotal" />
                    <Variable x:TypeArguments="x:Double" Name="Form1099INTFederalTaxWithholdTotal" />
                    <Variable x:TypeArguments="x:Double" Name="Form1099OIDFederalTaxWithholdTotal" />
                    <Variable x:TypeArguments="x:Double" Name="Form1099GFederalTaxWithholdTotal" />
                  </Sequence.Variables>
                  <Sequence DisplayName="FederalTaxWithholding" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Double" Name="FSSBFederalTaxWithHoldingTotal" />
                      <Variable x:TypeArguments="x:Double" Name="FRRBFederalTaxWithHoldingTotal" />
                    </Sequence.Variables>
                    <local2:FW2FederalTaxWithholding sap2010:WorkflowViewState.IdRef="FW2FederalTaxWithholding_1">
                      <local2:FW2FederalTaxWithholding.Tax1040Object>
                        <InOutArgument x:TypeArguments="jtb:Tax1040">
                          <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                        </InOutArgument>
                      </local2:FW2FederalTaxWithholding.Tax1040Object>
                      <local2:FW2FederalTaxWithholding.TotalW2FederalTaxWithhold>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">W2FederalTaxWithholdTotal</mca:CSharpReference>
                        </OutArgument>
                      </local2:FW2FederalTaxWithholding.TotalW2FederalTaxWithhold>
                    </local2:FW2FederalTaxWithholding>
                    <local2:F1099INTFederalTaxWithholding sap2010:WorkflowViewState.IdRef="F1099INTFederalTaxWithholding_1">
                      <local2:F1099INTFederalTaxWithholding.Tax1040Object>
                        <InOutArgument x:TypeArguments="jtb:Tax1040">
                          <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                        </InOutArgument>
                      </local2:F1099INTFederalTaxWithholding.Tax1040Object>
                      <local2:F1099INTFederalTaxWithholding.Total1099INTFederalTaxWithhold>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">Form1099INTFederalTaxWithholdTotal</mca:CSharpReference>
                        </OutArgument>
                      </local2:F1099INTFederalTaxWithholding.Total1099INTFederalTaxWithhold>
                    </local2:F1099INTFederalTaxWithholding>
                    <local2:F1099OIDFederalTaxWithholding sap2010:WorkflowViewState.IdRef="F1099OIDFederalTaxWithholding_1">
                      <local2:F1099OIDFederalTaxWithholding.Tax1040Object>
                        <InOutArgument x:TypeArguments="jtb:Tax1040">
                          <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                        </InOutArgument>
                      </local2:F1099OIDFederalTaxWithholding.Tax1040Object>
                      <local2:F1099OIDFederalTaxWithholding.Total1099OIDFederalTaxWithhold>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">Form1099OIDFederalTaxWithholdTotal</mca:CSharpReference>
                        </OutArgument>
                      </local2:F1099OIDFederalTaxWithholding.Total1099OIDFederalTaxWithhold>
                    </local2:F1099OIDFederalTaxWithholding>
                    <local2:F1099GFederalWithholding sap2010:WorkflowViewState.IdRef="F1099GFederalWithholding_1">
                      <local2:F1099GFederalWithholding.Tax1040Object>
                        <InOutArgument x:TypeArguments="jtb:Tax1040">
                          <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                        </InOutArgument>
                      </local2:F1099GFederalWithholding.Tax1040Object>
                      <local2:F1099GFederalWithholding.Total1099GFederalTaxWithhold>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">Form1099GFederalTaxWithholdTotal</mca:CSharpReference>
                        </OutArgument>
                      </local2:F1099GFederalWithholding.Total1099GFederalTaxWithhold>
                    </local2:F1099GFederalWithholding>
                    <local2:FSSAFederalTaxWithHolding sap2010:WorkflowViewState.IdRef="FSSAFederalTaxWithHolding_1">
                      <local2:FSSAFederalTaxWithHolding.Tax1040Object>
                        <InOutArgument x:TypeArguments="jtb:Tax1040">
                          <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                        </InOutArgument>
                      </local2:FSSAFederalTaxWithHolding.Tax1040Object>
                      <local2:FSSAFederalTaxWithHolding.TotalSSBWithHolding>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">FSSBFederalTaxWithHoldingTotal</mca:CSharpReference>
                        </OutArgument>
                      </local2:FSSAFederalTaxWithHolding.TotalSSBWithHolding>
                    </local2:FSSAFederalTaxWithHolding>
                    <local2:FRRBFederalTaxWithHolding sap2010:WorkflowViewState.IdRef="FRRBFederalTaxWithHolding_1">
                      <local2:FRRBFederalTaxWithHolding.Tax1040Object>
                        <InOutArgument x:TypeArguments="jtb:Tax1040">
                          <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                        </InOutArgument>
                      </local2:FRRBFederalTaxWithHolding.Tax1040Object>
                      <local2:FRRBFederalTaxWithHolding.TotalRRBWithHolding>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">FRRBFederalTaxWithHoldingTotal</mca:CSharpReference>
                        </OutArgument>
                      </local2:FRRBFederalTaxWithHolding.TotalRRBWithHolding>
                    </local2:FRRBFederalTaxWithHolding>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.FederalTaxWithholdingAmount</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">
                          <mca:CSharpValue x:TypeArguments="x:Double">W2FederalTaxWithholdTotal + Form1099INTFederalTaxWithholdTotal + Form1099OIDFederalTaxWithholdTotal + Form1099GFederalTaxWithholdTotal + FSSBFederalTaxWithHoldingTotal + FRRBFederalTaxWithHoldingTotal</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Sequence>
                <Sequence DisplayName="F1040EZLine8a-EIC" sap2010:WorkflowViewState.IdRef="Sequence_33">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Double" Name="TotalEarnedIncomeCredit" />
                    <Variable x:TypeArguments="scg:IEnumerable(jtco:ErrorMessage)" Name="listErrorMessage" />
                    <Variable x:TypeArguments="x:Boolean" Default="False" Name="HasEarnedIncomeCredit" />
                  </Sequence.Variables>
                  <local:F1040EZEICEligibilityRuleCheckWithAGI sap2010:WorkflowViewState.IdRef="F1040EZEICEligibilityRuleCheckWithAGI_1">
                    <local:F1040EZEICEligibilityRuleCheckWithAGI.AdjustedGrossIncome>
                      <InArgument x:TypeArguments="x:Double">
                        <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.AdjustedGrossIncome</mca:CSharpValue>
                      </InArgument>
                    </local:F1040EZEICEligibilityRuleCheckWithAGI.AdjustedGrossIncome>
                    <local:F1040EZEICEligibilityRuleCheckWithAGI.HasEarnedIncomeCredit>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpReference x:TypeArguments="x:Boolean">HasEarnedIncomeCredit</mca:CSharpReference>
                      </OutArgument>
                    </local:F1040EZEICEligibilityRuleCheckWithAGI.HasEarnedIncomeCredit>
                    <local:F1040EZEICEligibilityRuleCheckWithAGI.Tax1040Object>
                      <InOutArgument x:TypeArguments="jtb:Tax1040">
                        <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                      </InOutArgument>
                    </local:F1040EZEICEligibilityRuleCheckWithAGI.Tax1040Object>
                  </local:F1040EZEICEligibilityRuleCheckWithAGI>
                  <If DisplayName="Has Earned Income Credit" sap2010:WorkflowViewState.IdRef="If_17">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">HasEarnedIncomeCredit</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="EIC" sap2010:WorkflowViewState.IdRef="Sequence_34">
                        <local3:F1040EZEarnedIncomeCreditWithNoValidation EICOut="{x:Null}" sap2010:WorkflowViewState.IdRef="F1040EZEarnedIncomeCreditWithNoValidation_1">
                          <local3:F1040EZEarnedIncomeCreditWithNoValidation.Tax1040Object>
                            <InOutArgument x:TypeArguments="jtb:Tax1040">
                              <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                            </InOutArgument>
                          </local3:F1040EZEarnedIncomeCreditWithNoValidation.Tax1040Object>
                          <local3:F1040EZEarnedIncomeCreditWithNoValidation.TotalEIC>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">TotalEarnedIncomeCredit</mca:CSharpReference>
                            </OutArgument>
                          </local3:F1040EZEarnedIncomeCreditWithNoValidation.TotalEIC>
                        </local3:F1040EZEarnedIncomeCreditWithNoValidation>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.EarnedIncomeCredit</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double">TotalEarnedIncomeCredit</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
                <Sequence DisplayName="F1040EZLine8b - NonTaxableCombatPay" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Double" Name="NonTaxableCombatPayElectionTotal" />
                  </Sequence.Variables>
                  <local2:F1040EZNonTaxableCombatPay sap2010:WorkflowViewState.IdRef="F1040EZNonTaxableCombatPay_1">
                    <local2:F1040EZNonTaxableCombatPay.Tax1040Object>
                      <InOutArgument x:TypeArguments="jtb:Tax1040">
                        <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                      </InOutArgument>
                    </local2:F1040EZNonTaxableCombatPay.Tax1040Object>
                    <local2:F1040EZNonTaxableCombatPay.TotalNonTaxableCombatPayElection>
                      <OutArgument x:TypeArguments="x:Double">
                        <mca:CSharpReference x:TypeArguments="x:Double">NonTaxableCombatPayElectionTotal</mca:CSharpReference>
                      </OutArgument>
                    </local2:F1040EZNonTaxableCombatPay.TotalNonTaxableCombatPayElection>
                  </local2:F1040EZNonTaxableCombatPay>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">
                        <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.NonTaxableCombatPayElection</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">
                        <mca:CSharpValue x:TypeArguments="x:Double">NonTaxableCombatPayElectionTotal</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="F1040EZLine9- TotalPaymentsAndCredits" sap2010:WorkflowViewState.IdRef="Sequence_20">
                  <If DisplayName="If TaxesAndPenaltiesCheck" sap2010:WorkflowViewState.IdRef="If_8">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.TaxesAndPenalties != null &amp;&amp; Tax1040Object.TaxesAndPenalties.FederalExtensionAmount != null</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">
                            <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.FederalExtensionAmount</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">
                            <mca:CSharpValue x:TypeArguments="x:Double">(Tax1040Object.TaxesAndPenalties.FederalExtensionAmount.HasValue ? Tax1040Object.TaxesAndPenalties.FederalExtensionAmount.Value : 0)</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">
                        <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TotalPaymentsAndCredits</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">
                        <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.FederalTaxWithholdingAmount + Tax1040Object.OutputForms.Tax1040EZPage1.EarnedIncomeCredit+ Tax1040Object.OutputForms.Tax1040EZPage1.FederalExtensionAmount</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="F1040EZLine10- TaxAmount" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Double" Name="TaxAmountTotal" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">
                        <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxAmount</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">
                        <mca:CSharpValue x:TypeArguments="x:Double">JTL.Tax1040.Core.Process.TaxRateCalculation.TaxCalculation(Tax1040Object.PersonalDetails.PrimaryTaxPayer.FilingStatus, Tax1040Object.OutputForms.Tax1040EZPage1.TaxableIncome)</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <If sap2010:WorkflowViewState.IdRef="If_12">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.TaxesAndPenalties != null</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence DisplayName="Tax and Penalties" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <local3:F1040EZTaxesAndPenalties sap2010:WorkflowViewState.IdRef="F1040EZTaxesAndPenalties_1">
                        <local3:F1040EZTaxesAndPenalties.Tax1040Object>
                          <InOutArgument x:TypeArguments="jtb:Tax1040">
                            <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                          </InOutArgument>
                        </local3:F1040EZTaxesAndPenalties.Tax1040Object>
                      </local3:F1040EZTaxesAndPenalties>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">
                            <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.PenaltiesAndInterest</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">
                            <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.TaxesAndPenalties.PenaltiesAndInterest.HasValue ? Tax1040Object.TaxesAndPenalties.PenaltiesAndInterest.Value : 0</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                </If>
                <Sequence DisplayName="F1040EZLine11- RefundAmount &amp;&amp; F1040EZLine12- TaxOweAmount" sap2010:WorkflowViewState.IdRef="Sequence_24">
                  <If DisplayName="Refund Calculations" sap2010:WorkflowViewState.IdRef="If_9">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.OutputForms.Tax1040EZPage1.TotalPaymentsAndCredits &gt; Tax1040Object.OutputForms.Tax1040EZPage1.TaxAmount</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="Total Payment" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.RefundAmount</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TotalPaymentsAndCredits - Tax1040Object.OutputForms.Tax1040EZPage1.TaxAmount</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="" sap2010:WorkflowViewState.IdRef="Assign_25">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">Tax1040Object.OutputForms.TaxOweAmountPDF</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">string.Empty</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxOweAmount</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">0</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="TotalPaymentsAndCredits" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxOweAmount</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxAmount - Tax1040Object.OutputForms.Tax1040EZPage1.TotalPaymentsAndCredits</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <If sap2010:WorkflowViewState.IdRef="If_15">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.OutputForms.Tax1040EZPage1.TaxOweAmount &gt;0</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Assign DisplayName="" sap2010:WorkflowViewState.IdRef="Assign_26">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">Tax1040Object.OutputForms.TaxOweAmountPDF</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">"Total Line 12 $" + Math.Round(Tax1040Object.OutputForms.Tax1040EZPage1.TaxOweAmount, MidpointRounding.AwayFromZero).ToString()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Assign DisplayName="" sap2010:WorkflowViewState.IdRef="Assign_27">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">Tax1040Object.OutputForms.TaxOweAmountPDF</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">string.Empty</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.RefundAmount</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">0</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d5IBRDpcVGF4MTA0MEZlYXR1cmVCcmFuY2hcRmVhdHVyZVxDb2RlXEpUTC5UYXgxMDQwLkJ1c2luZXNzTG9naWNcV29ya0Zsb3dcQWN0aXZpdGllc1xDYWxjdWxhdGlvbldpdGhOb1ZhbGlkYXRpb25cRmVkZXJhbFN1bW1hcnlXaXRoTm9WYWxpZGF0aW9uLnhhbWzDAT8D1AYOAgEBQwXSBgoCAQJGC0ZeAgEDSgnQBhQCAQZLC2QWAwG9BWULzwYQAgEHTA1XFgMBxQVYDWMWAwG+BWgRaGsCAQhsD80GGgIBC1QTVGkDAckFTxNPeQMBxgVgE2BvAwHCBVsTW4sBAwG/BW0RqQEcAwGJBaoBEZ0CHAMB1QOeAhH/AhwDAfICgAMRkgMcAwHnApMDEbEDHAMB0wKyAxHUAxwDAcIC1QMRtgQcAwG7AbcEEfEEHAMBhAHyBBGOBRwCAXGPBRGxBRwCAV6yBRHCBRwCAVTDBRHgBRYCAUThBRHMBhwCAQxxE6gBGAMBigWzAUKzAUkDAdYDtQET0wEYAwHXBNQBE+8BGAMBqATwARP7ARwDAZEE/AEThwIcAwH6A4gCE5wCGAMB1wOkAhPSAhgDAZwD0wIT8gIYAwGAA/MCE/4CHAMB8wKEAxORAx4DAegClAMTsAMeAwHUArMDE9MDGAMBwwLcAxO1BB4DAbwBuwRDuwRKAwGFAb0EE80EQQMBqAHOBBPwBBgDAYYB9gQTgQU3AgF7ggUTjQUcAgFykAUTpAUYAgFmpQUTsAUcAgFftgUTwQUcAgFVxgUXxgV9AgFFygUV3gUgAgFI4gUTywYYAgENdBl0tQEDAYsFeBemASIDAY8FuAEZuAG/AQMB2AS8ARfRASIDAeME1wEZ1wG/AQMBqQTbARftASIDAbQE+AEZ+AF6AwGdBPMBGfMBlwEDAZIEhAIZhAKMAQMBhgT/ARn/AYsBAwH7A4sCGYsCiwEDAdgDjwIXmgIgAwHjA6cCGacCuwEDAZ0DqwIX0AIiAwGjA9YCGdYCfwMBgQPaAhfwAhwDAYcD+wIZ+wKFAQMB+gL2Ahn2AqABAwH0AoUDFZADHgMB6QKYAxWjAzcDAd4CpAMVrwMeAwHVArYDGbYD1AEDAcQCugMXxQMgAwHMAsgDF9EDIAMBxwLhAxXsAzcDAa8C7QMV+AM8AwGcAvkDFYQEPAMBiQKFBBWQBDcDAfYBkQQVnAQ4AwHjAZ0EFagEOAMB0AGpBBW0BB4DAb0BygQZygRvAwG1AcUEGcUEdQMBrwHABBnABJMBAwGpAdEEGdEEbQMBhwHVBBfuBCIDAY0B+QQZ+QRvAwGAAf4EGf4EfwIBfIoFGYoFdwIBd4UFGYUFowECAXOTBRmTBckBAgFnlwUXogUgAgFqrQUZrQWaAgIBY6gFGagFnwECAWC+BRm+BYUCAgFauQUZuQWRAQIBVssFF9EFOQIBUNIFF90FIAIBSeUFGeUF0AECAQ7pBReMBiICATCPBhfJBiICARF9GY0BNAMBqgWOARmZASIDAZ0FmgEZpQEiAwGQBcABGdABOgMB5ATcARnsAToDAbUElwIdlwJkAwHvA5ICHZICpwEDAeQDrAIZzwIkAwGkA90CHd0C5QEDAYgD4QIb7gImAwGOA40DG40DiwIDAe4CiAMbiAOdAQMB6gKbAxubA3EDAeMCoAMboAN3AwHfAqwDG6wDbwMB2gKnAxunA5sBAwHWAsIDHcID1AEDAdACvQMdvQOZAQMBzQLPA0LPA0MDAcsCywMdywOZAQMByALkAxvkA3EDAbkC6QMb6QN6AwGwAvADG/ADcQMBpgL1Axv1A4MBAwGdAvwDG/wDcQMBkwKBBBuBBIMBAwGKAo0EG40EgQEDAYACiAQbiARxAwH3AZQEG5QEcQMB7QGZBBuZBH8DAeQBpQQbpQR/AwHaAaAEG6AEcQMB0QGxBBuxBKECAwHHAawEG6wEpQEDAb4B1gQZ4QRMAwGbAeIEGe0EIgMBjgGfBR2fBd8BAgFumgUdmgWiAQIBa84FHc4FcwIBUdoFHdoF2QECAU3VBR3VBaABAgFK6gUZ9QUiAgE99gUZgQYiAgE2ggYZiwYiAgExkAYZmwYiAgEpnAYZvgYeAgEXvwYZyAYiAgEShQEfhQF1AwG3BYoBH4oBbwMBsQWAAR+AAXADAasFlgEflgFnAwGkBZEBH5EBmAEDAZ4FogEfogFoAwGXBZ0BH50BmQEDAZEFwwEfwwF1AwH9BM0BH80BfgMB8QTIAR/IAXUDAeUE6QEf6QF+AwHMBN8BH98BdQMBwQTkAR/kAXUDAbYEsAJKsAJUAwGlA7ICG8ICOgMBuQPDAhvOAiQDAaYD4gId7QI8AwGPA9kEH9kEdQMBogHeBB/eBHwDAZwB6gQf6gR0AwGVAeUEH+UEoAEDAY8B8gUf8gXSAQIBQe0FH+0FmgECAT7+BR/+BWkCATr5BR/5BY4BAgE3iQZEiQZFAgE1hQYfhQaaAQIBMpgGH5gG0gECAS2TBh+TBpoBAgEqnwYfnwaZAQIBGKMGHa4GJgIBIrEGHbwGJgIBG8YGRMYGRQIBFsIGH8IGmgECARO1AiG1AncDAcwDvwIhvwJ5AwHDA7oCIboCcgMBugPLAiHLAoIBAwGwA8YCIcYCqQEDAacD6gIj6gJ5AwGWA+UCI+UCggEDAZADqwYjqwbgAQIBJqYGI6YGkgECASO5BiO5Bm0CAR+0BiO0BpIBAgEc</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="989,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="W2WithNoValidation_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="842,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="F1099INTWithNoValidation_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,296">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="F1099OIDWithNoValidation_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,296">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="842,1212">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="F1099GWithNoValidation_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="286,372">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="589,522">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AlaskaWithNoValidation_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,296">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="589,446" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="589,62" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="842,1234">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="264,186">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="842,310">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="F1040EZStandardDeduction_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="842,372">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="509,212">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="842,336">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FW2FederalTaxWithholding_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="F1099INTFederalTaxWithholding_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="F1099OIDFederalTaxWithholding_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="F1099GFederalWithholding_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="FSSAFederalTaxWithHolding_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="FRRBFederalTaxWithHolding_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="264,558">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="842,682">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="F1040EZEICEligibilityRuleCheckWithAGI_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="F1040EZEarnedIncomeCreditWithNoValidation_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="464,398" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="842,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="F1040EZNonTaxableCombatPay_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="842,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="842,438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="842,186">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="F1040EZTaxesAndPenalties_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="842,398" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="264,390">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="509,62" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="509,212" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="509,62" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="531,540">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="820,690" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="842,814">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="864,8042">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="989,8192">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="1011,8644">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="1136,8794" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="1158,8918">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="JTL.Tax1040.BusinessLogic.WorkFlow.Activities.CalculationWithNoValidation.FederalSummaryWithNoValidation_1" sap:VirtualizedContainerService.HintSize="1198,8998" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>