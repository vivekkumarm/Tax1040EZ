<?xml version="1.0" encoding="utf-8"?>
<twa:FW2BusinessRuleValidation xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject" xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:twa="clr-namespace:Tax1040WorkFlow.WorkFlow.Activities;assembly=JTL.Tax1040.BusinessLogic" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Object</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>JTL.TAX1040.PaymentLibrary</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.PDFBinding</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <twa:FW2BusinessRuleValidation.Implementation>
    <Sequence DisplayName="W2BusinessValidation">
      <Sequence.Variables>
        <Variable x:TypeArguments="jtco:ErrorMessage" Name="ErrorMessage" />
        <Variable x:TypeArguments="scg:List(jtco:ErrorMessage)" Name="ErrorMessageList">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="jtb:W2" Name="W2" />
        <Variable x:TypeArguments="x:Double" Default="0.0145" Name="MedicareWagesAmountRange" />
        <Variable x:TypeArguments="jtb:W2EmployerCode" Name="W2EmployerCode" />
        <Variable x:TypeArguments="jtb:W2StateLocalTaxInfo" Name="FW2StateInfo" />
        <Variable x:TypeArguments="x:Double" Default="200000" Name="ExecptedMedicareWagAmount" />
        <Variable x:TypeArguments="x:Double" Default="200000" Name="MedicareWithheldLimit" />
        <Variable x:TypeArguments="x:Int32" Default="0" Name="EmployerCodeCount" />
        <Variable x:TypeArguments="x:Int32" Default="0" Name="DynamicControlIDForBR9" />
      </Sequence.Variables>
      <If DisplayName="If Tax1040Object">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object != null) &amp;&amp; (Tax1040Object.Income != null))</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <Sequence DisplayName="W2BusinessRule Check">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Double" Default="0.0235" Name="AdditionalMedicareWagesRange" />
              <Variable x:TypeArguments="x:Double" Default="1800" Name="HouseHoldLimit" />
            </Sequence.Variables>
            <If DisplayName="If W2Check">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.W2Wages !=null)&amp;&amp;(Tax1040Object.Income.W2Wages.Any()))</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence DisplayName="W2">
                  <ForEach x:TypeArguments="jtb:W2" DisplayName="ForEach&lt;W2&gt;">
                    <ForEach.Values>
                      <InArgument x:TypeArguments="scg:IEnumerable(jtb:W2)">
                        <mca:CSharpValue x:TypeArguments="scg:IEnumerable(jtb:W2)">Tax1040Object.Income.W2Wages</mca:CSharpValue>
                      </InArgument>
                    </ForEach.Values>
                    <ActivityAction x:TypeArguments="jtb:W2">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="jtb:W2" Name="W2" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="W2">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Double" Default="0" Name="TotalStateWagesAmount" />
                          <Variable x:TypeArguments="x:Double" Default="0" Name="TotalStateTaxwithholdingAmount" />
                          <Variable x:TypeArguments="x:Double" Default="117000" Name="MaxSocialSecurityWagesAmount" />
                          <Variable x:TypeArguments="x:Double" Default="7254" Name="MaxSocialSecurityWithHoldingAmount" />
                        </Sequence.Variables>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">
                              <mca:CSharpReference x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence DisplayName="Box2-Federal Withholding">
                          <If DisplayName="IfFederal WithholdingCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">(W2.FederalTaxWithholdingAmount.HasValue ? W2.FederalTaxWithholdingAmount.Value:0) &gt; (W2.WagesAmount.HasValue ? W2.WagesAmount.Value:0)</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.WAGES_FEDERAL_WITHHOLDING]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Box3-Social security Wages">
                          <If DisplayName="IfSocialSecurityWagesCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">((W2.SocialSecurityWagesAmount.HasValue ? W2.SocialSecurityWagesAmount.Value:0)+(W2.SocialSecurityTipsAmount.HasValue?W2.SocialSecurityTipsAmount.Value:0)) &gt; MaxSocialSecurityWagesAmount</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.SOCIAL_SECURITY_WAGES]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Box4-Social security Withheld">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Double" Default="0.062" Name="SSWagesAmountRange" />
                          </Sequence.Variables>
                          <If DisplayName="IfSocialSecurityWithheldCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean" xml:space="preserve">(((W2.SocialSecurityTaxWithholdingAmount.HasValue ? W2.SocialSecurityTaxWithholdingAmount.Value : 0 ) &gt; ((W2.SocialSecurityWagesAmount.HasValue ?W2.SocialSecurityWagesAmount.Value:0) * SSWagesAmountRange)) ||
((W2.SocialSecurityTaxWithholdingAmount.HasValue ? W2.SocialSecurityTaxWithholdingAmount.Value : 0)
                &gt; MaxSocialSecurityWithHoldingAmount))</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.SOCIAL_SECURITY_TAX]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Box6-Medicare Withheld">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Double" Name="TotalMedicareWitheld">
                              <Variable.Default>
                                <mca:CSharpValue x:TypeArguments="x:Double">200000 * 0.0145</mca:CSharpValue>
                              </Variable.Default>
                            </Variable>
                          </Sequence.Variables>
                          <If DisplayName="IfMedicare Withheld">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">(W2.MedicareWagesAmount.HasValue ? W2.MedicareWagesAmount.Value:0) &lt; MedicareWithheldLimit</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="MedicareWithheld">
                                <If DisplayName="IfMedicareWithheldCheck">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">(W2.MedicareTaxWithholdingAmount.HasValue ? W2.MedicareTaxWithholdingAmount.Value:0) &gt; ((W2.MedicareWagesAmount.HasValue ? W2.MedicareWagesAmount.Value:0) * MedicareWagesAmountRange)</mca:CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Sequence DisplayName="Error Message">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.MEDICARE_TAX_WITHHELD]</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int64">
                                            <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int64">
                                            <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                        <AddToCollection.Item>
                                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                          </InArgument>
                                        </AddToCollection.Item>
                                        <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                          <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                        </InArgument>
                                      </AddToCollection>
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <If DisplayName="IfMedicareWithheldCheck">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean" xml:space="preserve">(W2.MedicareTaxWithholdingAmount.HasValue ? W2.MedicareTaxWithholdingAmount.Value : 0) &gt;
((((W2.MedicareWagesAmount.HasValue ? W2.MedicareWagesAmount.Value : 0) - MedicareWithheldLimit)
 * AdditionalMedicareWagesRange) + TotalMedicareWitheld)</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Sequence DisplayName="Error Message">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Double" Name="TotalStaticMedicareWages" />
                                      <Variable x:TypeArguments="x:String" Name="variable3" />
                                    </Sequence.Variables>
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.MEDICARE_TAX_WITHHELD]</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int64">
                                          <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int64">
                                          <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                      <AddToCollection.Item>
                                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                        </InArgument>
                                      </AddToCollection.Item>
                                      <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                        <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Box8-Allocated Tips">
                          <If DisplayName="IfAllocatedTipsCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">W2.AllocatedTipsAmount.HasValue &amp;&amp; W2.AllocatedTipsAmount.Value &gt; 0</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.ALLOCATED_TIPS]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Box10-Dependent care Benefits">
                          <If DisplayName="IfDependentCareBenefitsCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">W2.DependentCareBenefitsAmount.HasValue &amp;&amp; W2.DependentCareBenefitsAmount.Value &gt; 0</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.DEPENDENT_CARE_BENEFITS]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Box12A, 12B, 12C, 12D-Eligibility &amp; Business Rule Check">
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">W2.W2EmployerCodes != null &amp;&amp; W2.W2EmployerCodes.Any()</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <ForEach x:TypeArguments="jtb:W2EmployerCode" DisplayName="ForEach&lt;W2EmployerCode&gt;">
                                <ForEach.Values>
                                  <InArgument x:TypeArguments="scg:IEnumerable(jtb:W2EmployerCode)">
                                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(jtb:W2EmployerCode)">W2.W2EmployerCodes</mca:CSharpValue>
                                  </InArgument>
                                </ForEach.Values>
                                <ActivityAction x:TypeArguments="jtb:W2EmployerCode">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="jtb:W2EmployerCode" Name="W2EmployerCode" />
                                  </ActivityAction.Argument>
                                  <Sequence>
                                    <Sequence DisplayName="W2 Employer Count">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <mca:CSharpReference x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">
                                            <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount+1</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                    <If DisplayName="If AUncollectedSocSecOrRRTATaxOnTips ER Check">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(W2EmployerCode.EmployerCode.HasValue &amp;&amp; W2EmployerCode.EmployerCode.Value == EmployerCode.AUncollectedSocSecOrRRTATaxOnTips) &amp;&amp; (W2EmployerCode.Amount.HasValue &amp;&amp; W2EmployerCode.Amount.Value &gt; 0)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:Int32" DisplayName="Switch &lt;Employer Code&gt;">
                                          <Switch.Expression>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpValue>
                                            </InArgument>
                                          </Switch.Expression>
                                          <Sequence x:Key="1" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12A_A_UNCOLLECTED_SOCIAL_SECURITY_OR_RRTA_TAX_ON_TIPS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="2" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12B_A_UNCOLLECTED_SOCIAL_SECURITY_OR_RRTA_TAX_ON_TIPS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="3" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12C_A_UNCOLLECTED_SOCIAL_SECURITY_OR_RRTA_TAX_ON_TIPS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="4" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12D_A_UNCOLLECTED_SOCIAL_SECURITY_OR_RRTA_TAX_ON_TIPS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                    </If>
                                    <If DisplayName="If BUncollectedMedicareTaxOnTips ER Check">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(W2EmployerCode.EmployerCode.HasValue&amp;&amp;W2EmployerCode.EmployerCode.Value==EmployerCode.BUncollectedMedicareTaxOnTips) &amp;&amp; (W2EmployerCode.Amount.HasValue &amp;&amp; W2EmployerCode.Amount.Value &gt; 0)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:Int32" DisplayName="Switch &lt;Employer Code&gt;">
                                          <Switch.Expression>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpValue>
                                            </InArgument>
                                          </Switch.Expression>
                                          <Sequence x:Key="1" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12A_B_UNCOLLECTED_MEDICARE_TAX_ON_TIPS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="2" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12B_B_UNCOLLECTED_MEDICARE_TAX_ON_TIPS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="3" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12C_B_UNCOLLECTED_MEDICARE_TAX_ON_TIPS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="4" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12D_B_UNCOLLECTED_MEDICARE_TAX_ON_TIPS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                    </If>
                                    <If DisplayName="If KExciseTaxOnExcessGoldenParachutePayments ER Check">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(W2EmployerCode.EmployerCode.HasValue &amp;&amp; W2EmployerCode.EmployerCode.Value ==EmployerCode.KExciseTaxOnExcessGoldenParachutePayments) &amp;&amp; (W2EmployerCode.Amount.HasValue &amp;&amp; W2EmployerCode.Amount.Value &gt; 0)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:Int32" DisplayName="Switch &lt;Employer Code&gt;">
                                          <Switch.Expression>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpValue>
                                            </InArgument>
                                          </Switch.Expression>
                                          <Sequence x:Key="1" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12A_K_EXCISE_TAX_ON_GOLDEN_PARACHUTE_PAYMENTS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="2" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12B_K_EXCISE_TAX_ON_GOLDEN_PARACHUTE_PAYMENTS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="3" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12C_K_EXCISE_TAX_ON_GOLDEN_PARACHUTE_PAYMENTS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="4" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12D_K_EXCISE_TAX_ON_GOLDEN_PARACHUTE_PAYMENTS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                    </If>
                                    <If DisplayName="If MUncollectedSocSecOrRRTATaxOnGroupTermsLifeIns ER Check">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(W2EmployerCode.EmployerCode.HasValue &amp;&amp; W2EmployerCode.EmployerCode.Value ==EmployerCode.MUncollectedSocSecOrRRTATaxOnGrpTermsLifeIns) &amp;&amp; (W2EmployerCode.Amount.HasValue &amp;&amp; W2EmployerCode.Amount.Value &gt; 0)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:Int32" DisplayName="Switch &lt;Employer Code&gt;">
                                          <Switch.Expression>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpValue>
                                            </InArgument>
                                          </Switch.Expression>
                                          <Sequence x:Key="1" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12A_M_UNCOLLECTED_SOCIAL_SECURITY_OR_RRTA_TAX_ON_TAXABLE_GROUP]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="2" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12B_M_UNCOLLECTED_SOCIAL_SECURITY_OR_RRTA_TAX_ON_TAXABLE_GROUP]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="3" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12C_M_UNCOLLECTED_SOCIAL_SECURITY_OR_RRTA_TAX_ON_TAXABLE_GROUP]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="4" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12D_M_UNCOLLECTED_SOCIAL_SECURITY_OR_RRTA_TAX_ON_TAXABLE_GROUP]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                    </If>
                                    <If DisplayName="If NUncollectedMedicareTaxOnGroupTermLifeInsurance ER Check">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(W2EmployerCode.EmployerCode.HasValue &amp;&amp; W2EmployerCode.EmployerCode.Value == EmployerCode.NUncollectedMedicareTaxOnGroupTermLifeInsurance) &amp;&amp; (W2EmployerCode.Amount.HasValue &amp;&amp; W2EmployerCode.Amount.Value &gt; 0)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:Int32" DisplayName="Switch &lt;Employer Code&gt;">
                                          <Switch.Expression>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpValue>
                                            </InArgument>
                                          </Switch.Expression>
                                          <Sequence x:Key="1" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12A_N_UNCOLLECTED_MEDICARE_TAX_ON_TAXABLE_GROUP]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="2" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12B_N_UNCOLLECTED_MEDICARE_TAX_ON_TAXABLE_GROUP]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="3" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12C_N_UNCOLLECTED_MEDICARE_TAX_ON_TAXABLE_GROUP]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="4" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12D_N_UNCOLLECTED_MEDICARE_TAX_ON_TAXABLE_GROUP]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                    </If>
                                    <If DisplayName="If ZCompensation Plan  ER Check">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(W2EmployerCode.EmployerCode.HasValue &amp;&amp; W2EmployerCode.EmployerCode.Value == EmployerCode.ZIncomeReceivedUnder409ANonQualifiedDeferredCompensationPlan) &amp;&amp; (W2EmployerCode.Amount.HasValue &amp;&amp; W2EmployerCode.Amount.Value &gt; 0)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:Int32" DisplayName="Switch &lt;Employer Code&gt;">
                                          <Switch.Expression>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpValue>
                                            </InArgument>
                                          </Switch.Expression>
                                          <Sequence x:Key="1" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12A_Z_INCOME_RECEIVED_UNDER_409A]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="2" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12B_Z_INCOME_RECEIVED_UNDER_409A]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="3" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12C_Z_INCOME_RECEIVED_UNDER_409A]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="4" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12D_Z_INCOME_RECEIVED_UNDER_409A]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                    </If>
                                    <If DisplayName="If REmployeeContributionsToAnArcherMSA BR Check">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">W2EmployerCode.EmployerCode.HasValue &amp;&amp; W2EmployerCode.EmployerCode.Value == EmployerCode.REmployeeContributionsToAnArcherMSA</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:Int32" DisplayName="Switch &lt;Employer Code&gt;">
                                          <Switch.Expression>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpValue>
                                            </InArgument>
                                          </Switch.Expression>
                                          <Sequence x:Key="1" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12A_R_EMPLOYER_CONTRIBUTIONS_TO_ARCHER_MEDICAL]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="2" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12B_R_EMPLOYER_CONTRIBUTIONS_TO_ARCHER_MEDICAL]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="3" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12C_R_EMPLOYER_CONTRIBUTIONS_TO_ARCHER_MEDICAL]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="4" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12D_R_EMPLOYER_CONTRIBUTIONS_TO_ARCHER_MEDICAL]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                    </If>
                                    <If DisplayName="If TEmployerPaidAdoptionBenefits BR Check">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">W2EmployerCode.EmployerCode.HasValue &amp;&amp; W2EmployerCode.EmployerCode.Value == EmployerCode.TAdoptionBenefits</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:Int32" DisplayName="Switch &lt;Employer Code&gt;">
                                          <Switch.Expression>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpValue>
                                            </InArgument>
                                          </Switch.Expression>
                                          <Sequence x:Key="1" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12A_T_EMPLOYER_PAID_ADOPTION_BENEFITS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="2" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12B_T_EMPLOYER_PAID_ADOPTION_BENEFITS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="3" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12C_T_EMPLOYER_PAID_ADOPTION_BENEFITS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="4" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12D_T_EMPLOYER_PAID_ADOPTION_BENEFITS]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                    </If>
                                    <If DisplayName="If WEmployerAndEmployeeContributionsToAHealthSavingsAccount  BR Check">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">W2EmployerCode.EmployerCode.HasValue &amp;&amp; W2EmployerCode.EmployerCode.Value == EmployerCode.WEmployerAndEmployeeContributionsToAHealthSavingsAccount</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Switch x:TypeArguments="x:Int32" DisplayName="Switch &lt;Employer Code&gt;">
                                          <Switch.Expression>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpValue x:TypeArguments="x:Int32">EmployerCodeCount</mca:CSharpValue>
                                            </InArgument>
                                          </Switch.Expression>
                                          <Sequence x:Key="1" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12A_W_EMPLOYER_AND_EMPLOYEE_CONTRIBUTIONS_TO_HEALTH]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="2" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12B_W_EMPLOYER_AND_EMPLOYEE_CONTRIBUTIONS_TO_HEALTH]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="3" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12C_W_EMPLOYER_AND_EMPLOYEE_CONTRIBUTIONS_TO_HEALTH]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                          <Sequence x:Key="4" DisplayName="Error Message">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.BOX12D_W_EMPLOYER_AND_EMPLOYEE_CONTRIBUTIONS_TO_HEALTH]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </Switch>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ForEach>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Foriegn employment eligibility Check">
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">W2.HasForeignEmployment.HasValue &amp;&amp; W2.HasForeignEmployment.Value == true</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.FOREIGN_EMPLOYMENT_MUST_REPORT]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int64">
                                      <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="State Wages">
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">((W2.W2StateLocalTaxInfo != null) &amp;&amp; (W2.W2StateLocalTaxInfo.Any()))</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="StateLocalTaxInfo">
                                <ForEach x:TypeArguments="jtb:W2StateLocalTaxInfo" DisplayName="ForEach&lt;W2StateLocalTaxInfo&gt;">
                                  <ForEach.Values>
                                    <InArgument x:TypeArguments="scg:IEnumerable(jtb:W2StateLocalTaxInfo)">
                                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(jtb:W2StateLocalTaxInfo)">W2.W2StateLocalTaxInfo</mca:CSharpValue>
                                    </InArgument>
                                  </ForEach.Values>
                                  <ActivityAction x:TypeArguments="jtb:W2StateLocalTaxInfo">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="jtb:W2StateLocalTaxInfo" Name="FW2StateInfo" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="StateWages">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">
                                            <mca:CSharpReference x:TypeArguments="x:Double">TotalStateWagesAmount</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">
                                            <mca:CSharpValue x:TypeArguments="x:Double">(FW2StateInfo.StateWagesAmount.HasValue ? FW2StateInfo.StateWagesAmount.Value:0) + TotalStateWagesAmount</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If DisplayName="Business Rule # 8 check">
                                        <If.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpValue x:TypeArguments="x:Boolean">((FW2StateInfo.StateWagesAmount.HasValue ? FW2StateInfo.StateWagesAmount.Value : 0) &gt; (W2.WagesAmount.HasValue ? W2.WagesAmount.Value : 0))</mca:CSharpValue>
                                          </InArgument>
                                        </If.Condition>
                                        <If.Then>
                                          <Sequence DisplayName="Error Message">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="variable1" />
                                            </Sequence.Variables>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.WAGES_STATE_LOCAL_STATE_WAGES_NOT_MORE_THAN_FEDERAL_WAGES]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <mca:CSharpReference x:TypeArguments="x:String">ErrorMessage.FieldName</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">ErrorMessage.FieldName + DynamicControlIDForBR9.ToString()</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                      <If DisplayName="Business Rule # 9 check">
                                        <If.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpValue x:TypeArguments="x:Boolean" xml:space="preserve">((FW2StateInfo.StateTaxWithholdingAmount.HasValue ? FW2StateInfo.StateTaxWithholdingAmount.Value : 0) &gt; (W2.WagesAmount.HasValue ? W2.WagesAmount.Value : 0)) ||
((FW2StateInfo.StateTaxWithholdingAmount.HasValue ? FW2StateInfo.StateTaxWithholdingAmount.Value : 0) &gt; (FW2StateInfo.StateWagesAmount.HasValue ? FW2StateInfo.StateWagesAmount.Value : 0))</mca:CSharpValue>
                                          </InArgument>
                                        </If.Condition>
                                        <If.Then>
                                          <Sequence DisplayName="Error Message">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="variable1" />
                                            </Sequence.Variables>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.WAGES_STATE_TAX_WITHHELD]</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <mca:CSharpReference x:TypeArguments="x:String">ErrorMessage.FieldName</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String">ErrorMessage.FieldName + DynamicControlIDForBR9.ToString()</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int64">
                                                  <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                              <AddToCollection.Item>
                                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                                </InArgument>
                                              </AddToCollection.Item>
                                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                              </InArgument>
                                            </AddToCollection>
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <mca:CSharpReference x:TypeArguments="x:Int32">DynamicControlIDForBR9</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">
                                            <mca:CSharpValue x:TypeArguments="x:Int32">DynamicControlIDForBR9 +1</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ForEach>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="Box17-State Income Tax withheld">
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">((W2.W2StateLocalTaxInfo !=null) &amp;&amp; (W2.W2StateLocalTaxInfo.Any()))</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="State Withholding">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:Int32" Default="0" Name="DynamicControlID" />
                                </Sequence.Variables>
                                <ForEach x:TypeArguments="jtb:W2StateLocalTaxInfo" DisplayName="ForEach&lt;W2StateLocalTaxInfo&gt;">
                                  <ForEach.Values>
                                    <InArgument x:TypeArguments="scg:IEnumerable(jtb:W2StateLocalTaxInfo)">
                                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(jtb:W2StateLocalTaxInfo)">W2.W2StateLocalTaxInfo</mca:CSharpValue>
                                    </InArgument>
                                  </ForEach.Values>
                                  <ActivityAction x:TypeArguments="jtb:W2StateLocalTaxInfo">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="jtb:W2StateLocalTaxInfo" Name="FW2StateInfo" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="StateTaxWithHold">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">
                                            <mca:CSharpReference x:TypeArguments="x:Double">TotalStateTaxwithholdingAmount</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">
                                            <mca:CSharpValue x:TypeArguments="x:Double">(FW2StateInfo.StateTaxWithholdingAmount.HasValue ? FW2StateInfo.StateTaxWithholdingAmount.Value:0) + TotalStateTaxwithholdingAmount</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <mca:CSharpReference x:TypeArguments="x:Int32">DynamicControlID</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">
                                            <mca:CSharpValue x:TypeArguments="x:Int32">DynamicControlID +1</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ForEach>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="House Hold ">
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">((W2.Employer!=null&amp;&amp;W2.Employer.HouseholdEmployeeWages!=null))</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <If>
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean">W2.Employer.HouseholdEmployeeWages&gt;HouseHoldLimit</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Sequence DisplayName="Error Message">
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.HOUSEHOLD_EMPLOYEE_WAGES]</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int64">
                                          <mca:CSharpReference x:TypeArguments="x:Int64">ErrorMessage.FormId</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int64">
                                          <mca:CSharpValue x:TypeArguments="x:Int64">W2.W2Id</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                      <AddToCollection.Item>
                                        <InArgument x:TypeArguments="jtco:ErrorMessage">
                                          <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                        </InArgument>
                                      </AddToCollection.Item>
                                      <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                        <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </If.Then>
                          </If>
                        </Sequence>
                      </Sequence>
                    </ActivityAction>
                  </ForEach>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                        <mca:CSharpReference x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                        <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </If.Then>
      </If>
      <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
    </Sequence>
  </twa:FW2BusinessRuleValidation.Implementation>
</twa:FW2BusinessRuleValidation>