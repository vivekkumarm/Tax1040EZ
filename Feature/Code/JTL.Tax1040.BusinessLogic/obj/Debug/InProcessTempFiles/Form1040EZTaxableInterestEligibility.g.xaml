<?xml version="1.0" encoding="utf-8"?>
<twa:Form1040EZTaxableInterestEligibility xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject" xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:twa="clr-namespace:Tax1040WorkFlow.WorkFlow.Activities;assembly=JTL.Tax1040.BusinessLogic" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Object</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <twa:Form1040EZTaxableInterestEligibility.Implementation>
    <Sequence DisplayName="TaxableInterest Eligibility">
      <Sequence.Variables>
        <Variable x:TypeArguments="jtco:ErrorMessage" Name="ErrorMessage" />
        <Variable x:TypeArguments="scg:List(jtco:ErrorMessage)" Name="ErrorMessageList">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:Double" Default="100000" Name="TaxableIncomeLimit" />
        <Variable x:TypeArguments="x:Double" Default="1500" Name="TaxableInterestLimit" />
      </Sequence.Variables>
      <Sequence DisplayName="TaxPayerFiling">
        <If DisplayName="If Tax1040ObjectCheck">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object != null) &amp;&amp; (Tax1040Object.OutputForms != null))</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <If DisplayName="IfTax1040EZPage1Check">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.OutputForms.Tax1040EZPage1 !=null</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence DisplayName="Tax Eligibility">
                  <If DisplayName="TaxableIncomeCheck">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableIncome &lt; TaxableIncomeLimit</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Else>
                      <Sequence DisplayName="Error Message">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.TAXABLE_INCOME]</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                          <AddToCollection.Item>
                            <InArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                            <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection>
                      </Sequence>
                    </If.Else>
                  </If>
                  <If DisplayName="TaxableInterestCheck">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableInterest &lt; TaxableInterestLimit</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Else>
                      <Sequence DisplayName="Error Message">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.INTEREST_INCOME]</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                          <AddToCollection.Item>
                            <InArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                            <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection>
                      </Sequence>
                    </If.Else>
                  </If>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                        <mca:CSharpReference x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                        <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
          </If.Then>
        </If>
      </Sequence>
      <sads:DebugSymbol.Symbol>d5kBRTpcVGF4MTA0MEVaXEplZXZhbjEwNDBcUE9DXFdvcmtGbG93XFRheDEwNDBXRlJ1bGVzYW5kQ2FsY3VsYXRpb25cSlRMLlRheDEwNDAuQnVzaW5lc3NMb2dpY1xXb3JrRmxvd1xBY3Rpdml0aWVzXEZvcm0xMDQwRVpUYXhhYmxlSW50ZXJlc3RFbGlnaWJpbGl0eS54YW1sHzYDpgEOAgEBOws7dwIBBD40PjwCAQM/ND86AgECQQWkARACAQtCB6MBDAIBDEUNRZQBAgENSQuhARACARRMEUx/AgEVUA+fARoCARxREXEWAgFTchGSARYCASyTARGeARoCAR1UF1SkAQIBVFgVbyACAVt1F3WoAQIBLXkVkAEgAgE0mwEXmwF4AgEllgEXlgGLAQIBHlkXZCACAWtlF24pAgFceheFASACAUSGARePASkCATVhHWGLAQIBc1wdXHgCAWxsG2yDAQIBZGgdaHACAV2CAR2CAYwBAgFMfR19eAIBRY0BG40BgwECAT2JAR2JAXACATY=</sads:DebugSymbol.Symbol>
    </Sequence>
  </twa:Form1040EZTaxableInterestEligibility.Implementation>
</twa:Form1040EZTaxableInterestEligibility>