<?xml version="1.0" encoding="utf-8"?>
<jtbwa:F1040EZEarnedIncomeCreditWithNoValidation xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject" xmlns:jtbwa="clr-namespace:JTL.Tax1040.BusinessLogic.WorkFlow.Activities;assembly=JTL.Tax1040.BusinessLogic" xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object" xmlns:local="clr-namespace:Tax1040WorkFlow.WorkFlow.Activities;assembly=JTL.Tax1040.BusinessLogic" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scc="clr-namespace:System.Collections.Concurrent;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>System.Collections.Concurrent</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.PDFBinding</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <jtbwa:F1040EZEarnedIncomeCreditWithNoValidation.Implementation>
    <Sequence DisplayName="EarnedIncomeCreditCalculation">
      <Sequence.Variables>
        <Variable x:TypeArguments="scc:ConcurrentDictionary(x:Int32, x:Int32)" Name="Form1040ezEICCollection">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="scc:ConcurrentDictionary(x:Int32, x:Int32)" xml:space="preserve">new ConcurrentDictionary&lt;int, int&gt;(
       new Dictionary&lt;int, int&gt;
       {
 {1,2},{50,6},{100,10},{150,13},{200,17},{250,21},{300,25},{350,29},{400,33},{450,36},{500,40},{550,44},{600,48},{650,52},{700,55},{750,59},{800,63},
{850,67},{900,71},{950,75},{1000,78},{1050,82},{1100,86},{1150,90},{1200,94},{1250,98},{1300,101},{1350,105},{1400,109},{1450,113},{1500,117},{1550,120},
{1600,124},{1650,128},{1700,132},{1750,136},{1800,140},{1850,143},{1900,147},{1950,151},{2000,155},{2050,159},{2100,163},{2150,166},{2200,170},{2250,174},
{2300,178},{2350,182},{2400,186},{2450,189},{2500,193},{2550,197},{2600,201},{2650,205},{2700,208},{2750,212},{2800,216},{2850,220},{2900,224},{2950,228},
{3000,231},{3050,235},{3100,239},{3150,243},{3200,247},{3250,251},{3300,254},{3350,258},{3400,262},{3450,266},{3500,270},{3550,273},{3600,277},{3650,281},
{3700,285},{3750,289},{3800,293},{3850,296},{3900,300},{3950,304},{4000,308},{4050,312},{4100,316},{4150,319},{4200,323},{4250,327},{4300,331},{4350,335},
{4400,339},{4450,342},{4500,346},{4550,350},{4600,354},{4650,358},{4700,361},{4750,365},{4800,369},{4850,373},{4900,377},{4950,381},{5000,384},{5050,388},
{5100,392},{5150,396},{5200,400},{5250,404},{5300,407},{5350,411},{5400,415},{5450,419},{5500,423},{5550,426},{5600,430},{5650,434},{5700,438},{5750,442},
{5800,446},{5850,449},{5900,453},{5950,457},{6000,461},{6050,465},{6100,469},{6150,472},{6200,476},{6250,480},{6300,484},{6350,487},{6400,487},{6450,487},
{6500,487},{6550,487},{6600,487},{6650,487},{6700,487},{6750,487},{6800,487},{6850,487},{6900,487},{6950,487},{7000,487},{7050,487},{7100,487},{7150,487},
{7200,487},{7250,487},{7300,487},{7350,487},{7400,487},{7450,487},{7500,487},{7550,487},{7600,487},{7650,487},{7700,487},{7750,487},{7800,487},{7850,487},
{7900,487},{7950,487},{8000,483},{8050,479},{8100,475},{8150,472},{8200,468},{8250,464},{8300,460},{8350,456},{8400,452},{8450,449},{8500,445},{8550,441},
{8600,437},{8650,433},{8700,430},{8750,426},{8800,422},{8850,418},{8900,414},{8950,410},{9000,407},{9050,403},{9100,399},{9150,395},{9200,391},{9250,387},
{9300,384},{9350,380},{9400,376},{9450,372},{9500,368},{9550,365},{9600,361},{9650,357},{9700,353},{9750,349},{9800,345},{9850,342},{9900,338},{9950,334},
{10000,330},{10050,326},{10100,322},{10150,319},{10200,315},{10250,311},{10300,307},{10350,303},{10400,299},{10450,296},{10500,292},{10550,288},{10600,284},
{10650,280},{10700,277},{10750,273},{10800,269},{10850,265},{10900,261},{10950,257},{11000,254},{11050,250},{11100,246},{11150,242},{11200,238},{11250,234},
{11300,231},{11350,227},{11400,223},{11450,219},{11500,215},{11550,212},{11600,208},{11650,204},{11700,200},{11750,196},{11800,192},{11850,189},{11900,185},
{11950,181},{12000,177},{12050,173},{12100,169},{12150,166},{12200,162},{12250,158},{12300,154},{12350,150},{12400,146},{12450,143},{12500,139},{12550,135},
{12600,131},{12650,127},{12700,124},{12750,120},{12800,116},{12850,112},{12900,108},{12950,104},{13000,101},{13050,97},{13100,93},{13150,89},{13200,85},{13250,81},
{13300,78},{13350,74},{13400,70},{13450,66},{13500,62},{13550,59},{13600,55},{13650,51},{13700,47},{13750,43},{13800,39},{13850,36},{13900,32},{13950,28},{14000,24},
{14050,20},{14100,16},{14150,13},{14200,9},{14250,5},{14300,2},{14350,2},{14400,0},{14450,0},{14500,0},{14550,0},{14600,0},{14650,0},{14700,0},{14750,0},{14800,0},
{14850,0},{14900,0},{14950,0},{15000,0},{15050,0},{15100,0},{15150,0},{15200,0},{15250,0},{15300,0},{15350,0},{15400,0},{15450,0},{15500,0},{15550,0},{15600,0},
{15650,0},{15700,0},{15750,0},{15800,0},{15850,0},{15900,0},{15950,0},{16000,0},{16050,0},{16100,0},{16150,0},{16200,0},{16250,0},{16300,0},{16350,0},{16400,0},
{16450,0},{16500,0},{16550,0},{16600,0},{16650,0},{16700,0},{16750,0},{16800,0},{16850,0},{16900,0},{16950,0},{17000,0},{17050,0},{17100,0},{17150,0},{17200,0},
{17250,0},{17300,0},{17350,0},{17400,0},{17450,0},{17500,0},{17550,0},{17600,0},{17650,0},{17700,0},{17750,0},{17800,0},{17850,0},{17900,0},{17950,0},{18000,0},
{18050,0},{18100,0},{18150,0},{18200,0},{18250,0},{18300,0},{18350,0},{18400,0},{18450,0},{18500,0},{18550,0},{18600,0},{18650,0},{18700,0},{18750,0},{18800,0},
{18850,0},{18900,0},{18950,0},{19000,0},{19050,0},{19100,0},{19150,0},{19200,0},{19250,0},{19300,0},{19350,0},{19400,0},{19450,0},{19500,0},{19550,0},{19600,0},
{19650,0},{19680,0}
       }
    );</mca:CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:Double" Default="0.1" Name="Range1TaxRate" />
        <Variable x:TypeArguments="scc:ConcurrentDictionary(x:Int32, x:Int32)" Name="Form1040ezMFJEICCollection">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="scc:ConcurrentDictionary(x:Int32, x:Int32)" xml:space="preserve">new ConcurrentDictionary&lt;int, int&gt;(
       new Dictionary&lt;int, int&gt;
       {
{1,2},

{50,6},

{100,10},{150,13},{200,17},
{250,21},{300,25},{350,29},
{400,33},{450,36},{500,40},
{550,44},{600,48},{650,52},
{700,55},{750,59},{800,63},
{850,67},{900,71},{950,75},

{1000,78},{1050,82},{1100,86},
{1150,90},{1200,94},{1250,98},

{1300,101},{1350,105},{1400,109},
{1450,113},{1500,117},{1550,120},
{1600,124},{1650,128},{1700,132},
{1750,136},{1800,140},{1850,143},
{1900,147},{1950,151},{2000,155},
{2050,159},{2100,163},{2150,166},
{2200,170},{2250,174},{2300,178},
{2350,182},{2400,186},{2450,189},
{2500,193},{2550,197},{2600,201},
{2650,205},{2700,208},{2750,212},
{2800,216},{2850,220},{2900,224},

{2950,228},{3000,231},{3050,235},
{3100,239},{3150,243},{3200,247},
{3250,251},{3300,254},{3350,258},
{3400,262},{3450,266},{3500,270},
{3550,273},{3600,277},{3650,281},
{3700,285},{3750,289},{3800,293},
{3850,296},{3900,300},{3950,304},
{4000,308},{4050,312},{4100,316},
{4150,319},{4200,323},{4250,327},
{4300,331},{4350,335},{4400,339},
{4450,342},{4500,346},{4550,350},
{4600,354},{4650,358},{4700,361},
{4750,365},{4800,369},{4850,373},
{4900,377},{4950,381},{5000,384},
{5050,388},{5100,392},{5150,396},

{5200,400},{5250,404},{5300,407},
{5350,411},{5400,415},{5450,419},
{5500,423},{5550,426},{5600,430},
{5650,434},{5700,438},{5750,442},
{5800,446},{5850,449},{5900,453},
{5950,457},{6000,461},{6050,465},
{6100,469},{6150,472},{6200,476},
{6250,480},{6300,484},{6350,487},
{6400,487},{6450,487},{6500,487},
{6550,487},{6600,487},{6650,487},
{6700,487},{6750,487},{6800,487},
{6850,487},{6900,487},{6950,487},

{7000,487},{7050,487},{7100,487},
{7150,487},{7200,487},{7250,487},
{7300,487},{7350,487},{7400,487},
{7450,487},{7500,487},{7550,487},
{7600,487},{7650,487},{7700,487},
{7750,487},{7800,487},{7850,487},
{7900,487},{7950,487},{8000,487},
{8050,487},{8100,487},{8150,487},
{8200,487},{8250,487},{8300,487},
{8350,487},{8400,487},{8450,487},

{8500,487},{8550,487},{8600,487},
{8650,487},{8700,487},{8750,487},
{8800,487},{8850,487},{8900,487},
{8950,487},{9000,487},{9050,487},
{9100,487},{9150,487},{9200,487},
{9250,387},{9300,487},{9350,487},
{9400,487},{9450,487},{9500,487},
{9550,487},{9600,487},{9650,487},
{9700,487},{9750,487},{9800,487},
{9850,487},{9900,487},{9950,487},


{10000,487},{10050,487},{10100,487},
{10150,487},{10200,487},{10250,487},
{10300,487},{10350,487},{10400,487},
{10450,487},{10500,487},{10550,487},
{10600,487},{10650,487},{10700,487},
{10750,487},{10800,487},{10850,487},
{10900,487},{10950,487},{11000,487},
{11050,487},{11100,487},{11150,487},
{11200,487},{11250,487},{11300,487},
{11350,487},{11400,487},{11450,487},
{11500,487},{11550,487},{11600,487},
{11650,487},{11700,487},{11750,487},
{11800,487},{11850,487},{11900,487},
{11950,487},{12000,487},{12050,487},
{12100,487},{12150,487},{12200,487},
{12250,487},{12300,487},{12350,487},
{12400,487},{12450,487},{12500,487},
{12550,487},{12600,487},{12650,487},
{12700,487},{12750,487},{12800,487},
{12850,487},{12900,487},{12950,487},
{13000,487},{13050,487},{13100,487},
{13150,487},{13200,487},{13250,487},

{13300,487},{13350,482},{13400,479},
{13450,475},{13500,471},{13550,467},
{13600,463},{13650,459},{13700,456},
{13750,452},{13800,448},{13850,444},
{13900,440},{13950,436},{14000,433},
{14050,429},{14100,425},{14150,421},
{14200,417},{14250,413},{14300,410},
{14350,406},{14400,402},{14450,398},
{14500,394},{14550,391},{14600,387},
{14650,383},{14700,379},{14750,375},
{14800,371},{14850,368},{14900,364},
{14950,360},{15000,356},{15050,352},
{15100,348},{15150,345},{15200,341},
{15250,337},{15300,333},{15350,329},
{15400,326},{15450,322},{15500,318},
{15550,314},{15600,310},{15650,306},
{15700,303},{15750,299},{15800,295},
{15850,291},{15900,287},{15950,283},

{16000,280},{16050,276},{16100,272},
{16150,268},{16200,264},{16250,260},
{16300,257},{16350,253},{16400,249},
{16450,245},{16500,241},{16550,238},
{16600,234},{16650,230},{16700,226},
{16750,222},{16800,218},{16850,215},
{16900,211},{16950,207},{17000,203},
{17050,199},{17100,195},{17150,192},
{17200,188},{17250,184},{17300,180},
{17350,176},{17400,173},{17450,169},
{17500,165},{17550,161},{17600,157},
{17650,153},{17700,150},{17750,146},
{17800,142},{17850,138},{17900,134},
{17950,130},{18000,127},{18050,123},
{18100,119},{18150,115},{18200,111},
{18250,107},{18300,104},{18350,100},

{18400,96},{18450,92},{18500,88},
{18550,85},{18600,81},{18650,77},
{18700,73},{18750,69},{18800,65},
{18850,62},{18900,58},{18950,54},
{19000,50},{19050,46},{19100,42},
{19150,39},{19200,35},{19250,31},
{19300,27},{19350,23},{19400,20},
{19450,16},{19500,12},

{19550,8},{19600,4},
{19650,1},{19680,1}

	}
  );</mca:CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="jtco:EmployerCode" Name="W2EmployerCode" />
        <Variable x:TypeArguments="x:Double" Name="TaxableScholarShipTotal" />
        <Variable x:TypeArguments="x:Double" Name="PensionAnnuityTotal" />
        <Variable x:TypeArguments="x:Double" Name="PenalInstitutionIncomeTotal" />
        <Variable x:TypeArguments="jtb:EIC" Name="EIC" />
        <Variable x:TypeArguments="jtb:W2" Name="W2" />
        <Variable x:TypeArguments="x:Double" Name="Line8Step2W2NonQualifiedPlansTotal" />
        <Variable x:TypeArguments="x:Double" Name="Line8Step2EarnedIncome" />
        <Variable x:TypeArguments="x:Double" Name="Line8Step2W2NonQualifiedPlans" />
        <Variable x:TypeArguments="x:Double" Name="Line8Step2W2NonTaxableCombatPay" />
        <Variable x:TypeArguments="x:Double" Default="7800" Name="EICSingleLimit" />
      </Sequence.Variables>
      <If DisplayName="If Tax1040Object Check">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object != null)</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <Sequence DisplayName="EIC Eligibility">
            <Sequence DisplayName="Initialization">
              <If DisplayName="If-Null Condition Check">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.F1040EZ==null)</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="F1040EZ Instance Creation">
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="jtb:F1040EZ">
                          <mca:CSharpReference x:TypeArguments="jtb:F1040EZ">Tax1040Object.F1040EZ</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="jtb:F1040EZ">
                          <mca:CSharpValue x:TypeArguments="jtb:F1040EZ">new F1040EZ()</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="jtb:F1040EZWorkSheets">
                          <mca:CSharpReference x:TypeArguments="jtb:F1040EZWorkSheets">Tax1040Object.F1040EZ.F1040EZWorkSheets</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="jtb:F1040EZWorkSheets">
                          <mca:CSharpValue x:TypeArguments="jtb:F1040EZWorkSheets">new F1040EZWorkSheets()</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="jtb:EICWorkSheet">
                          <mca:CSharpReference x:TypeArguments="jtb:EICWorkSheet">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="jtb:EICWorkSheet">
                          <mca:CSharpValue x:TypeArguments="jtb:EICWorkSheet">new EICWorkSheet()</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <If DisplayName="If - F1040EZWorksheet Object Null Check">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.F1040EZ.F1040EZWorkSheets==null)</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="F1040EZWorkSheets Instance Creation">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="jtb:F1040EZWorkSheets">
                              <mca:CSharpReference x:TypeArguments="jtb:F1040EZWorkSheets">Tax1040Object.F1040EZ.F1040EZWorkSheets</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="jtb:F1040EZWorkSheets">
                              <mca:CSharpValue x:TypeArguments="jtb:F1040EZWorkSheets">new F1040EZWorkSheets()</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                </If.Else>
              </If>
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="jtb:EICWorkSheet">
                    <mca:CSharpReference x:TypeArguments="jtb:EICWorkSheet">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="jtb:EICWorkSheet">
                    <mca:CSharpValue x:TypeArguments="jtb:EICWorkSheet">new EICWorkSheet()</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <If DisplayName="If - Credits Object Null Check">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.Credits!=null) &amp;&amp; (Tax1040Object.Credits.HasEarnedIncomeCredits.HasValue)</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Nullable(x:Boolean)">
                        <mca:CSharpReference x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.F1040EZ.F1040EZWorkSheets.IsEICWorkSheetRequired</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                        <mca:CSharpValue x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.Credits.HasEarnedIncomeCredits.Value</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </Sequence>
            <If DisplayName="If PrimaryTaxPayer Check">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.PersonalDetails != null) &amp;&amp; (Tax1040Object.PersonalDetails.PrimaryTaxPayer != null))</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence DisplayName="EIC FilingStatusCheck">
                  <Switch x:TypeArguments="jtco:FilingStatus">
                    <Switch.Expression>
                      <InArgument x:TypeArguments="jtco:FilingStatus">
                        <mca:CSharpValue x:TypeArguments="jtco:FilingStatus">Tax1040Object.PersonalDetails.PrimaryTaxPayer.FilingStatus</mca:CSharpValue>
                      </InArgument>
                    </Switch.Expression>
                    <Sequence x:Key="Single" DisplayName="Single EICCheck">
                      <Sequence DisplayName="Single EIC Step 2">
                        <If DisplayName="If IncomeCheck">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Income !=null</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <If DisplayName="W2 Non Taxable Combat Pay">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.W2Wages != null) &amp;&amp; (Tax1040Object.Income.W2Wages.Any()))</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence DisplayName="Non Taxable Combat Pay">
                                  <local:F1040EZNonTaxableCombatPay>
                                    <local:F1040EZNonTaxableCombatPay.Tax1040Object>
                                      <InOutArgument x:TypeArguments="jtb:Tax1040">
                                        <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                                      </InOutArgument>
                                    </local:F1040EZNonTaxableCombatPay.Tax1040Object>
                                    <local:F1040EZNonTaxableCombatPay.TotalNonTaxableCombatPayElection>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double">Line8Step2W2NonTaxableCombatPay</mca:CSharpReference>
                                      </OutArgument>
                                    </local:F1040EZNonTaxableCombatPay.TotalNonTaxableCombatPayElection>
                                  </local:F1040EZNonTaxableCombatPay>
                                </Sequence>
                              </If.Then>
                            </If>
                          </If.Then>
                        </If>
                        <If DisplayName="EIC Credits check">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Credits != null) &amp;&amp; (Tax1040Object.Credits.EIC != null))</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double">Line8Step2W2NonQualifiedPlansTotal</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double">((Tax1040Object.Credits.EIC.PensionAnnuity.HasValue) ? Tax1040Object.Credits.EIC.PensionAnnuity.Value : 0) + ((Tax1040Object.Credits.EIC.TaxableScholarshipCredit.HasValue) ? Tax1040Object.Credits.EIC.TaxableScholarshipCredit.Value : 0) + ((Tax1040Object.Credits.EIC.PenalInstitutionInmateWages.HasValue) ? Tax1040Object.Credits.EIC.PenalInstitutionInmateWages.Value : 0)</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                        </If>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Line8Step2EarnedIncome</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TotalWages - Line8Step2W2NonQualifiedPlansTotal + Line8Step2W2NonTaxableCombatPay</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence DisplayName="EIC Worksheet">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Default="0" Name="EICStartingValue" />
                            <Variable x:TypeArguments="x:Int32" Default="50" Name="EICModuleValue" />
                            <Variable x:TypeArguments="x:Int32" Default="1" Name="EICInitialRangeStartValue" />
                            <Variable x:TypeArguments="x:Int32" Default="49" Name="EICInitialRangeEndValue" />
                            <Variable x:TypeArguments="x:Int32" Default="2" Name="EICRateInitialValue" />
                            <Variable x:TypeArguments="x:Int32" Name="EICModuleDifference" />
                          </Sequence.Variables>
                          <Assign DisplayName="Line8EICWorkSheetLine1Assign">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Double">
                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">
                                <mca:CSharpValue x:TypeArguments="x:Double">(int)Line8Step2EarnedIncome</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount &gt;= 14300 &amp;&amp; Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount &lt;= 14339</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign DisplayName="EICWorkSheetLine2Value">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">2</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <If DisplayName="EICInitialRangeCheck">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount &gt; EICInitialRangeStartValue &amp;&amp; Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount &lt;= EICInitialRangeEndValue</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Assign DisplayName="EICRateInitialValue">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <mca:CSharpValue x:TypeArguments="x:Double">EICRateInitialValue</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="EICSlabRangeCalculation">
                                    <Assign DisplayName="EICModuleDifferenceValue">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32">EICModuleDifference</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">(int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount % EICModuleValue;</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="EICStartingRangeValue">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32">EICStartingValue</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">(int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount != EICModuleDifference ? (int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount - EICModuleDifference : (int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If DisplayName="Form1040ezEICCollectionCheck">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(Form1040ezEICCollection != null &amp;&amp; !Form1040ezEICCollection.IsEmpty)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Sequence DisplayName="GetEICSlabValue">
                                          <maes:GetFromDictionary x:TypeArguments="x:Int32, x:Int32">
                                            <maes:GetFromDictionary.Dictionary>
                                              <InArgument x:TypeArguments="scg:IDictionary(x:Int32, x:Int32)">
                                                <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:Int32, x:Int32)">Form1040ezEICCollection</mca:CSharpValue>
                                              </InArgument>
                                            </maes:GetFromDictionary.Dictionary>
                                            <maes:GetFromDictionary.Key>
                                              <InArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpValue x:TypeArguments="x:Int32">EICStartingValue</mca:CSharpValue>
                                              </InArgument>
                                            </maes:GetFromDictionary.Key>
                                            <maes:GetFromDictionary.Value>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">EICOut</mca:CSharpReference>
                                              </OutArgument>
                                            </maes:GetFromDictionary.Value>
                                          </maes:GetFromDictionary>
                                          <Assign DisplayName="EICWorkSheetLine2Value">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Double">
                                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Double">
                                                <mca:CSharpValue x:TypeArguments="x:Double">EICOut</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                          <If DisplayName="EIC Check in Worksheet">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount == 0</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Line2 Stop Condition">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">
                                      <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <mca:CSharpReference x:TypeArguments="x:String">Tax1040Object.OutputForms.Tax1040EZPage1.EarnedIncomeCreditPrefix</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Nullable(x:Boolean)">
                                      <mca:CSharpReference x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.F1040EZ.F1040EZWorkSheets.IsEICWorkSheetRequired</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                                      <mca:CSharpValue x:TypeArguments="s:Nullable(x:Boolean)">false</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">
                                      <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">
                                      <mca:CSharpValue x:TypeArguments="x:Double">(int)Tax1040Object.OutputForms.Tax1040EZPage1.AdjustedGrossIncome</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If>
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount == Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount</mca:CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Sequence DisplayName="EICWorkSheetLine6Value">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpReference x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.IsLine4AmountsSame</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">
                                            <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">
                                            <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <If>
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &lt; EICSingleLimit)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Sequence DisplayName="EICWorkSheetLine6Value">
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.IsLine4AmountsSame</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.IsLine5Blank</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Double">
                                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Double">
                                                <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence>
                                          <If>
                                            <If.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &gt;= 14300 &amp;&amp; Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &lt;= 14339</mca:CSharpValue>
                                              </InArgument>
                                            </If.Condition>
                                            <If.Then>
                                              <Assign DisplayName="EICWorkSheetLine5Value">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Double">
                                                    <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line5Amount</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Double">2</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <If DisplayName="EICInitialRangeCheck">
                                                <If.Condition>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &gt; EICInitialRangeStartValue &amp;&amp; Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &lt;= EICInitialRangeEndValue</mca:CSharpValue>
                                                  </InArgument>
                                                </If.Condition>
                                                <If.Then>
                                                  <Sequence DisplayName="EICWorksheetLine5Value">
                                                    <Assign>
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">
                                                          <mca:CSharpReference x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.IsLine4AmountsSame</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="EICRateInitialValue">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Double">
                                                          <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line5Amount</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Double">
                                                          <mca:CSharpValue x:TypeArguments="x:Double">EICRateInitialValue</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="EICSlabRangeCalculation">
                                                    <Assign DisplayName="EICModuleDifferenceValue">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpReference x:TypeArguments="x:Int32">EICModuleDifference</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpValue x:TypeArguments="x:Int32">(int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount % EICModuleValue;</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="EICStartingRangeValue">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpReference x:TypeArguments="x:Int32">EICStartingValue</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpValue x:TypeArguments="x:Int32">(int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount != EICModuleDifference ? (int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount - EICModuleDifference : (int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <If DisplayName="Form1040ezEICCollectionCheck">
                                                      <If.Condition>
                                                        <InArgument x:TypeArguments="x:Boolean">
                                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(Form1040ezEICCollection != null &amp;&amp; !Form1040ezEICCollection.IsEmpty)</mca:CSharpValue>
                                                        </InArgument>
                                                      </If.Condition>
                                                      <If.Then>
                                                        <Sequence DisplayName="GetEICSlabValue">
                                                          <maes:GetFromDictionary x:TypeArguments="x:Int32, x:Int32">
                                                            <maes:GetFromDictionary.Dictionary>
                                                              <InArgument x:TypeArguments="scg:IDictionary(x:Int32, x:Int32)">
                                                                <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:Int32, x:Int32)">Form1040ezEICCollection</mca:CSharpValue>
                                                              </InArgument>
                                                            </maes:GetFromDictionary.Dictionary>
                                                            <maes:GetFromDictionary.Key>
                                                              <InArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpValue x:TypeArguments="x:Int32">EICStartingValue</mca:CSharpValue>
                                                              </InArgument>
                                                            </maes:GetFromDictionary.Key>
                                                            <maes:GetFromDictionary.Value>
                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpReference x:TypeArguments="x:Int32">EICOut</mca:CSharpReference>
                                                              </OutArgument>
                                                            </maes:GetFromDictionary.Value>
                                                          </maes:GetFromDictionary>
                                                          <Assign DisplayName="EICWorkSheetLine2Value">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Double">
                                                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line5Amount</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Double">
                                                                <mca:CSharpValue x:TypeArguments="x:Double">EICOut</mca:CSharpValue>
                                                              </InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Then>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </If.Else>
                                          </If>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Double">
                                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Double">
                                                <mca:CSharpValue x:TypeArguments="x:Double">Math.Min(Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount,Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line5Amount)</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Else>
                          </If>
                          <Assign DisplayName="Final EIC Worksheet Amount">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Double">
                                <mca:CSharpReference x:TypeArguments="x:Double">TotalEIC</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">
                                <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </Sequence>
                    </Sequence>
                    <Sequence x:Key="MarriedFilingJointly" DisplayName="Married Jointly EICCheck">
                      <Sequence DisplayName="MFJ EIC Step 2">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Double" Default="13000" Name="EICMFJLimit" />
                        </Sequence.Variables>
                        <If DisplayName="If IncomeCheck">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Income !=null</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <If DisplayName="W2 Non Taxable Combat Pay">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.W2Wages != null) &amp;&amp; (Tax1040Object.Income.W2Wages.Any()))</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence DisplayName="Non Taxable Combat Pay">
                                  <local:F1040EZNonTaxableCombatPay>
                                    <local:F1040EZNonTaxableCombatPay.Tax1040Object>
                                      <InOutArgument x:TypeArguments="jtb:Tax1040">
                                        <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                                      </InOutArgument>
                                    </local:F1040EZNonTaxableCombatPay.Tax1040Object>
                                    <local:F1040EZNonTaxableCombatPay.TotalNonTaxableCombatPayElection>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double">Line8Step2W2NonTaxableCombatPay</mca:CSharpReference>
                                      </OutArgument>
                                    </local:F1040EZNonTaxableCombatPay.TotalNonTaxableCombatPayElection>
                                  </local:F1040EZNonTaxableCombatPay>
                                </Sequence>
                              </If.Then>
                            </If>
                          </If.Then>
                        </If>
                        <If DisplayName="EIC Credits check">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Credits != null) &amp;&amp; (Tax1040Object.Credits.EIC != null))</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">
                                  <mca:CSharpReference x:TypeArguments="x:Double">Line8Step2W2NonQualifiedPlansTotal</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">
                                  <mca:CSharpValue x:TypeArguments="x:Double">((Tax1040Object.Credits.EIC.PensionAnnuity.HasValue) ? Tax1040Object.Credits.EIC.PensionAnnuity.Value : 0) + ((Tax1040Object.Credits.EIC.TaxableScholarshipCredit.HasValue) ? Tax1040Object.Credits.EIC.TaxableScholarshipCredit.Value : 0) + ((Tax1040Object.Credits.EIC.PenalInstitutionInmateWages.HasValue) ? Tax1040Object.Credits.EIC.PenalInstitutionInmateWages.Value : 0)</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                        </If>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Line8Step2EarnedIncome</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TotalWages - Line8Step2W2NonQualifiedPlansTotal + Line8Step2W2NonTaxableCombatPay</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence DisplayName="EIC Worksheet">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Default="0" Name="EICStartingValue" />
                            <Variable x:TypeArguments="x:Int32" Default="50" Name="EICModuleValue" />
                            <Variable x:TypeArguments="x:Int32" Default="1" Name="EICInitialRangeStartValue" />
                            <Variable x:TypeArguments="x:Int32" Default="49" Name="EICInitialRangeEndValue" />
                            <Variable x:TypeArguments="x:Int32" Default="2" Name="EICRateInitialValue" />
                            <Variable x:TypeArguments="x:Int32" Name="EICModuleDifference" />
                          </Sequence.Variables>
                          <Assign DisplayName="Line8EICWorkSheetLine1Assign">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Double">
                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">
                                <mca:CSharpValue x:TypeArguments="x:Double">(int)Line8Step2EarnedIncome</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount &gt;=19650 &amp;&amp; Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount &lt;= 19679</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign DisplayName="EICWorkSheetLine2Value">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Double">
                                    <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Double">1</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <If DisplayName="EICInitialRangeCheck">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount &gt; EICInitialRangeStartValue &amp;&amp; Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount &lt;= EICInitialRangeEndValue</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Assign DisplayName="EICRateInitialValue">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <mca:CSharpValue x:TypeArguments="x:Double">EICRateInitialValue</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="EICSlabRangeCalculation">
                                    <Assign DisplayName="EICModuleDifferenceValue">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32">EICModuleDifference</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">(int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount % EICModuleValue;</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="EICStartingRangeValue">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32">EICStartingValue</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">(int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount != EICModuleDifference ? (int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount - EICModuleDifference : (int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If DisplayName="Form1040ezEICCollectionCheck">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(Form1040ezEICCollection != null &amp;&amp; !Form1040ezEICCollection.IsEmpty)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Sequence DisplayName="GetEICSlabValue">
                                          <maes:GetFromDictionary x:TypeArguments="x:Int32, x:Int32">
                                            <maes:GetFromDictionary.Dictionary>
                                              <InArgument x:TypeArguments="scg:IDictionary(x:Int32, x:Int32)">
                                                <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:Int32, x:Int32)">Form1040ezMFJEICCollection</mca:CSharpValue>
                                              </InArgument>
                                            </maes:GetFromDictionary.Dictionary>
                                            <maes:GetFromDictionary.Key>
                                              <InArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpValue x:TypeArguments="x:Int32">EICStartingValue</mca:CSharpValue>
                                              </InArgument>
                                            </maes:GetFromDictionary.Key>
                                            <maes:GetFromDictionary.Value>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">EICOut</mca:CSharpReference>
                                              </OutArgument>
                                            </maes:GetFromDictionary.Value>
                                          </maes:GetFromDictionary>
                                          <Assign DisplayName="EICWorkSheetLine2Value">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Double">
                                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Double">
                                                <mca:CSharpValue x:TypeArguments="x:Double">EICOut</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                          <If DisplayName="EIC Check in Worksheet">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount == 0</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Line2 Stop Condition">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">
                                      <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <mca:CSharpReference x:TypeArguments="x:String">Tax1040Object.OutputForms.Tax1040EZPage1.EarnedIncomeCreditPrefix</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">No</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Nullable(x:Boolean)">
                                      <mca:CSharpReference x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.F1040EZ.F1040EZWorkSheets.IsEICWorkSheetRequired</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                                      <mca:CSharpValue x:TypeArguments="s:Nullable(x:Boolean)">false</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">
                                      <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">
                                      <mca:CSharpValue x:TypeArguments="x:Double">(int)Tax1040Object.OutputForms.Tax1040EZPage1.AdjustedGrossIncome</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If>
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount == Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line1Amount</mca:CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Sequence DisplayName="EICWorkSheetLine6Value">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpReference x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.IsLine4AmountsSame</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">
                                            <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">
                                            <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <If>
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &lt; EICMFJLimit)</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Sequence DisplayName="EICWorkSheetLine6Value">
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.IsLine4AmountsSame</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.IsLine5Blank</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Double">
                                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Double">
                                                <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence>
                                          <If>
                                            <If.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &gt;= 19650 &amp;&amp; Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &lt;= 19679</mca:CSharpValue>
                                              </InArgument>
                                            </If.Condition>
                                            <If.Then>
                                              <Assign DisplayName="EICWorkSheetLine2Value">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Double">
                                                    <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line5Amount</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Double">1</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <If DisplayName="EICInitialRangeCheck">
                                                <If.Condition>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &gt; EICInitialRangeStartValue &amp;&amp; Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount &lt;= EICInitialRangeEndValue</mca:CSharpValue>
                                                  </InArgument>
                                                </If.Condition>
                                                <If.Then>
                                                  <Sequence DisplayName="EICWorkSheetLine5VAlue">
                                                    <Assign>
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Boolean">
                                                          <mca:CSharpReference x:TypeArguments="x:Boolean">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.IsLine4AmountsSame</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="EICRateInitialValue">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Double">
                                                          <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line5Amount</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Double">
                                                          <mca:CSharpValue x:TypeArguments="x:Double">EICRateInitialValue</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="EICSlabRangeCalculation">
                                                    <Assign DisplayName="EICModuleDifferenceValue">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpReference x:TypeArguments="x:Int32">EICModuleDifference</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpValue x:TypeArguments="x:Int32">(int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount % EICModuleValue;</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="EICStartingRangeValue">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpReference x:TypeArguments="x:Int32">EICStartingValue</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpValue x:TypeArguments="x:Int32">(int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount != EICModuleDifference ? (int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount - EICModuleDifference : (int)Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line3Amount</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <If DisplayName="Form1040ezEICCollectionCheck">
                                                      <If.Condition>
                                                        <InArgument x:TypeArguments="x:Boolean">
                                                          <mca:CSharpValue x:TypeArguments="x:Boolean">(Form1040ezEICCollection != null &amp;&amp; !Form1040ezEICCollection.IsEmpty)</mca:CSharpValue>
                                                        </InArgument>
                                                      </If.Condition>
                                                      <If.Then>
                                                        <Sequence DisplayName="GetEICSlabValue">
                                                          <maes:GetFromDictionary x:TypeArguments="x:Int32, x:Int32">
                                                            <maes:GetFromDictionary.Dictionary>
                                                              <InArgument x:TypeArguments="scg:IDictionary(x:Int32, x:Int32)">
                                                                <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:Int32, x:Int32)">Form1040ezMFJEICCollection</mca:CSharpValue>
                                                              </InArgument>
                                                            </maes:GetFromDictionary.Dictionary>
                                                            <maes:GetFromDictionary.Key>
                                                              <InArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpValue x:TypeArguments="x:Int32">EICStartingValue</mca:CSharpValue>
                                                              </InArgument>
                                                            </maes:GetFromDictionary.Key>
                                                            <maes:GetFromDictionary.Value>
                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpReference x:TypeArguments="x:Int32">EICOut</mca:CSharpReference>
                                                              </OutArgument>
                                                            </maes:GetFromDictionary.Value>
                                                          </maes:GetFromDictionary>
                                                          <Assign DisplayName="EICWorkSheetLine2Value">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Double">
                                                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line5Amount</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Double">
                                                                <mca:CSharpValue x:TypeArguments="x:Double">EICOut</mca:CSharpValue>
                                                              </InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Then>
                                                    </If>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </If.Else>
                                          </If>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Double">
                                                <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Double">
                                                <mca:CSharpValue x:TypeArguments="x:Double">Math.Min(Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line2Amount,Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line5Amount)</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Else>
                          </If>
                          <Assign DisplayName="Final EIC Worksheet Amount">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Double">
                                <mca:CSharpReference x:TypeArguments="x:Double">TotalEIC</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">
                                <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.F1040EZ.F1040EZWorkSheets.EICWorkSheet.Line6Amount</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </Sequence>
                    </Sequence>
                    <x:Null x:Key="HeadofHousehold" />
                    <x:Null x:Key="MarriedFilingSeperately" />
                    <x:Null x:Key="Widower" />
                  </Switch>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </If.Then>
      </If>
      <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
    </Sequence>
  </jtbwa:F1040EZEarnedIncomeCreditWithNoValidation.Implementation>
</jtbwa:F1040EZEarnedIncomeCreditWithNoValidation>