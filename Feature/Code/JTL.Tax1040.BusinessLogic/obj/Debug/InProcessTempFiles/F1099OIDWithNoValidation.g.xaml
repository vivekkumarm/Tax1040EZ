<?xml version="1.0" encoding="utf-8"?>
<jtbwac:F1099OIDWithNoValidation xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject" xmlns:jtbwac="clr-namespace:JTL.Tax1040.BusinessLogic.WorkFlow.Activities.CalculationWithNoValidation;assembly=JTL.Tax1040.BusinessLogic" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.PDFBinding</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <jtbwac:F1099OIDWithNoValidation.Implementation>
    <Sequence DisplayName="F1099 OID Calculation">
      <Sequence.Variables>
        <Variable x:TypeArguments="jtb:Form1099OID" Name="Form1099OID" />
      </Sequence.Variables>
      <Sequence DisplayName="1099OID">
        <If DisplayName="If Tax1040ObjectCheck">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object != null) &amp;&amp; (Tax1040Object.Income != null))</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <If DisplayName="If F1099OIDCheck">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form1099OID != null) &amp;&amp; (Tax1040Object.Income.Form1099OID.Any()))</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence DisplayName="F1099OID">
                  <ForEach x:TypeArguments="jtb:Form1099OID" DisplayName="ForEach&lt;Form1099OIDList&gt;">
                    <ForEach.Values>
                      <InArgument x:TypeArguments="scg:IEnumerable(jtb:Form1099OID)">
                        <mca:CSharpValue x:TypeArguments="scg:IEnumerable(jtb:Form1099OID)">Tax1040Object.Income.Form1099OID</mca:CSharpValue>
                      </InArgument>
                    </ForEach.Values>
                    <ActivityAction x:TypeArguments="jtb:Form1099OID">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="jtb:Form1099OID" Name="Form1099OID" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="1099OID">
                        <Assign DisplayName="Taxable Interest">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">TotalTaxableInterest</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double" xml:space="preserve">(((Form1099OID.OriginalIssueDiscount.HasValue ? Form1099OID.OriginalIssueDiscount.Value:0) + 
(Form1099OID.OtherPeriodicInterest.HasValue ? Form1099OID.OtherPeriodicInterest.Value:0) + 
(Form1099OID.USTreasuryObligations.HasValue ? Form1099OID.USTreasuryObligations.Value:0)) -
(Form1099OID.AdjustmentAmount.HasValue ? Form1099OID.AdjustmentAmount.Value:0)) +
TotalTaxableInterest</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Taxable">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">TotaltaxExemptInterest1099OID</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double">(Form1099OID.TaxExemptInterest.HasValue ? Form1099OID.TaxExemptInterest.Value:0) + TotaltaxExemptInterest1099OID</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ForEach>
                </Sequence>
              </If.Then>
            </If>
          </If.Then>
        </If>
      </Sequence>
      <sads:DebugSymbol.Symbol>d4IBRDpcSmVldmFuMTA0MFxGZWF0dXJlXENvZGVcSlRMLlRheDEwNDAuQnVzaW5lc3NMb2dpY1xXb3JrRmxvd1xBY3Rpdml0aWVzXENhbGN1bGF0aW9uV2l0aE5vVmFsaWRhdGlvblxGMTA5OU9JRFdpdGhOb1ZhbGlkYXRpb24ueGFtbBA7A4ABDgIBAT8FfhACAQJAB30MAgEDQw1DjwECAQRHC3sQAgEKShFKsAECAQtOD3kaAgERTxF4GwIBElIXUo0BAgEyWRV2IAIBE1oXaSACASNqF3UgAgEUYh1mJwIBK10dXXcCASRyHXLLAQIBHG0dbYABAgEV</sads:DebugSymbol.Symbol>
    </Sequence>
  </jtbwac:F1099OIDWithNoValidation.Implementation>
</jtbwac:F1099OIDWithNoValidation>