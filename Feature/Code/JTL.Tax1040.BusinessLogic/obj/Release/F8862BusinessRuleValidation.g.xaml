<?xml version="1.0" encoding="utf-8"?>
<twa:F8862BusinessRuleValidation xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject" xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:twa="clr-namespace:Tax1040WorkFlow.WorkFlow.Activities;assembly=JTL.Tax1040.BusinessLogic" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Object</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.PDFBinding</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <twa:F8862BusinessRuleValidation.Implementation>
    <Sequence DisplayName="Form8862Eligibility Check">
      <Sequence.Variables>
        <Variable x:TypeArguments="jtb:Form8862" Name="Form8862" />
        <Variable x:TypeArguments="jtco:ErrorMessage" Name="ErrorMessage" />
        <Variable x:TypeArguments="scg:List(jtco:ErrorMessage)" Name="ErrorMessageList">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpValue>
          </Variable.Default>
        </Variable>
      </Sequence.Variables>
      <If DisplayName="If Tax1040ObjectCheck">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object != null) &amp;&amp; (Tax1040Object.Income != null))</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <If DisplayName="If Formm 8862Check">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.Income.Form8862 !=null)</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Sequence DisplayName="F8862">
                <If DisplayName="EICdisallowed Check">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form8862.HasEICdisallowed.HasValue) &amp;&amp; (Tax1040Object.Income.Form8862.HasEICdisallowed.Value))</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Else>
                    <Sequence DisplayName="Error Message">
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="jtco:ErrorMessage">
                            <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_EARNED_INCOME_CREDIT_DISALLOWED]</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                        <AddToCollection.Item>
                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection.Item>
                        <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                          <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                        </InArgument>
                      </AddToCollection>
                    </Sequence>
                  </If.Else>
                </If>
                <If DisplayName="ReportedIncorrectIncome">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form8862.HasReportedIncorrectIncome.HasValue) &amp;&amp; (Tax1040Object.Income.Form8862.HasReportedIncorrectIncome.Value))</mca:CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence DisplayName="Error Message">
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="jtco:ErrorMessage">
                            <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_EIC_REDUCED_DISALLOWED_EARLIER_YEAR]</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                        <AddToCollection.Item>
                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection.Item>
                        <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                          <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                        </InArgument>
                      </AddToCollection>
                    </Sequence>
                  </If.Then>
                </If>
                <Sequence DisplayName="DaysLivedInUS">
                  <If DisplayName="If PersonalDetailsCheck">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails !=null</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <If DisplayName="If PrimaryTaxpayerCheck">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails.PrimaryTaxPayer !=null</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Switch x:TypeArguments="jtco:FilingStatus">
                            <Switch.Expression>
                              <InArgument x:TypeArguments="jtco:FilingStatus">
                                <mca:CSharpValue x:TypeArguments="jtco:FilingStatus">Tax1040Object.PersonalDetails.PrimaryTaxPayer.FilingStatus</mca:CSharpValue>
                              </InArgument>
                            </Switch.Expression>
                            <If x:Key="Single" DisplayName="DaysLivedInUS">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form8862.HasDaysLivedInUS.HasValue) &amp;&amp; (Tax1040Object.Income.Form8862.HasDaysLivedInUS.Value))</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <If DisplayName="IfTaxPayerLivedInUS">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Income.Form8862.DaysLivedInUS &gt; 0</mca:CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Else>
                                    <Sequence DisplayName="Error Message">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_TAXPAYER_DAYS_LIVED_US]</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                        <AddToCollection.Item>
                                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                          </InArgument>
                                        </AddToCollection.Item>
                                        <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                          <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                        </InArgument>
                                      </AddToCollection>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </If.Then>
                            </If>
                            <If x:Key="MarriedFilingJointly" DisplayName="DaysLivedInUS">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">(((Form8862.HasDaysLivedInUS.HasValue) &amp;&amp; (Form8862.HasDaysSpouseLivedInUS.HasValue)) &amp;&amp; ((Form8862.HasDaysLivedInUS.Value) &amp;&amp; (Form8862.HasDaysSpouseLivedInUS.Value)))</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <If DisplayName="ifTaxPayerAndSpouseLivedInUS">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.Income.Form8862.DaysLivedInUS &gt; 0) &amp;&amp; (Tax1040Object.Income.Form8862.DaysSpouseLivedInUS &gt; 0)</mca:CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Else>
                                    <Sequence DisplayName="Error Message">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_TAXPAYER_DAYS_LIVED_US]</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.F8862_SPOUSE_DAYS_LIVED_US]</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                        <AddToCollection.Item>
                                          <InArgument x:TypeArguments="jtco:ErrorMessage">
                                            <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                          </InArgument>
                                        </AddToCollection.Item>
                                        <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                          <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                        </InArgument>
                                      </AddToCollection>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </If.Then>
                            </If>
                          </Switch>
                        </If.Then>
                      </If>
                    </If.Then>
                  </If>
                </Sequence>
                <Sequence DisplayName="QualifyingChild">
                  <If DisplayName="If CreditsCheck">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Credits !=null</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <If DisplayName="If EICCheck">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Credits.EIC !=null</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="QualifyingChild">
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Nullable(x:Boolean)">
                                  <mca:CSharpReference x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.Income.Form8862.HasClaimedAsQualifyingChild</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                                  <mca:CSharpValue x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.Credits.EIC.HasClaimedAsQualifyingChild</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <If DisplayName="QualifyingChild Check">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">((Tax1040Object.Income.Form8862.HasClaimedAsQualifyingChild.HasValue) &amp;&amp; (Tax1040Object.Income.Form8862.HasClaimedAsQualifyingChild.Value))</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence DisplayName="Error Message">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                        <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="jtco:ErrorMessage">
                                        <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.EIC_NON_QUALIFIED_CHILD]</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                    <AddToCollection.Item>
                                      <InArgument x:TypeArguments="jtco:ErrorMessage">
                                        <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                      </InArgument>
                                    </AddToCollection.Item>
                                    <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                      <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                    </If.Then>
                  </If>
                </Sequence>
                <Assign>
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                      <mca:CSharpReference x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:List(jtco:ErrorMessage)">
                      <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
          </If>
        </If.Then>
      </If>
      <sads:DebugSymbol.Symbol>9xA3DEyDVqJRNns20pcZmzMNgQFFOlxUYXgxMDQwRVpcVGF4MTA0MExhdGVzdFxKZWV2YW4xMDQwXEZlYXR1cmVcQ29kZVxKVEwuVGF4MTA0MC5CdXNpbmVzc0xvZ2ljXFdvcmtGbG93XEFjdGl2aXRpZXNcRjg4NjJCdXNpbmVzc1J1bGVWYWxpZGF0aW9uLnhhbWxOPAPnAg4CAQFCC0J3AgECRgXlAgoCAQhJC0mNAQIBCU0J4wIOAgEPUA9QdAIBEFQN4QIYAgEWVQ91FAMB+gF2D5YBFAMB2AGXAQ+RAhoCAWOSAg/UAhoCASTVAg/gAhgCARdYFVjRAQMB+wFcE3MeAwGBAnkVeeUBAwHZAX0TlAEeAwHfAZgBEZACFgIBZJMCEdMCFgIBJd0CFd0CdgIBHtgCFdgCiQECARhdFWgeAwGPAmkVcicDAYICfhWJAR4DAe0BigEVkwEnAwHgAZsBF5sBegIBZZ8BFY4CGgIBa5YCF5YCcgIBJpoCFdECGgIBLGUbZaABAwGWAmAbYHYDAZACcBlwgQEDAYkCbBtsbgMBgwKGARuGAaQBAwH0AYEBG4EBdgMB7gGRARmRAYEBAwHnAY0BG40BbgMB4QGiARuiAY4BAgFspgEZjAIiAgFynQIbnQJ6AgEtoQIZzwIkAgEzqQEfqQGgAQIBc6wBG9UBIAMBrwHWARuLAiACAXmiAhutAiQCAVauAhvOAiACATSvASGvAd0BAwGwAbMBH9MBJAMBtgHZASHZAaACAgF63QEfiQIkAwGAAaoCIaoCoQECAV2lAiGlAq0BAgFXsQIhsQLzAQIBNbUCH8wCKgIBO7YBJbYBlgEDAbcBugEj0QEuAwG9AeABJeAB3gEDAYEB5AEjhwIuAwGHAbYCIcECKgIBScICIcsCMwIBPLsBJcYBLgMBywHHASXQATcDAb4B5QEl8AEuAwGiAfEBJfwBLgMBlQH9ASWGAjcDAYgBvgInvgKeAQIBULkCJ7kCggECAUrJAiXJAo0BAgFDxQInxQJ6AgE9wwErwwGnAQMB0gG+ASu+AYYBAwHMAc4BKc4BkQEDAcUBygErygF+AwG/Ae0BK+0BpwEDAakB6AEr6AGGAQMBowH5ASv5AaUBAwGcAfQBK/QBhgEDAZYBhAIphAKRAQMBjwGAAiuAAn4DAYkB</sads:DebugSymbol.Symbol>
    </Sequence>
  </twa:F8862BusinessRuleValidation.Implementation>
</twa:F8862BusinessRuleValidation>