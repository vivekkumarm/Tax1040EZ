<?xml version="1.0" encoding="utf-8"?>
<jtbwac:PersonalInfoEligibilityRuleCheck xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject" xmlns:jtbwac="clr-namespace:JTL.Tax1040.BusinessLogic.WorkFlow.Activities.CalculationWithNoValidation;assembly=JTL.Tax1040.BusinessLogic" xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Object</x:String>
      <x:String>JTL.Tax1040.Core.Process</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.PDFBinding</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <jtbwac:PersonalInfoEligibilityRuleCheck.Implementation>
    <Sequence DisplayName="PersonalInfoEligibilityRules">
      <Sequence.Variables>
        <Variable x:TypeArguments="jtco:ErrorMessage" Name="ErrorMessage" />
        <Variable x:TypeArguments="scg:List(jtco:ErrorMessage)" Name="ErrorMessageList">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpValue>
          </Variable.Default>
        </Variable>
      </Sequence.Variables>
      <Sequence DisplayName="Tax Filing Status">
        <If DisplayName="If PersonalDetailsCheck">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails !=null</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence DisplayName="FilingStatus, PrimaryTaxPayer and Spouse Check">
              <If DisplayName="If Filing Status Check">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails.PrimaryTaxPayer !=null</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <If DisplayName="FilingStatus Eligibility Rule Check">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.PersonalDetails.PrimaryTaxPayer.FilingStatus == FilingStatus.Single || Tax1040Object.PersonalDetails.PrimaryTaxPayer.FilingStatus == FilingStatus.MarriedFilingJointly)</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Else>
                      <Sequence DisplayName="Error Message">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.TAXPAYER_FILING_STATUS]</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                          <AddToCollection.Item>
                            <InArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                            <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
              </If>
              <If DisplayName="If PrimaryTaxpayerCheck">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.PersonalDetails.PrimaryTaxPayer != null) &amp;&amp; (Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person != null)</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="PrimaryTaxPayer Eligibility Rule Check">
                    <If DisplayName="TaxPayer DOB Check">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfBirth.ToShortDateString() != new DateTime(1899, 12, 31).ToShortDateString() &amp;&amp; Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfBirth.ToShortDateString() != DateTime.MinValue.ToShortDateString())</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="TaxPayerAge">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Boolean" Name="PersonAgeCompleted">
                              <Variable.Default>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Utilities.AgeCalculation(Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfBirth)</mca:CSharpValue>
                              </Variable.Default>
                            </Variable>
                          </Sequence.Variables>
                          <If DisplayName="TaxPayerAgeCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">(!PersonAgeCompleted)</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.TAXPAYER_OR_SPOUSE_DOB]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                    </If>
                    <Sequence DisplayName="TaxPayerLegallyBlind">
                      <If DisplayName="TaxPayerLegallyBlindCheck">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.IsLegallyBlind.HasValue &amp;&amp; Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.IsLegallyBlind.Value)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="Error Message">
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.TAXPAYER_IS_BLIND]</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                              <AddToCollection.Item>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                </InArgument>
                              </AddToCollection.Item>
                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                    <Sequence DisplayName="TaxPayerDOD ">
                      <If DisplayName="TaxPayerDODCheck">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfDeath.HasValue &amp;&amp; Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfDeath.Value != DateTime.MinValue)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="Error Message">
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.TAXPAYER_DATEOFDEATH]</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                              <AddToCollection.Item>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                </InArgument>
                              </AddToCollection.Item>
                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </Sequence>
                </If.Then>
              </If>
              <If DisplayName="IfSpouseCheck">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.PersonalDetails.Spouse != null) &amp;&amp; (Tax1040Object.PersonalDetails.Spouse.Person != null)</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="Spouse Eligibility Rule">
                    <If DisplayName="Spouse DOB Check">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.PersonalDetails.Spouse.Person.DateOfBirth.ToShortDateString() != new DateTime(1899, 12, 31).ToShortDateString() &amp;&amp; Tax1040Object.PersonalDetails.Spouse.Person.DateOfBirth.ToShortDateString() != DateTime.MinValue.ToShortDateString())</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Sequence DisplayName="SpouseAge">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Boolean" Name="SpouseAgeCompleted">
                              <Variable.Default>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Utilities.AgeCalculation(Tax1040Object.PersonalDetails.Spouse.Person.DateOfBirth)</mca:CSharpValue>
                              </Variable.Default>
                            </Variable>
                          </Sequence.Variables>
                          <If DisplayName="SpouseAgeCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">!(SpouseAgeCompleted)</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Error Message">
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.SPOUSE_DOB]</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                                  <AddToCollection.Item>
                                    <InArgument x:TypeArguments="jtco:ErrorMessage">
                                      <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                    </InArgument>
                                  </AddToCollection.Item>
                                  <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                    <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                                  </InArgument>
                                </AddToCollection>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                    </If>
                    <Sequence DisplayName="SpouseLegallyBlind">
                      <If DisplayName="SpouseLegallyBlindCheck">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.PersonalDetails.Spouse.Person.IsLegallyBlind.HasValue &amp;&amp; Tax1040Object.PersonalDetails.Spouse.Person.IsLegallyBlind.Value)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="Error Message">
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.SPOUSE_IS_BLIND]</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                              <AddToCollection.Item>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                </InArgument>
                              </AddToCollection.Item>
                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                    <Sequence DisplayName="SpouseDOD">
                      <If DisplayName="SpouseDODCheck">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">(Tax1040Object.PersonalDetails.Spouse.Person.DateOfDeath.HasValue &amp;&amp; Tax1040Object.PersonalDetails.Spouse.Person.DateOfDeath.Value != DateTime.MinValue)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="Error Message">
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.SPOUSE_DATEOFDEATH]</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;">
                              <AddToCollection.Item>
                                <InArgument x:TypeArguments="jtco:ErrorMessage">
                                  <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                                </InArgument>
                              </AddToCollection.Item>
                              <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                                <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                              </InArgument>
                            </AddToCollection>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <sads:DebugSymbol.Symbol>9xDMejQu/FPyKTpuArehGFTRhgFFOlxUYXgxMDQwRVpcVGF4MTA0MExhdGVzdFxKZWV2YW4xMDQwXEZlYXR1cmVcQ29kZVxKVEwuVGF4MTA0MC5CdXNpbmVzc0xvZ2ljXFdvcmtGbG93XEFjdGl2aXRpZXNcUGVyc29uYWxJbmZvRWxpZ2liaWxpdHlSdWxlQ2hlY2sueGFtbFk8A4UDDgIBAUELQXcCAQJFBYMDEAIBB0YHggMMAgEISQ1JcAIBCU0LgAMWAgEOTg13EgMB8wF4DfsBEgMBgQH8AQ3/AhICAQ9RE1GGAQMB9AFVEXUWAwH5AXsTe9MBAwGCAX8R+QEcAwGHAf8BE/8BwQECARCDAhH9AhwCARVYF1iMAgMB+gFcFXMgAwH/AYABE7IBGAMBxAGzARPVAR4DAaYB1gET+AEeAwGIAYQCE7YCGAIBUrcCE9kCHgIBNNoCE/wCHgIBFl0XaCADAYsCaRdyKQMBgAKDARmDAekCAwHFAYcBF7ABIgMBygG0ARXUARoDAacB1wEV9wEaAwGJAYcCGYcC1wICAVOLAhe0AiICAVi4AhXYAhoCATXbAhX7AhoCARdlHWWTAQMBkQJgHWB4AwGMAnAbcIMBAwGGAmwdbHADAYECiwEfiwG4AQMBywGPARmvAR4DAdEBtwEbtwH9AQMBqAG7ARnSASQDAa0B2gEb2gGMAgMBigHeARn1ASQDAY8BjwIfjwKvAQIBWZMCGbMCHgIBX7sCG7sC6wECATa/AhnWAiQCATveAhveAvoBAgEY4gIZ+QIkAgEdkgEfkgFzAwHSAZYBHa0BKAMB2AG8ARvHASQDAbkByAEb0QEtAwGuAd8BG+oBJAMBmwHrARv0AS0DAZABlgIflgJzAgFgmgIdsQIoAgFmwAIbywIkAgFHzAIb1QItAgE84wIb7gIkAgEp7wIb+AItAgEelwEfogEoAwHmAaMBH6wBMQMB2QHEASHEAZIBAwG/Ab8BIb8BfAMBugHPAR/PAYcBAwG0AcsBIcsBdAMBrwHnASHnAZUBAwGhAeIBIeIBfAMBnAHyAR/yAYcBAwGWAe4BIe4BdAMBkQGbAh+mAigCAXSnAh+wAjECAWfIAiHIApABAgFNwwIhwwJ8AgFI0wIf0wKHAQIBQs8CIc8CdAIBPesCIesCkwECAS/mAiHmAnwCASr2Ah/2AocBAgEk8gIh8gJ0AgEfnwElnwGbAQMB7QGaASWaAYABAwHnAaoBI6oBiwEDAeABpgElpgF4AwHaAaMCJaMCjwECAXueAiWeAoABAgF1rgIjrgKLAQIBbqoCJaoCeAIBaA==</sads:DebugSymbol.Symbol>
    </Sequence>
  </jtbwac:PersonalInfoEligibilityRuleCheck.Implementation>
</jtbwac:PersonalInfoEligibilityRuleCheck>