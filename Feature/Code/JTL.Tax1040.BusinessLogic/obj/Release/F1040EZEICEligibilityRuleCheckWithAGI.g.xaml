<?xml version="1.0" encoding="utf-8"?>
<local:F1040EZEICEligibilityRuleCheckWithAGI xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject" xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object" xmlns:local="clr-namespace:JTL.Tax1040.BusinessLogic.WorkFlow.Activities.CalculationWithNoValidation;assembly=JTL.Tax1040.BusinessLogic" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Process</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.PDFBinding</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <local:F1040EZEICEligibilityRuleCheckWithAGI.Implementation>
    <Sequence DisplayName="EICEligibilityRules">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Double" Default="14339" Name="SingleAdjustedGrossIncome" />
        <Variable x:TypeArguments="x:Double" Default="19679" Name="MFJAdjustedGrossIncome" />
        <Variable x:TypeArguments="x:Boolean" Default="True" Name="IsEICEligible" />
        <Variable x:TypeArguments="x:Double" Default="0" Name="TotalWages" />
      </Sequence.Variables>
      <If DisplayName="If Tax1040ObjectCheck">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object !=null</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <Sequence DisplayName="EIC EligibilityCheck">
            <Sequence DisplayName="Wages Check">
              <If>
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Income != null &amp;&amp; Tax1040Object.Income.W2Wages != null</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="W2 Calculation">
                    <local:W2WithNoValidation NonQualifiedPlansAmount="{x:Null}" PrefixTotalWages="{x:Null}" TaxableScholarshipAmount="{x:Null}">
                      <local:W2WithNoValidation.Tax1040Object>
                        <InOutArgument x:TypeArguments="jtb:Tax1040">
                          <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                        </InOutArgument>
                      </local:W2WithNoValidation.Tax1040Object>
                      <local:W2WithNoValidation.TotalWages>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">TotalWages</mca:CSharpReference>
                        </OutArgument>
                      </local:W2WithNoValidation.TotalWages>
                    </local:W2WithNoValidation>
                    <If>
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">TotalWages==0</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                    </If>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
            <Sequence DisplayName="AdjustmentGrossIncome">
              <If DisplayName="If EICPersonalDetailsCheck -AGI">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">(IsEICEligible &amp;&amp; Tax1040Object.PersonalDetails != null)</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <If DisplayName="If EICPrimaryTaxPayerCheck">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails.PrimaryTaxPayer != null</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="AGIStatus">
                        <Switch x:TypeArguments="jtco:FilingStatus" DisplayName="Switch&lt;FilingStatus&gt;">
                          <Switch.Expression>
                            <InArgument x:TypeArguments="jtco:FilingStatus">
                              <mca:CSharpValue x:TypeArguments="jtco:FilingStatus">Tax1040Object.PersonalDetails.PrimaryTaxPayer.FilingStatus</mca:CSharpValue>
                            </InArgument>
                          </Switch.Expression>
                          <If x:Key="Single" DisplayName="AGIStatusCheck -Single">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">AdjustedGrossIncome &lt;= SingleAdjustedGrossIncome</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Else>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                          <If x:Key="MarriedFilingJointly" DisplayName="AGIStatusCheck-MFJ">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">AdjustedGrossIncome &lt;= MFJAdjustedGrossIncome</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Else>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                        </Switch>
                      </Sequence>
                    </If.Then>
                  </If>
                </If.Then>
              </If>
            </Sequence>
            <Sequence DisplayName="HasDependent">
              <If DisplayName="If PersonalDetails-PrimaryTaxpayer Check">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails !=null</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="Dependent Check">
                    <If DisplayName="If PrimaryTaxpayerCheck">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails.PrimaryTaxPayer !=null</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <If DisplayName="If Person Check">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person !=null</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <If DisplayName="DependentCheck - PrimaryTaxPayer">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">(IsEICEligible &amp;&amp; Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.HasClaimedAsDependent.HasValue &amp;&amp; Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.HasClaimedAsDependent.Value)</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                          </If.Then>
                        </If>
                      </If.Then>
                    </If>
                    <If DisplayName="If SpouseCheck">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails.Spouse !=null</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <If DisplayName="If PersonCheck">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails.Spouse.Person !=null</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <If DisplayName="DependentCheck-Spouse">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">(IsEICEligible &amp;&amp; Tax1040Object.PersonalDetails.Spouse.Person.HasClaimedAsDependent.HasValue &amp;&amp; Tax1040Object.PersonalDetails.Spouse.Person.HasClaimedAsDependent.Value)</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                          </If.Then>
                        </If>
                      </If.Then>
                    </If>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence DisplayName="EarnedIncomeCredits">
              <If DisplayName="If EICCreditsCheck">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Credits !=null</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <If DisplayName="If EICCheck">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Credits.EIC !=null</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="EIC">
                        <Sequence DisplayName="LivedInUSStatus">
                          <If DisplayName="LivedInUsStatusCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">(IsEICEligible &amp;&amp; Tax1040Object.Credits.EIC.IsInUSMorethanHalfYear.HasValue &amp;&amp; Tax1040Object.Credits.EIC.IsInUSMorethanHalfYear.Value)</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Else>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="HasValidSSNStatus">
                          <If DisplayName="ValidSSNStatusCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">(IsEICEligible &amp;&amp; Tax1040Object.Credits.EIC.HasValidSSN.HasValue &amp;&amp; Tax1040Object.Credits.EIC.HasValidSSN.Value)</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Else>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="QualifyingChildStatus ">
                          <If DisplayName="QualifyingChildStatusCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Credits.EIC.HasClaimedAsQualifyingChild.HasValue &amp;&amp; Tax1040Object.Credits.EIC.HasClaimedAsQualifyingChild.Value</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                        </Sequence>
                        <Sequence DisplayName="IRSNoticeOnEICStatus">
                          <If DisplayName="IRSNoticeOnEICStatusCheck">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Credits.EIC.HasReceivedIRSNoticeOnEICNotEligible.HasValue &amp;&amp; Tax1040Object.Credits.EIC.HasReceivedIRSNoticeOnEICNotEligible.Value</mca:CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
            <Sequence DisplayName="AgeEligibilityStatus">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:DateTime" Name="TodaysDate">
                  <Variable.Default>
                    <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.Now</mca:CSharpValue>
                  </Variable.Default>
                </Variable>
                <Variable x:TypeArguments="x:Int32" Default="25" Name="MinAge" />
                <Variable x:TypeArguments="x:Int32" Default="65" Name="MaxAge" />
              </Sequence.Variables>
              <If DisplayName="If PersonalDetailsCheck">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails !=null</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <If DisplayName="If PrimaryTaxPayerCheck">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.PersonalDetails.PrimaryTaxPayer != null</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Switch x:TypeArguments="jtco:FilingStatus">
                        <Switch.Expression>
                          <InArgument x:TypeArguments="jtco:FilingStatus">
                            <mca:CSharpValue x:TypeArguments="jtco:FilingStatus">Tax1040Object.PersonalDetails.PrimaryTaxPayer.FilingStatus</mca:CSharpValue>
                          </InArgument>
                        </Switch.Expression>
                        <If x:Key="Single" DisplayName="If Single Check">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">(IsEICEligible &amp;&amp; Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person != null) &amp;&amp; (Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfBirth != null)</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Sequence DisplayName="Single Check">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:TimeSpan" Name="TaxPayerTimeZone">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="x:TimeSpan">TodaysDate - Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfBirth</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                                <Variable x:TypeArguments="s:DateTime" Name="PersonAge">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.MinValue + TaxPayerTimeZone</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                                <Variable x:TypeArguments="x:Int32" Name="PersonAgeCompleted">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="x:Int32">PersonAge.Year - 1</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                              </Sequence.Variables>
                              <If DisplayName="AgeEligibilityStatusCheck">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean">(IsEICEligible &amp;&amp; (Utilities.EICAgeCalculation(Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfBirth)))</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Else>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                        <If x:Key="MarriedFilingJointly" DisplayName="If MFJ Check">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">(IsEICEligible &amp;&amp; ((Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person != null &amp;&amp; Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfBirth != null) &amp;&amp; (Tax1040Object.PersonalDetails.Spouse != null) &amp;&amp; (Tax1040Object.PersonalDetails.Spouse.Person != null &amp;&amp; Tax1040Object.PersonalDetails.Spouse.Person.DateOfBirth !=null)))</mca:CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Sequence DisplayName="MJF Check">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:TimeSpan" Name="SpouseTimeZone">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="x:TimeSpan">TodaysDate - Tax1040Object.PersonalDetails.Spouse.Person.DateOfBirth</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                                <Variable x:TypeArguments="s:DateTime" Name="SpouseAge">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.MinValue + SpouseTimeZone</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                                <Variable x:TypeArguments="x:Int32" Name="SpouseAgeCompleted">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="x:Int32">SpouseAge.Year - 1</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                                <Variable x:TypeArguments="x:TimeSpan" Name="TaxPayerTimeZone">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="x:TimeSpan">TodaysDate - Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfBirth</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                                <Variable x:TypeArguments="s:DateTime" Name="PersonAge">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.MinValue + TaxPayerTimeZone</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                                <Variable x:TypeArguments="x:Int32" Name="PersonAgeCompleted">
                                  <Variable.Default>
                                    <mca:CSharpValue x:TypeArguments="x:Int32">PersonAge.Year - 1</mca:CSharpValue>
                                  </Variable.Default>
                                </Variable>
                              </Sequence.Variables>
                              <If DisplayName="AgeEligibilityStatusCheck">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean" xml:space="preserve">(IsEICEligible &amp;&amp; (Utilities.EICAgeCalculation(Tax1040Object.PersonalDetails.PrimaryTaxPayer.Person.DateOfBirth) &amp;&amp;
Utilities.EICAgeCalculation(Tax1040Object.PersonalDetails.Spouse.Person.DateOfBirth)))</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Else>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpReference x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                      </Switch>
                    </If.Then>
                  </If>
                </If.Then>
              </If>
            </Sequence>
            <Assign>
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpReference x:TypeArguments="x:Boolean">HasEarnedIncomeCredit</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">IsEICEligible</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <If>
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Credits != null</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Assign>
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Nullable(x:Boolean)">
                      <mca:CSharpReference x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.Credits.HasEarnedIncomeCredits</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                      <mca:CSharpValue x:TypeArguments="s:Nullable(x:Boolean)">IsEICEligible</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Sequence>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="jtb:Credits">
                        <mca:CSharpReference x:TypeArguments="jtb:Credits">Tax1040Object.Credits</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="jtb:Credits">
                        <mca:CSharpValue x:TypeArguments="jtb:Credits">new Credits()</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Nullable(x:Boolean)">
                        <mca:CSharpReference x:TypeArguments="s:Nullable(x:Boolean)">Tax1040Object.Credits.HasEarnedIncomeCredits</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                        <mca:CSharpValue x:TypeArguments="s:Nullable(x:Boolean)">IsEICEligible</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </If.Then>
      </If>
      <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
    </Sequence>
  </local:F1040EZEICEligibilityRuleCheckWithAGI.Implementation>
</local:F1040EZEICEligibilityRuleCheckWithAGI>