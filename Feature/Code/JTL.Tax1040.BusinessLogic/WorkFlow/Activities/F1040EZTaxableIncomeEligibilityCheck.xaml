<Activity mc:Ignorable="sap sap2010 sads" x:Class="JTL.Tax1040.BusinessLogic.WorkFlow.Activities.F1040EZTaxableIncomeEligibilityCheck"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:jtb="clr-namespace:JTL.Tax1040.BusinessObject;assembly=JTL.Tax1040.BusinessObject"
 xmlns:jtco="clr-namespace:JTL.Tax1040.Core.Object;assembly=JTL.Tax1040.Core.Object"
 xmlns:local="clr-namespace:JTL.Tax1040.BusinessLogic.WorkFlow.Activities.CalculationWithNoValidation"
 xmlns:local1="clr-namespace:Tax1040WorkFlow.WorkFlow"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Tax1040Object" Type="InArgument(jtb:Tax1040)" />
    <x:Property Name="ErrorMessages" Type="InArgument(jtco:ErrorMessages)" />
    <x:Property Name="TaxableIncome" Type="OutArgument(x:Double)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>JTL.Tax1040.BusinessLogic.WorkFlow.Activities.F1040EZTaxableIncomeEligibilityCheck_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>JTL.Tax1040.BusinessObject</x:String>
      <x:String>JTL.Tax1040.Core.Object</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>System.Workflow.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Object</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.Core.Process</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.DataAccess</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessObject</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.PDFBinding</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>JTL.Tax1040.BusinessLogic</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="F1040ZTaxableIncome" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <Sequence.Variables>
      <Variable x:TypeArguments="jtb:Form1099OID" Name="Form1099OID" />
    </Sequence.Variables>
    <If DisplayName="IfTax1040ObjectCheck" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object !=null</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence DisplayName="Tax1040LineByLineCheck" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <Sequence DisplayName="Initialization" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="jtb:OutputForms">
                  <mca:CSharpReference x:TypeArguments="jtb:OutputForms">Tax1040Object.OutputForms</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="jtb:OutputForms">
                  <mca:CSharpValue x:TypeArguments="jtb:OutputForms">new OutputForms()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="jtb:Tax1040EZPage1">
                  <mca:CSharpReference x:TypeArguments="jtb:Tax1040EZPage1">Tax1040Object.OutputForms.Tax1040EZPage1</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="jtb:Tax1040EZPage1">
                  <mca:CSharpValue x:TypeArguments="jtb:Tax1040EZPage1">new Tax1040EZPage1()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <If DisplayName="IfTax1040IncomeCheck" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.Income !=null</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Sequence DisplayName="Tax1040IncomeCheck" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Double" Default="0" Name="AnnualGrossIncome" />
                </Sequence.Variables>
                <Sequence DisplayName="F1040EZLine4 - AdjustedGrossIncome" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Double" Name="TotalAdjustedGrossIncome" />
                  </Sequence.Variables>
                  <local:F1040EZAdjustedGrossIncomeWithNoValidation TotalW2Wages="{x:Null}" sap2010:WorkflowViewState.IdRef="F1040EZAdjustedGrossIncomeWithNoValidation_1">
                    <local:F1040EZAdjustedGrossIncomeWithNoValidation.AnnualGrossIncome>
                      <OutArgument x:TypeArguments="x:Double">
                        <mca:CSharpReference x:TypeArguments="x:Double">AnnualGrossIncome</mca:CSharpReference>
                      </OutArgument>
                    </local:F1040EZAdjustedGrossIncomeWithNoValidation.AnnualGrossIncome>
                    <local:F1040EZAdjustedGrossIncomeWithNoValidation.Tax1040Object>
                      <InArgument x:TypeArguments="jtb:Tax1040">
                        <mca:CSharpValue x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpValue>
                      </InArgument>
                    </local:F1040EZAdjustedGrossIncomeWithNoValidation.Tax1040Object>
                  </local:F1040EZAdjustedGrossIncomeWithNoValidation>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">
                        <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.AdjustedGrossIncome</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">
                        <mca:CSharpValue x:TypeArguments="x:Double">AnnualGrossIncome</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="F1040EZLine5 - Personal Exemptions &amp; Standard Deduction" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Sequence DisplayName="StandardDeduction" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Double" Name="TotalStandardDeduction" />
                    </Sequence.Variables>
                    <local1:F1040EZStandardDeduction sap2010:WorkflowViewState.IdRef="F1040EZStandardDeduction_1">
                      <local1:F1040EZStandardDeduction.Tax1040Object>
                        <InOutArgument x:TypeArguments="jtb:Tax1040">
                          <mca:CSharpReference x:TypeArguments="jtb:Tax1040">Tax1040Object</mca:CSharpReference>
                        </InOutArgument>
                      </local1:F1040EZStandardDeduction.Tax1040Object>
                      <local1:F1040EZStandardDeduction.TotalWorksheetStandardDeduction>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">TotalStandardDeduction</mca:CSharpReference>
                        </OutArgument>
                      </local1:F1040EZStandardDeduction.TotalWorksheetStandardDeduction>
                    </local1:F1040EZStandardDeduction>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">
                          <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.StandardDeduction</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">
                          <mca:CSharpValue x:TypeArguments="x:Double">TotalStandardDeduction</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Sequence>
                <Sequence DisplayName="F1040EZLine6 - TaxableIncome" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="jtco:ErrorMessage" Name="ErrorMessage" />
                    <Variable x:TypeArguments="scg:List(jtco:ErrorMessage)" Name="ErrorMessageList">
                      <Variable.Default>
                        <mca:CSharpValue x:TypeArguments="scg:List(jtco:ErrorMessage)">Tax1040Object.ErrorMessages</mca:CSharpValue>
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="x:Double" Name="TaxableIncomeEligibilityAmount">
                      <Variable.Default>
                        <mca:CSharpValue x:TypeArguments="x:Double">Constants.TAXABLE_INCOME_ELIGIBILITY_AMOUNT</mca:CSharpValue>
                      </Variable.Default>
                    </Variable>
                  </Sequence.Variables>
                  <If DisplayName="TaxableIncome Calculation" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.OutputForms.Tax1040EZPage1.AdjustedGrossIncome &gt; Tax1040Object.OutputForms.Tax1040EZPage1.StandardDeduction</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableIncome</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.AdjustedGrossIncome - Tax1040Object.OutputForms.Tax1040EZPage1.StandardDeduction</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">
                              <mca:CSharpReference x:TypeArguments="x:Double">TaxableIncome</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">
                              <mca:CSharpValue x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableIncome</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">
                            <mca:CSharpReference x:TypeArguments="x:Double">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableIncome</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">0</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                  <If DisplayName="CheckTaxableIncomeEligibility" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Tax1040Object.OutputForms.Tax1040EZPage1.TaxableIncome &gt; TaxableIncomeEligibilityAmount</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="AddEligibilityErrorMessage" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpReference x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessages[Constants.TAX_AND_WRAP_UP_TAXABLE_INCOME]</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <AddToCollection x:TypeArguments="jtco:ErrorMessage" DisplayName="AddToCollection&lt;ErrorMessage&gt;" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1">
                          <AddToCollection.Item>
                            <InArgument x:TypeArguments="jtco:ErrorMessage">
                              <mca:CSharpValue x:TypeArguments="jtco:ErrorMessage">ErrorMessage</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">
                            <mca:CSharpValue x:TypeArguments="scg:ICollection(jtco:ErrorMessage)">ErrorMessageList</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d35FOlxEZXZcVGF4MTA0MFxKZWV2YW4xMDQwXEZlYXR1cmVcQ29kZVxKVEwuVGF4MTA0MC5CdXNpbmVzc0xvZ2ljXFdvcmtGbG93XEFjdGl2aXRpZXNcRjEwNDBFWlRheGFibGVJbmNvbWVFbGlnaWJpbGl0eUNoZWNrLnhhbWw2PgORAg4CAQFCBY8CCgIBAkULRV4CAQNJCY0CFAIBCEoLYxYDAdABZAuMAhACAQlLDVYWAwHcAVcNYhYDAdEBZxFnawIBCmsPigIaAgEPUxNTaQMB4gFOE055AwHdAV8TX28DAdcBWhNaiwEDAdIBbUBtQwIBEG8RiwEcAwGxAYwBEaoBHAMBkQGrARGJAhwCARFzE35GAwHBAX8TigEcAwGyAY0BE6kBHgMBkgGwARmwAYUBAgEbtQEZtQGCAQIBErkBE+cBGAIBVegBE4gCGAIBJHsZe2cDAckBdhl2cAMBwgGHARmHAWgDAboBggEZggGbAQMBswGRARWcATcDAaIBnQEVqAEeAwGTAbwBGbwB1AECAVbAARfZASICAWrcARflASACAV/rARnrAbIBAgEl7wEXhgIiAgEulAEblAFxAwGqAZkBG5kBdwMBowGlARulAW8DAZsBoAEboAGbAQMBlAHBARnMASICAX7NARnYASICAWvjAULjAUMCAWnfAR3fAZkBAgFg8AEZ+wEiAgFC/AEZhQIrAgEvyQEfyQHWAQMBiAHEAR/EAZsBAgF/1QEf1QGTAQIBddABH9ABcgIBbPgBH/gBnQECAUzzAR/zAXoCAUODAh2DAoUBAgE5/wEf/wFyAgEw</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="700,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="F1040EZAdjustedGrossIncomeWithNoValidation_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="553,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="F1040EZStandardDeduction_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="553,372">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="264,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="531,438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="264,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="531,398" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="553,1000">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="575,1824">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="700,1974">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="722,2426">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="847,2576" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="869,2700">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="JTL.Tax1040.BusinessLogic.WorkFlow.Activities.F1040EZTaxableIncomeEligibilityCheck_1" sap:VirtualizedContainerService.HintSize="909,2780" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>