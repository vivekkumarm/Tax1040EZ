/*
Deployment script for TAX1040_Efile_2014

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TAX1040_Efile_2014"
:setvar DefaultFilePrefix "TAX1040_Efile_2014"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Creating [dbo].[efile_comment]...';


GO
CREATE TABLE [dbo].[efile_comment] (
    [efile_comment_id]  BIGINT   IDENTITY (1, 1) NOT NULL,
    [efile_hold_id]     BIGINT   NULL,
    [efile_comment]     TEXT     NULL,
    [admin_users_id]    BIGINT   NULL,
    [create_time_stamp] DATETIME NULL,
    CONSTRAINT [pk_efile_comment] PRIMARY KEY CLUSTERED ([efile_comment_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_email_log]...';


GO
CREATE TABLE [dbo].[efile_email_log] (
    [efile_email_log_id]      INT          IDENTITY (1, 1) NOT NULL,
    [submission_id]           VARCHAR (25) NOT NULL,
    [efile_error_id]          INT          NOT NULL,
    [efile_email_template_id] INT          NOT NULL,
    [email_to]                VARCHAR (50) NOT NULL,
    [email_from]              VARCHAR (50) NOT NULL,
    [email_message]           TEXT         NOT NULL,
    [email_subject]           VARCHAR (50) NOT NULL,
    [email_status]            BIT          NULL,
    CONSTRAINT [pk_efile_email_log] PRIMARY KEY CLUSTERED ([efile_email_log_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_error]...';


GO
CREATE TABLE [dbo].[efile_error] (
    [efile_error_id]       INT           IDENTITY (1, 1) NOT NULL,
    [submission_id]        VARCHAR (25)  NULL,
    [error_code]           VARCHAR (50)  NULL,
    [error_message]        VARCHAR (MAX) NULL,
    [error_classification] VARCHAR (MAX) NULL,
    [action]               VARCHAR (50)  NULL,
    [error_picked_up]      TINYINT       NULL,
    [error_fixed]          TINYINT       NULL,
    [is_deleted]           BIT           NULL,
    [create_time_stamp]    DATETIME      NULL,
    [update_time_stamp]    DATETIME      NULL,
    CONSTRAINT [pk_efile_error] PRIMARY KEY CLUSTERED ([efile_error_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_hold]...';


GO
CREATE TABLE [dbo].[efile_hold] (
    [efile_hold_id]      BIGINT       IDENTITY (1, 1) NOT NULL,
    [sender_id]          INT          NOT NULL,
    [return_id]          BIGINT       NULL,
    [user_id]            INT          NULL,
    [tax_return_type_id] VARCHAR (20) NULL,
    [user_name]          VARCHAR (50) NULL,
    [user_email]         VARCHAR (50) NULL,
    [no_of_attachments]  INT          NULL,
    [tax_object]         XML          NOT NULL,
    [env_indicator]      CHAR (1)     NOT NULL,
    [efile_trans_id]     VARCHAR (30) NULL,
    [tax_year]           VARCHAR (10) NULL,
    [tax_period]         VARCHAR (30) NULL,
    [is_deleted]         BIT          NOT NULL,
    [create_time_stamp]  DATETIME     NOT NULL,
    [update_time_stamp]  DATETIME     NOT NULL,
    [irs_system_id]      VARCHAR (20) NULL,
    CONSTRAINT [pk_efile_hold] PRIMARY KEY CLUSTERED ([efile_hold_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_hold_attachment]...';


GO
CREATE TABLE [dbo].[efile_hold_attachment] (
    [efile_hold_attachment_id] INT             IDENTITY (1, 1) NOT NULL,
    [efile_hold_id]            BIGINT          NOT NULL,
    [attachment_name]          VARCHAR (100)   NULL,
    [type]                     VARCHAR (50)    NULL,
    [efile_attachment]         VARBINARY (MAX) NOT NULL,
    [is_deleted]               BIT             NOT NULL,
    [create_time_stamp]        DATETIME        NOT NULL,
    [update_time_stamp]        DATETIME        NOT NULL,
    CONSTRAINT [pk_efile_attachment_hold] PRIMARY KEY CLUSTERED ([efile_hold_attachment_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_irs_schema]...';


GO
CREATE TABLE [dbo].[efile_irs_schema] (
    [efile_irs_schema_id] INT          IDENTITY (1, 1) NOT NULL,
    [efile_hold_id]       BIGINT       NOT NULL,
    [efile_irs_schema]    XML          NOT NULL,
    [manifest_xml]        XML          NULL,
    [submission_id]       VARCHAR (20) NULL,
    [is_deleted]          BIT          NOT NULL,
    [create_time_stamp]   DATETIME     NOT NULL,
    [update_time_stamp]   DATETIME     NOT NULL,
    CONSTRAINT [pk_efile_irs_schema] PRIMARY KEY CLUSTERED ([efile_irs_schema_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_last_status]...';


GO
CREATE TABLE [dbo].[efile_last_status] (
    [efile_last_status_id] INT          IDENTITY (1, 1) NOT NULL,
    [efile_hold_id]        BIGINT       NOT NULL,
    [status_id]            INT          NOT NULL,
    [stage]                VARCHAR (10) NOT NULL,
    [state]                VARCHAR (50) NOT NULL,
    [is_deleted]           BIT          NOT NULL,
    [create_time_stamp]    DATETIME     NOT NULL,
    [update_time_stamp]    DATETIME     NOT NULL,
    CONSTRAINT [pk_efile_last_status] PRIMARY KEY CLUSTERED ([efile_last_status_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_log]...';


GO
CREATE TABLE [dbo].[efile_log] (
    [efile_log_id]      INT           IDENTITY (1, 1) NOT NULL,
    [efile_hold_id]     BIGINT        NOT NULL,
    [messages]          VARCHAR (MAX) NOT NULL,
    [is_deleted]        BIT           NOT NULL,
    [create_time_stamp] DATETIME      NOT NULL,
    [update_time_stamp] DATETIME      NOT NULL,
    CONSTRAINT [pk_efile_log] PRIMARY KEY CLUSTERED ([efile_log_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_name_control]...';


GO
CREATE TABLE [dbo].[efile_name_control] (
    [efile_name_control_id] BIGINT        IDENTITY (1, 1) NOT NULL,
    [user_id]               BIGINT        NULL,
    [business_info_id]      BIGINT        NULL,
    [business_info_name]    VARCHAR (100) NULL,
    [return_id]             BIGINT        NULL,
    [name_control]          VARCHAR (100) NULL
);


GO
PRINT N'Creating [dbo].[efile_progress]...';


GO
CREATE TABLE [dbo].[efile_progress] (
    [efile_progress_id] INT          IDENTITY (1, 1) NOT NULL,
    [efile_hold_id]     BIGINT       NOT NULL,
    [progress_status]   TINYINT      NOT NULL,
    [stage]             VARCHAR (10) NOT NULL,
    [state]             VARCHAR (50) NULL,
    [create_time_stamp] DATETIME     NOT NULL,
    [update_time_stamp] DATETIME     NOT NULL,
    CONSTRAINT [pk_efile_progress] PRIMARY KEY CLUSTERED ([efile_progress_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_receiver]...';


GO
CREATE TABLE [dbo].[efile_receiver] (
    [efile_receiver_id]      INT             IDENTITY (1, 1) NOT NULL,
    [submission_id]          VARCHAR (25)    NOT NULL,
    [send_submission_status] VARBINARY (MAX) NULL,
    [get_ack_status]         VARBINARY (MAX) NULL,
    [ack_xml]                XML             NULL,
    [submission_status]      VARBINARY (MAX) NULL,
    [schedule1]              VARBINARY (MAX) NULL,
    [is_deleted]             BIT             NULL,
    [create_time_stamp]      DATETIME        NULL,
    [update_time_stamp]      DATETIME        NULL,
    [system_id]              VARCHAR (20)    NULL,
    CONSTRAINT [pk_efile_receiver] PRIMARY KEY CLUSTERED ([efile_receiver_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_request_response]...';


GO
CREATE TABLE [dbo].[efile_request_response] (
    [efile_req_res_id]  BIGINT       IDENTITY (1, 1) NOT NULL,
    [submission_id]     VARCHAR (25) NULL,
    [message_id]        VARCHAR (30) NULL,
    [request]           TEXT         NULL,
    [response]          TEXT         NULL,
    [action]            VARCHAR (50) NULL,
    [status_id]         TINYINT      NULL,
    [create_time_stamp] DATETIME     NULL,
    [update_time_stamp] DATETIME     NULL,
    CONSTRAINT [pk_efile_req_res] PRIMARY KEY CLUSTERED ([efile_req_res_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_sender]...';


GO
CREATE TABLE [dbo].[efile_sender] (
    [efile_sender_id]   INT             IDENTITY (1, 1) NOT NULL,
    [efile_hold_id]     BIGINT          NOT NULL,
    [dime_attachment]   VARBINARY (MAX) NOT NULL,
    [submission_id]     VARCHAR (20)    NOT NULL,
    [message_id]        VARCHAR (20)    NULL,
    [is_deleted]        BIT             NOT NULL,
    [create_time_stamp] DATETIME        NOT NULL,
    [update_time_stamp] DATETIME        NOT NULL,
    [irs_system_id]     VARCHAR (20)    NULL,
    CONSTRAINT [pk_efile_sender] PRIMARY KEY CLUSTERED ([efile_sender_id] ASC)
);


GO
PRINT N'Creating [dbo].[efile_transmit]...';


GO
CREATE TABLE [dbo].[efile_transmit] (
    [efile_transmit_id] BIGINT       IDENTITY (1, 1) NOT NULL,
    [return_id]         BIGINT       NULL,
    [return_type]       VARCHAR (20) NULL,
    [stage]             VARCHAR (10) NULL,
    [state]             VARCHAR (10) NULL,
    [user_id]           BIGINT       NULL,
    [ip_date_time]      VARCHAR (50) NULL,
    [ip_time_zone]      VARCHAR (50) NULL,
    [ip_address]        VARCHAR (50) NULL,
    [status_id]         INT          NULL,
    [is_deleted]        BIT          NULL,
    CONSTRAINT [pk_efileTransmit] PRIMARY KEY CLUSTERED ([efile_transmit_id] ASC)
);


GO
PRINT N'Creating [dbo].[fax_log]...';


GO
CREATE TABLE [dbo].[fax_log] (
    [fax_status_id]           BIGINT       IDENTITY (1, 1) NOT NULL,
    [return_id]               BIGINT       NULL,
    [shopping_cart_detail_id] BIGINT       NULL,
    [fax_number]              VARCHAR (30) NULL,
    [fax_service_number]      VARCHAR (30) NULL,
    [fax_return_value_id]     BIGINT       NULL,
    [create_time_stamp]       DATETIME     NULL,
    [update_time_stamp]       DATETIME     NULL
);


GO
PRINT N'Creating [dbo].[sms_log]...';


GO
CREATE TABLE [dbo].[sms_log] (
    [sms_log_id]          BIGINT   IDENTITY (1, 1) NOT NULL,
    [return_id]           BIGINT   NOT NULL,
    [return_value_id]     INT      NULL,
    [stc_sms_template_id] INT      NULL,
    [create_time_stamp]   DATETIME NOT NULL,
    [update_time_stamp]   DATETIME NOT NULL
);


GO
PRINT N'Creating [dbo].[StcErrorCode]...';


GO
CREATE TABLE [dbo].[StcErrorCode] (
    [ErrorCode]            VARCHAR (50)  NOT NULL,
    [ErrorFaultResponse]   VARCHAR (MAX) NULL,
    [ErrorLogErrorMessage] VARCHAR (MAX) NULL,
    [ErrorType]            VARCHAR (100) NULL,
    [FixType]              TINYINT       NULL,
    CONSTRAINT [PK_TestErrorCode] PRIMARY KEY CLUSTERED ([ErrorCode] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_comment]....';


GO
ALTER TABLE [dbo].[efile_comment]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_error]....';


GO
ALTER TABLE [dbo].[efile_error]
    ADD DEFAULT NULL FOR [error_classification];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_error]....';


GO
ALTER TABLE [dbo].[efile_error]
    ADD DEFAULT 0 FOR [error_picked_up];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_error]....';


GO
ALTER TABLE [dbo].[efile_error]
    ADD DEFAULT 0 FOR [error_fixed];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_error]....';


GO
ALTER TABLE [dbo].[efile_error]
    ADD DEFAULT 0 FOR [is_deleted];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_error]....';


GO
ALTER TABLE [dbo].[efile_error]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_error]....';


GO
ALTER TABLE [dbo].[efile_error]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_hold]....';


GO
ALTER TABLE [dbo].[efile_hold]
    ADD DEFAULT 0 FOR [is_deleted];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_hold]....';


GO
ALTER TABLE [dbo].[efile_hold]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_hold]....';


GO
ALTER TABLE [dbo].[efile_hold]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_hold_attachment]....';


GO
ALTER TABLE [dbo].[efile_hold_attachment]
    ADD DEFAULT 0 FOR [is_deleted];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_hold_attachment]....';


GO
ALTER TABLE [dbo].[efile_hold_attachment]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_hold_attachment]....';


GO
ALTER TABLE [dbo].[efile_hold_attachment]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_irs_schema]....';


GO
ALTER TABLE [dbo].[efile_irs_schema]
    ADD DEFAULT NULL FOR [manifest_xml];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_irs_schema]....';


GO
ALTER TABLE [dbo].[efile_irs_schema]
    ADD DEFAULT 0 FOR [is_deleted];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_irs_schema]....';


GO
ALTER TABLE [dbo].[efile_irs_schema]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_irs_schema]....';


GO
ALTER TABLE [dbo].[efile_irs_schema]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_last_status]....';


GO
ALTER TABLE [dbo].[efile_last_status]
    ADD DEFAULT 0 FOR [is_deleted];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_last_status]....';


GO
ALTER TABLE [dbo].[efile_last_status]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_last_status]....';


GO
ALTER TABLE [dbo].[efile_last_status]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_log]....';


GO
ALTER TABLE [dbo].[efile_log]
    ADD DEFAULT 0 FOR [is_deleted];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_log]....';


GO
ALTER TABLE [dbo].[efile_log]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_log]....';


GO
ALTER TABLE [dbo].[efile_log]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_progress]....';


GO
ALTER TABLE [dbo].[efile_progress]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_progress]....';


GO
ALTER TABLE [dbo].[efile_progress]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_receiver]....';


GO
ALTER TABLE [dbo].[efile_receiver]
    ADD DEFAULT NULL FOR [ack_xml];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_receiver]....';


GO
ALTER TABLE [dbo].[efile_receiver]
    ADD DEFAULT 0 FOR [is_deleted];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_receiver]....';


GO
ALTER TABLE [dbo].[efile_receiver]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_receiver]....';


GO
ALTER TABLE [dbo].[efile_receiver]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_request_response]....';


GO
ALTER TABLE [dbo].[efile_request_response]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_request_response]....';


GO
ALTER TABLE [dbo].[efile_request_response]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_sender]....';


GO
ALTER TABLE [dbo].[efile_sender]
    ADD DEFAULT 0 FOR [is_deleted];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_sender]....';


GO
ALTER TABLE [dbo].[efile_sender]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_sender]....';


GO
ALTER TABLE [dbo].[efile_sender]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[efile_transmit]....';


GO
ALTER TABLE [dbo].[efile_transmit]
    ADD DEFAULT 0 FOR [is_deleted];


GO
PRINT N'Creating Default Constraint on [dbo].[fax_log]....';


GO
ALTER TABLE [dbo].[fax_log]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[fax_log]....';


GO
ALTER TABLE [dbo].[fax_log]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[sms_log]....';


GO
ALTER TABLE [dbo].[sms_log]
    ADD DEFAULT GETDATE() FOR [create_time_stamp];


GO
PRINT N'Creating Default Constraint on [dbo].[sms_log]....';


GO
ALTER TABLE [dbo].[sms_log]
    ADD DEFAULT GETDATE() FOR [update_time_stamp];


GO
PRINT N'Creating pk_efile_comment_efile_hold...';


GO
ALTER TABLE [dbo].[efile_comment]
    ADD CONSTRAINT [pk_efile_comment_efile_hold] FOREIGN KEY ([efile_hold_id]) REFERENCES [dbo].[efile_hold] ([efile_hold_id]);


GO
PRINT N'Creating FK_efile_email_log_efile_error...';


GO
ALTER TABLE [dbo].[efile_email_log]
    ADD CONSTRAINT [FK_efile_email_log_efile_error] FOREIGN KEY ([efile_error_id]) REFERENCES [dbo].[efile_error] ([efile_error_id]);


GO
PRINT N'Creating fk_efile_attachment_hold_efile_hold...';


GO
ALTER TABLE [dbo].[efile_hold_attachment]
    ADD CONSTRAINT [fk_efile_attachment_hold_efile_hold] FOREIGN KEY ([efile_hold_id]) REFERENCES [dbo].[efile_hold] ([efile_hold_id]);


GO
PRINT N'Creating fk_efile_irs_schema_efile_hold...';


GO
ALTER TABLE [dbo].[efile_irs_schema]
    ADD CONSTRAINT [fk_efile_irs_schema_efile_hold] FOREIGN KEY ([efile_hold_id]) REFERENCES [dbo].[efile_hold] ([efile_hold_id]);


GO
PRINT N'Creating fk_efile_last_status_efile_hold...';


GO
ALTER TABLE [dbo].[efile_last_status]
    ADD CONSTRAINT [fk_efile_last_status_efile_hold] FOREIGN KEY ([efile_hold_id]) REFERENCES [dbo].[efile_hold] ([efile_hold_id]);


GO
PRINT N'Creating fk_efile_log_efile_hold...';


GO
ALTER TABLE [dbo].[efile_log]
    ADD CONSTRAINT [fk_efile_log_efile_hold] FOREIGN KEY ([efile_hold_id]) REFERENCES [dbo].[efile_hold] ([efile_hold_id]);


GO
PRINT N'Creating fk_efile_progress_efile_hold...';


GO
ALTER TABLE [dbo].[efile_progress]
    ADD CONSTRAINT [fk_efile_progress_efile_hold] FOREIGN KEY ([efile_hold_id]) REFERENCES [dbo].[efile_hold] ([efile_hold_id]);


GO
PRINT N'Creating fk_efile_sender_efile_hold...';


GO
ALTER TABLE [dbo].[efile_sender]
    ADD CONSTRAINT [fk_efile_sender_efile_hold] FOREIGN KEY ([efile_hold_id]) REFERENCES [dbo].[efile_hold] ([efile_hold_id]);


GO
PRINT N'Creating [dbo].[usp_admin_efile_last_status_update]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_admin_efile_last_status_update
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_admin_efile_last_status_update]
@efile_hold_id BIGINT,
@stage VARCHAR(10),
@state VARCHAR(50)
AS
	BEGIN
		SET NOCOUNT ON; 
			UPDATE 
				[dbo].[efile_last_status] WITH(ROWLOCK) 
			SET 
				[stage] = @stage,
				[state] = @state
			WHERE 
				efile_hold_id = @efile_hold_id 
				AND [is_deleted] = 0
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_admin_find_name_control]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_admin_find_name_control
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_admin_find_name_control]
@return_id BIGINT
AS
	BEGIN
		SET NOCOUNT ON; 
		DECLARE @xml XML,@handle INT,@test Nvarchar(MAX),@char INT,@BusinessInfoID BIGINT 
			SELECT 
				@BusinessInfoID = [business_info_id] 
			FROM 
				[dbo].[returns] WITH(NOLOCK)
			WHERE 
				[return_id] = @return_id

			SELECT 
				@xml = [efile_irs_schema]
			FROM 
				[dbo].[efile_irs_schema] ei WITH(NOLOCK)
				INNER JOIN [dbo].[efile_hold] eh WITH(NOLOCK) ON ei.[efile_hold_id] = eh.[efile_hold_id]
				INNER JOIN [dbo].[efile_last_status] el WITH(NOLOCK) ON eh.[efile_hold_id] = el.[efile_hold_id]
				INNER JOIN [dbo].[returns] r WITH(NOLOCK) ON r.ReturnID = eh.[return_id]
				INNER JOIN [dbo].[business_info] b WITH(NOLOCK) ON r.[business_info_id] = b.[business_info_id]
			WHERE 
				b.[business_info_id] = @BusinessInfoID 
				AND ei.[is_deleted] = 0 
				AND [stage] = 'APMV'
				AND el.[state] = 'Success'
				AND [status_id]! = 21
			--SELECT @xml.query('/Return/ReturnHeader/Filer') 
			SET 
				@test = CAST(@xml AS NVARCHAR(MAX))
			SELECT 
				@char = CHARINDEX('<ReturnHeader',@test,1)
			Select 
				@xml = CAST(REPLACE(@test,SUBSTRING(@test,9,@char-10),'') AS XML)
			SELECT 
				tab.col.value('NameControl[1]','VARCHAR(20)')AS NameControl
			FROM 
				@xml.nodes('//Filer') tab(col) 
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_admin_get_efile_status_report]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_admin_get_efile_status_report
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_admin_get_efile_status_report]
@date [DATETIME]
AS
	--BEGIN
	--	SET NOCOUNT ON;
	--		CREATE TABLE 
	--			dbo.#efile_status ([Status] VARCHAR(20),[2290] BIGINT,[720] BIGINT,[8849] BIGINT)
	--		INSERT INTO 
	--			dbo.#efile_status
	--		SELECT  
	--			'Accepted' AS [Status],ISNULL([2290],0) AS [2290Received], ISNULL([720],0) AS [720Received], ISNULL([8849],0) AS [8849Received] 
	--			FROM
	--			(
	--				SELECT 
	--					COUNT(r.ReturnID) AS EfileAccepted ,
	--					0 AS EfileRejected,
	--					CASE WHEN r.ProductID IN(1) THEN '720' WHEN r.ProductID IN(5,6) THEN '2290' ELSE '8849' END Product
	--				FROM 
	--					efile_last_status els
	--					INNER JOIN efile_hold eh ON eh.efile_hold_id=els.efile_hold_id
	--					INNER JOIN [returns] r ON eh.returnid=r.returnid AND eh.is_deleted=0
	--				WHERE 
	--					stage = 'apmv' AND els.state = 'Success' AND els.status_id <>21
	--					AND CAST(CONVERT(VARCHAR(30),r.create_time_stamp,106) As DATETIME) = CAST(CONVERT(VARCHAR(30),@Date,106) AS DATETIME) 
	--				GROUP BY r.ProductID
	--			)s 
	--		PIVOT
	--		(
	--		SUM
	--			(EfileAccepted) 
	--			FOR
	--			Product IN([2290],[8849],[720])) p
	--			UNION ALL
	--		SELECT  
	--			'Rejected',ISNULL([2290],0) AS [2290], ISNULL([720],0) AS [720], ISNULL([8849],0) AS [8849] FROM
	--			(
	--				SELECT 
	--					0 EfileAccepted,COUNT(r.ReturnID) AS EfileRejected,CASE WHEN r.ProductID IN(1) THEN '720' WHEN r.ProductID IN(5,6) THEN '2290' ELSE '8849' END Product
	--				FROM 
	--					efile_last_status els
	--					INNER JOIN efile_hold eh ON eh.efile_hold_id=els.efile_hold_id
	--					INNER JOIN [returns] r ON eh.returnid=r.returnid AND eh.is_deleted=0
	--				WHERE 
	--					stage = 'apmv' AND els.state = 'Success' AND els.status_id =21 
	--					AND CAST(CONVERT(VARCHAR(30),r.create_time_stamp,106) AS DATETIME) = CAST(CONVERT(VARCHAR(30),@date,106) As DATETIME) 
	--				GROUP BY r.ProductID
	--			)s 
	--		PIVOT
	--		(
	--		SUM
	--			(efile_rejected) 
	--			FOR
	--			Product IN([2290],[8849],[720])) p
	--		SELECT
	--			 [Status],ISNULL([2290],0) AS 'Tax2290',ISNULL([720],0) 'Tax720',ISNULL([8849],0) 'Tax8849' 
	--		 FROM 
	--			dbo.#efile_status
	--			UNION ALL
	--		SELECT 
	--			'Total',ISNULL(SUM([2290]),0),ISNULL(SUM([720]),0),ISNULL(SUM([8849]),0) 
	--		FROM 
	--			dbo.#efile_status
	--		DROP TABLE 
	--			dbo.#efile_status
	--	SET NOCOUNT OFF;
	--END
GO
PRINT N'Creating [dbo].[usp_efile_comment_get]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_comment_get
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_comment_get]
	@efile_hold_id BIGINT  
AS  
	BEGIN  
		SET NOCOUNT ON; 
			SELECT 
				[efile_comment_id],
				[efile_hold_id],
				[efile_comment],
				[efile_admin_user_name] AS AdminUsersName ,
				efile_admin_users.[create_time_stamp]  
			FROM 
				[dbo].[efile_comment]  WITH(NOLOCK)  
				JOIN [dbo].[efile_admin_users]  WITH(NOLOCK) ON efile_admin_users.[admin_users_id] = efile_comment.[admin_users_id]
			WHERE 
				[efile_hold_id] = @efile_hold_id  
			ORDER BY 
				efile_admin_users.[create_time_stamp] DESC
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_efile_comment_insert]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_comment_insert
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_comment_insert]
	@efile_hold_id BIGINT,
	@efile_comment TEXT,
	@admin_users_id BIGINT
AS
	BEGIN
		SET NOCOUNT ON;
			INSERT INTO [dbo].[efile_comment]  
			(
				[efile_hold_id], 
				[efile_comment], 
				[admin_users_id], 
				[create_time_stamp]
			)
			VALUES
			(
				@efile_hold_id,
				@efile_comment, 
				@admin_users_id, 
				GETDATE()
			)
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_efile_control_get_on_form_type]...';


GO
/*********************************************************************************************************
	CREATED BY: Praveen T.				STORED PROCEDURE NAME: usp_efile_control_get_on_form_type
	CREATED ON: 12th August, 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_control_get_on_form_type] 
    @FormType VARCHAR(20)
AS

BEGIN
    SELECT 
        [form_type],
        [control_name],
        [control_value] 
    FROM [dbo].[efile_control] With(NOLOCK) 
    WHERE 
        [is_deleted] = 0 AND 
        form_type=@FormType
    
UNION ALL 

    SELECT 
        [form_type],
        'UserName' as ControlName,
        [user_name] as ControlValue 
    FROM 
        [dbo].[efile_irs_users] WITH(NOLOCK)  
    WHERE   [is_deleted] = 0 AND 
            [is_active] = 1 AND 
            [form_type] = @FormType 

UNION ALL 

    SELECT 
        [form_type],
        'Password' as ControlName ,
        [Password] as ControlValue 
    FROM 
        [dbo].[efile_irs_users] WITH(NOLOCK) 
    WHERE   [is_deleted] = 0 AND 
            [is_active] = 1 AND 
            [form_type] = @FormType 
UNION ALL 

    SELECT 
        [form_type],
        'EncryptKey' as ControlName ,
        [encrypt_key] as ControlValue 
    FROM 
        [dbo].[efile_irs_users] WITH(NOLOCK)  
    WHERE   [is_deleted] = 0 AND 
            [is_active] = 1 AND 
            [form_type] = @FormType 
END
GO
PRINT N'Creating [dbo].[usp_efile_error_insert]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_error_insert
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_error_insert]
	@submission_id VARCHAR(25),
	@error_code VARCHAR(50) = NULL,
	@error_message VARCHAR(MAX) = NULL,
	@error_classification VARCHAR(50) = NULL,
	@action VARCHAR(50) = NULL,
	@status_id INT,
	@stage VARCHAR(10) = NULL,
	@state VARCHAR(10) = NULL
AS
	BEGIN
		SET NOCOUNT ON; 
			IF EXISTS (SELECT 1 FROM [dbo].[efile_stc_error_code] WITH(NOLOCK) WHERE [error_code] = @error_code)
				BEGIN
					IF @error_message IS NULL 
						SELECT 
							@error_message = ErrorLogErrorMessage 
						FROM 
							[dbo].[efile_stc_error_code] WITH(NOLOCK)  
						WHERE 
							[error_code] = @error_code
								INSERT INTO [dbo].[efile_error]
								(
									[submission_id], 
									[error_code], 
									[error_message], 
									[error_classification], 
									[action],
									[error_picked_up], 
									[error_fixed], 
									[is_deleted], 
									[create_time_stamp], 
									[update_time_stamp]
								)
								VALUES
								(
									@submission_id, 
									@error_code, 
									@error_message, 
									@error_classification, 
									@Action,
									0, 
									0,
									0, 
									GETDATE(), 
									GETDATE()
								)
						EXEC StatusUpdate @submission_id, NULL, @status_id,@stage,@state
				END
			ELSE
				BEGIN
					INSERT INTO  [dbo].[efile_stc_error_code]
					(
						[error_code], 
						[error_fault_response], 
						[error_log_error_message], 
						[error_type],
						[fix_type]
					)
					VALUES
					(
						@error_code, 
						@error_message, 
						@error_classification, 
						NULL,
						NULL
					)
					INSERT INTO [dbo].[efile_error]
					(
						[submission_id], 
						[error_code], 
						[error_message], 
						[error_classification], 
						[action],
						[error_picked_up], 
						[error_fixed], 
						[is_deleted], 
						[create_time_stamp], 
						[update_time_stamp]
					)
					VALUES
					(
						@submission_id, 
						@error_code, 
						@error_message, 
						@error_classification, 
						@action,
						0, 
						0, 
						0, 
						GETDATE(), 
						GETDATE()
					)
				END 
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_efile_error_irs_schema_create]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_error_irs_schema_create
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_error_irs_schema_create]
@SubmissionID VARCHAR(30),
@ErrorCode VARCHAR(30),
@Errormessage TEXT,
@ErrorClassification TEXT,
@Action VARCHAR(50),
@ErrorType VARCHAR(50)
AS
	BEGIN	
		SET NOCOUNT ON;
			DECLARE @Count INT
				IF @ErrorType IS NOT NULL
					BEGIN
						IF  EXISTS(SELECT 1 FROM [dbo].[stc_error_code] WITH(NOLOCK) WHERE [error_type] = @ErrorType)
							BEGIN
								SELECT 
									@ErrorCode = [error_code] 
								FROM 
									[dbo].[stc_error_code] WITH(NOLOCK) 
								WHERE 
									[error_type] = @ErrorType
								INSERT INTO 
									[dbo].[efile_error] 
								VALUES
								(
									@SubmissionID,
									@ErrorCode,
									@Errormessage,
									@ErrorClassification,
									@Action,
									0,
									0,
									0,
									GETDATE(),
									GETDATE()
								)
							END 
						ELSE
							BEGIN
								SELECT @Count = COUNT(ErrorCode)+1 FROM [dbo].[stc_error_code] WITH(NOLOCK) WHERE  [error_code] LIKE 'IRSSCHVAL%'
								SET @ErrorCode = 'IRSSCHVAL'+CAST (@Count AS VARCHAR(50))
								IF EXISTS (SELECT 1 FROM [dbo].[stc_error_code] WHERE [error_code] = @ErrorCode)
									INSERT INTO 
										[dbo].[efile_error]  
									VALUES
									(
										@SubmissionID,
										@ErrorCode,
										@Errormessage,
										@ErrorClassification,
										@Action,
										0,
										0,
										0,
										GETDATE(),
										GETDATE()
									)
								ELSE
									BEGIN
										INSERT INTO 
											[dbo].[stc_error_code] 
										VALUES
										(
											@ErrorCode, 
											@Errormessage,
											@Errormessage,
											@ErrorType,
											3
										)
										INSERT INTO 
											[dbo].[efile_error]  
										VALUES
										(
											@SubmissionID,
											@ErrorCode,
											@Errormessage,
											@ErrorClassification,
											@Action,
											0,
											0,
											0,
											GETDATE(),
											GETDATE()
										)
									END
							END 
					END
				ELSE 
					BEGIN
						IF  EXISTS(SELECT 1 FROM [dbo].[stc_error_code] WITH(NOLOCK) WHERE ErrorFaultResponse = CAST(@ErrorMessage AS VARCHAR(MAX)))
							BEGIN
								SELECT @ErrorCode = [error_code] FROM [dbo].[stc_error_code] WITH(NOLOCK) WHERE [error_type] = @ErrorType
								INSERT INTO 
									[dbo].[efile_error]  
								VALUES
								(
									@SubmissionID,
									@ErrorCode,
									@Errormessage,
									@ErrorClassification,
									@Action,
									0,
									0,
									0,
									GETDATE(),
									GETDATE()
								)
							END 
						ELSE
							BEGIN
								SELECT @Count = count([error_code])+1 FROM [dbo].[stc_error_code] WITH(NOLOCK) WHERE [error_code] LIKE 'IRSSCHVAL%'
								SET @ErrorCode = 'IRSSCHVAL'+cast (@Count AS VARCHAR(50))
								IF EXISTS (SELECT 1 FROM [dbo].[stc_error_code] WHERE ErrorCode = @ErrorCode)
									INSERT INTO 
										[dbo].[efile_error]  
									VALUES
									(
										@SubmissionID,
										@ErrorCode,
										@Errormessage,
										@ErrorClassification,
										@Action,
										0,
										0,
										0,
										GETDATE(),
										GETDATE()
									)
								ELSE
									BEGIN
										INSERT INTO 
											[dbo].[stc_error_code] 
										VALUES
										(
											@ErrorCode, 
											@Errormessage,
											@Errormessage,
											@ErrorType,
											3
										)
										INSERT INTO 
											[dbo].[efile_error]  
										VALUES
										(
											@SubmissionID,
											@ErrorCode,
											@Errormessage,
											@ErrorClassification,
											@Action,
											0,
											0,
											0,
											GETDATE(),
											GETDATE()
										)
									END
							END 
					END 
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_efile_error_picked_up_update]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_error_picked_up_update
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_error_picked_up_update]
@efile_error_id INT
AS
	BEGIN
		SET NOCOUNT ON
			UPDATE 
				[dbo].[efile_error] WITH(ROWLOCK)  
			SET 
				[error_picked_up] = 1 ,
				[update_time_stamp] = GETDATE() 
			WHERE 
				[efile_error_id] = @efile_error_id
		SET NOCOUNT ON
	END
GO
PRINT N'Creating [dbo].[usp_efile_hold_attachment_get_on_efile_hold_id]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_hold_attachment_get_on_efile_hold_id
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_hold_attachment_get_on_efile_hold_id]
	@efile_hold_id BIGINT
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				[efile_hold_id], 
				[type], 
				[efile_attachment],
				[attachment_name],
				[efile_hold_attachment_id]
			FROM 
				[dbo].[efile_hold_attachment] WITH(NOLOCK) 
			WHERE 
				[efile_hold_id] = @efile_hold_id AND [is_deleted] = 0
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_efile_hold_attachment_insert]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_hold_attachment_insert
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_hold_attachment_insert]
	@efile_hold_id INT,
	@efile_attachment VARBINARY(MAX),
	@type VARCHAR(50) = NULL,
	@attachment_name VARCHAR(50) = NULL
AS
	BEGIN
		SET NOCOUNT ON;
			INSERT INTO [dbo].[efile_hold_attachment]
			(
				[efile_hold_id], 
				[type], 
				[efile_attachment],
				[attachment_name],
				[is_deleted] ,
				[create_time_stamp],
				[update_time_stamp]
			)
			VALUES 
			(
				@efile_hold_id,
				@type, 
				@efile_attachment,
				@attachment_name,
				0,
				GETDATE(),
				GETDATE()
			) 
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_efile_hold_get_by_id]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_hold_get_by_id
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_hold_get_by_id]
	@efile_hold_id BIGINT
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				[efile_hold_id],
				[sender_id],
				[return_id],
				[user_id],
				[tax_return_type_id],
				[user_name],
				[user_email],  
				[no_of_attachments],
				[tax_object],
				[env_indicator],
				[efile_trans_id],
				[tax_year],
				[tax_period]
			FROM 
				[dbo].[efile_hold] WITH (NOLOCK)
			WHERE 
				[efile_hold_id] = @efile_hold_id 
				AND [is_deleted] = 0 
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_efile_hold_get_irs_schema_count]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_hold_get_irs_schema_count
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_hold_get_irs_schema_count]
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				COUNT([efile_irs_schema_id]) AS 'Count' 
			FROM 
				[dbo].[efile_irs_schema] WITH(NOLOCK)
			WHERE
				CONVERT(VARCHAR(13),[create_time_stamp],107) = CONVERT(VARCHAR(13),GETDATE(),107)
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_efile_hold_get_on_id]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_hold_get_on_id
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_hold_get_on_id]
	@efile_hold_id BIGINT  
AS  
	BEGIN  
		SET NOCOUNT ON;  
			SELECT 
				[efile_hold_id],
				[sender_id],
				[return_id],
				[user_id],
				[tax_return_type_id],
				[user_name],
				[user_email],  
				[no_of_attachments],
				[tax_object],
				[env_indicator],
				[efile_trans_id],
				[tax_year],
				[tax_period]
			FROM 
				[dbo].[efile_hold] WITH (NOLOCK)  
			WHERE 
				[efile_hold_id] = @efile_hold_id AND [is_deleted] = 0   
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_efile_hold_persist]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_hold_persist
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_hold_persist]
 @sender_id INT,    
 @return_id INT = NULL,    
 @user_id INT = NULL,    
 @user_name VARCHAR(50) = NULL,    
 @no_of_attachments INT = NULL,    
 @user_email VARCHAR(50) = NULL,    
 @tax_object XML,     
 @env_indicator CHAR(1),    
 @efile_trans_id VARCHAR(30) ,    
 @status_id INT = NULL,    
 @stage VARCHAR(10) = NULL,  
 @state VARCHAR(10) = NULL,  
 @tax_return_type_id VARCHAR(20) = NULL,  
 @tax_year VARCHAR(10) = NULL,  
 @tax_period VARCHAR(30) = NULL  
AS    
	SET NOCOUNT ON    
		BEGIN     
			DECLARE @Date DATETIME, @EfileHoldID INT    
			SET @Date = GETDATE()    
			IF EXISTS (SELECT 1 FROM [dbo].[efile_hold] WITH(NOLOCK) WHERE [return_id] = @return_id AND [is_deleted] = 0)  
				BEGIN  
				 UPDATE [dbo].[efile_hold] WITH(ROWLOCK)  
				 SET 
					 [is_deleted]=1 , 
					 [update_time_stamp] = @Date   
				 WHERE 
					[return_id] = @return_id  
				 INSERT INTO [dbo].[efile_hold]
				 (
					 [sender_id], 
					 [tax_return_type_id],
					 [return_id] , 
					 [no_of_attachments], 
					 [user_id], 
					 [user_name],
					 [user_email],
					 [tax_object], 
					 [env_indicator], 
					 [efile_trans_id], 
					 [is_deleted], 
					 [create_time_stamp], 
					 [update_time_stamp],
					 [tax_year],
					 [tax_period]
				 )     
				 VALUES 
				 (
					 @sender_id, 
					 @tax_return_type_id,
					 @return_id,
					 @no_of_attachments,
					 @user_id,
					 @user_name,
					 @user_email,
					 @tax_object,
					 @env_indicator, 
					 @efile_trans_id, 
					 0, 
					 @Date, 
					 @Date,
					 @tax_year,
					 @tax_period
				 )    
				 SET @EfileHoldID=@@Identity     
				 SELECT @EfileHoldID AS 'EfileHoldID'    
				 EXEC StatusUpdate NULL, @EfileHoldID, @status_id,@stage,@state  
				END   
			ELSE  
				INSERT INTO [dbo].[efile_hold]
				 (
					 [sender_id], 
					 [tax_return_type_id],
					 [return_id] , 
					 [no_of_attachments], 
					 [user_id], 
					 [user_name],
					 [user_email],
					 [tax_object], 
					 [env_indicator], 
					 [efile_trans_id], 
					 [is_deleted], 
					 [create_time_stamp], 
					 [update_time_stamp],
					 [tax_year],
					 [tax_period]
				 )        
				VALUES 
				(
					@sender_id, 
					@tax_return_type_id,
					@return_id, 
					@no_of_attachments,
					@user_id,
					@user_name,
					@user_email,
					@tax_object,
					@env_indicator, 
					@efile_trans_id, 
					0, 
					@Date, 
					@Date,
					@tax_year,
					@tax_period
				)    
				SET @EfileHoldID = @@Identity     
				SELECT @EfileHoldID AS 'EfileHoldID'    
				EXEC StatusUpdate NULL, @EfileHoldID, @status_id,@stage,@state  
		END
	SET NOCOUNT OFF
GO
PRINT N'Creating [dbo].[usp_efile_irs_schema_get_on_efile_hold_id]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_irs_schema_get_on_efile_hold_id
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_irs_schema_get_on_efile_hold_id]
	@efile_hold_id BIGINT
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				eh.[efile_hold_id], 
				eh.[tax_return_type_id], 
				[efile_irs_schema], 
				[manifest_xml], 
				[submission_id] 
			FROM 
				[dbo].[efile_irs_schema] eis WITH(NOLOCK) 
				JOIN [dbo].[efile_hold] eh WITH(NOLOCK) ON eis.[efile_hold_id] = eh.[efile_hold_id]
			WHERE 
				eis.[efile_hold_id] = @efile_hold_id AND eh.[is_deleted] = 0 AND eis.[is_deleted] = 0
			SELECT 
				[efile_hold_id], 
				[type], 
				[efile_attachment], 
				[attachment_name],
				[efile_hold_attachment_id]
			FROM 
				[dbo].[efile_hold_attachment] WITH(NOLOCK) 
			WHERE [efile_hold_id] = @efile_hold_id AND [is_deleted] = 0
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_efile_irs_schema_get_today_count]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_irs_schema_get_today_count
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_irs_schema_get_today_count]
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				COUNT([efile_irs_schema_id]) AS 'Count' 
			FROM 
				[dbo].[efile_irs_schema] WITH(NOLOCK) 
			WHERE 
				CONVERT([VARCHAR](20),[create_time_stamp],107) = CONVERT([VARCHAR](20),GETDATE(),107)
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_efile_irs_schema_insert]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_irs_schema_insert
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_irs_schema_insert]
@efile_hold_id INT,
@efile_irs_schema XML,
@manifest_xml XML = NULLL,
@submission_id VARCHAR(20) = NULL,
@status_id INT = 0,
@stage VARCHAR(10) = NULL,
@state VARCHAR(10) = NULL
AS
	SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
	SET NOCOUNT ON;
		BEGIN TRAN
			IF EXISTS (SELECT 1 FROM [dbo].[efile_irs_schema] WITH(NOLOCK)  WHERE [efile_hold_id] = @efile_hold_id AND [is_deleted] = 0)
				UPDATE  
					[dbo].[efile_irs_schema]
				SET 
					[is_deleted] = 1,
					[update_time_stamp] = GETDATE() 
				WHERE 
					[efile_hold_id] = @efile_hold_id AND [is_deleted] = 0
			INSERT INTO [dbo].[efile_irs_schema]
			(
				[efile_hold_id],
				[efile_irs_schema],
				[manifest_xml], 
				[submission_id],
				[is_deleted],
				[create_time_stamp],
				[update_time_stamp]
			)
			VALUES 
			(
				@efile_hold_id,
				@efile_irs_schema,
				@manifest_xml, 
				@submission_id,
				0,
				GETDATE(),
				GETDATE()
			)
			EXEC StatusUpdate NULL, @efile_hold_id, @submission_id ,@stage,@state
		COMMIT TRAN
	SET NOCOUNT OFF;
GO
PRINT N'Creating [dbo].[usp_efile_irs_schema_persist]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_irs_schema_persist
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_irs_schema_persist]
@efile_hold_id INT,
@efile_irs_schema XML,
@manifest_xml XML = NULLL,
@submission_id VARCHAR(20) = NULL,
@status_id INT = 0,
@old_submission_id VARCHAR(30) = NULL,
@stage VARCHAR(10),
@state VARCHAR(10)
AS
	SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
	SET NOCOUNT ON
		BEGIN TRAN
			IF @old_submission_id IS NULL
				BEGIN 
					INSERT INTO [dbo].[efile_irs_schema]
					(
						[efile_hold_id],
						[efile_irs_schema],
						[manifest_xml], 
						[submission_id],
						[is_deleted],
						[create_time_stamp],
						[update_time_stamp]
					)
					VALUES 
					(
						@efile_hold_id,
						@efile_irs_schema,
						@manifest_xml, 
						@submission_id,
						0,
						GETDATE(),
						GETDATE()
					)
					EXEC 
						StatusUpdate NULL,
						@efile_hold_id, 
						@status_id,
						@Stage,
						@State
				END 
			ELSE
				BEGIN
					INSERT INTO [dbo].[efile_irs_schema]
					(
						[efile_hold_id],
						[efile_irs_schema],
						[manifest_xml], 
						[submission_id],
						[is_deleted],
						[create_time_stamp],
						[update_time_stamp]
					)
					VALUES 
					(
						@efile_hold_id,
						@efile_irs_schema,
						@manifest_xml,
						@submission_id,
						0,
						GETDATE(),
						GETDATE()
					)
					EXEC 
						StatusUpdate NULL,
						@efile_hold_id, 
						@status_id,
						@Stage,
						@State
					UPDATE 
						[dbo].[efile_irs_schema] WITH(ROWLOCK)
					SET 
						[is_deleted] = 1,[update_time_stamp] = GETDATE() 
					WHERE 
						[submission_id] = @submission_id
					UPDATE 
						[dbo].[efile_sender] SET [is_deleted] = 1 WHERE [submission_id] = @old_submission_id
					UPDATE 
						[dbo].[efile_receiver] SET [is_deleted] = 1 WHERE [submission_id] = @old_submission_id
				END 
		COMMIT TRAN
	SET NOCOUNT OFF
GO
PRINT N'Creating [dbo].[usp_efile_name_control_persist]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_name_control_persist
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_name_control_persist]
	@submission_id VARCHAR(20)
AS
	BEGIN
		SET NOCOUNT ON; 
			IF EXISTS 
				(
					SELECT 1 FROM [dbo].[efile_name_control] WITH(NOLOCK)
					WHERE [business_info_id] IN 
					(
						SELECT 
							business_info.business_info_id
						FROM 
							[dbo].[business_info] WITH(NOLOCK)
							JOIN [dbo].[returns] WITH(NOLOCK) ON [returns].[business_info_id] = [business_info].[business_info_id] 
							JOIN [dbo].[efile_hold] WITH(NOLOCK) ON [efile_hold].[return_id] = [returns].[return_id]
							JOIN [dbo].[efile_irs_schema] WITH(NOLOCK) ON [efile_irs_schema].[efile_hold_id] =[efile_hold].[efile_hold_id] 
						WHERE 
							[efile_irs_schema].[submission_id] = @submission_id 
					)
				)
				BEGIN
					UPDATE 
						[dbo].[efile_name_control]
					SET 
						[name_control]=(
						SELECT SUBSTRING
						(
							CONVERT(VARCHAR(MAX),[efile_irs_schema]),
							CHARINDEX('<namecontrol>',CONVERT(VARCHAR(MAX),[efile_irs_schema]))+13,
							CHARINDEX('</namecontrol>',CONVERT(VARCHAR(MAX),[efile_irs_schema]))-13-CHARINDEX('<namecontrol>',CONVERT(VARCHAR(MAX),[efile_irs_schema]))
						)
					FROM [dbo].[efile_receiver] WITH(NOLOCK)
						INNER JOIN [dbo].[efile_irs_schema] WITH(NOLOCK) ON efile_receiver.[submission_id] = efile_irs_schema.[submission_id]
						INNER JOIN [dbo].[efile_hold] WITH(NOLOCK) ON efile_irs_schema.[efile_hold_id] = efile_hold.[efile_hold_id]
						INNER JOIN [dbo].[returns] WITH(NOLOCK) ON efile_hold.[return_id] = returns.[return_id]
						INNER JOIN [dbo].[business_info] WITH(NOLOCK) ON returns.[business_info_id] = [business_info.business_info_id]
						INNER JOIN [dbo].[users] WITH(NOLOCK) ON users.[user_id] = business_info.[user_id]
					WHERE 
						efile_receiver.[submission_id] = @submission_id) 
						WHERE 
							[business_info_id] = (
							SELECT 
								[business_info].[business_info_id] 
							FROM 
								[dbo].[business_info] WITH(NOLOCK)
							JOIN 
							[dbo].[returns] ON [returns].[business_info_id] = [business_info].[business_info_id] 
							JOIN 
							[dbo].[efile_hold] ON [efile_hold].[return_id] = [returns].[return_id]
							JOIN 
							[dbo].[efile_irs_schema] ON [efile_irs_schema].[efile_hold_id] = [efile_hold].[efile_hold_id] AND [efile_irs_schema].[submission_id]  = @submission_id)
				END
			ELSE
				BEGIN
					INSERT INTO 
						[dbo].[efile_name_control]
						(
							[user_id],
							[business_info_id],
							[business_info_name],
							[return_id],
							[name_control]
						)
					SELECT 
						[users].[user_id],
						[returns].[business_info_id],
						[business_info].business_name ,  
						[returns].return_id,
						SUBSTRING(CONVERT(VARCHAR(MAX),[efile_irs_schema]),CHARINDEX('<namecontrol>',CONVERT(VARCHAR(MAX),[efile_irs_schema]))+13,
						CHARINDEX('</namecontrol>',CONVERT(VARCHAR(MAX),[efile_irs_schema]))-13-CHARINDEX('<namecontrol>',CONVERT(VARCHAR(MAX),[efile_irs_schema])))
						--EfileIRSSchema.value('(/Return/ReturnHeader/Filer/NameControl)[1]','varchar(50)') 
					FROM [dbo].[efile_receiver] WITH(NOLOCK)
						INNER JOIN [dbo].[efile_irs_schema] ON [efile_receiver].[submission_id] = [efile_irs_schema].[submission_id]
						INNER JOIN [dbo].[efile_hold] ON [efile_irs_schema].[efile_hold_id] = [efile_hold].[efile_hold_id]
						INNER JOIN [dbo].[returns] ON [efile_hold].[return_id] = [returns].[return_id]
						INNER JOIN [dbo].[business_info] ON returns.[business_info_id] = [business_info.business_info_id]
						INNER JOIN [dbo].[users] ON [users].[user_id] = [business_info].[user_id]
					WHERE 
						[efile_receiver].[submission_id]  = @submission_id
				END
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_efile_receiver_insert]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_receiver_insert
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_receiver_insert]
	@submission_id VARCHAR(20),
	@send_submission_status VARBINARY(MAX) = NULL,
	@get_ack_status VARBINARY(MAX) = NULL,
	@submission_status VARBINARY(MAX) = NULL,
	@schedule1 VARBINARY(MAX) = NULL,
	@ack_xml XML = NULL,
	@status_id INT = 0,
	@stage VARCHAR(10),
	@state VARCHAR(10),
	@irs_system_id VARCHAR(20) = NULL
AS
	BEGIN
		SET NOCOUNT ON; 
			INSERT INTO [dbo].[efile_receiver]
			(
				[submission_id], 
				[send_submission_status],
				[get_ack_status], 
				[ack_xml],
				[submission_status],
				[schedule1],
				[is_deleted],
				[system_id],
				[create_time_stamp],
				[update_time_stamp]
			)
			values
			(
				@submission_id, 
				@send_submission_status, 
				@get_ack_status, 
				@ack_xml,
				@submission_status,
				@schedule1,
				0,
				@irs_system_id,
				getdate(),
				getdate()
			)
			EXEC StatusUpdate @submission_id, NULL, @status_id, @stage, @state
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_efile_receiver_update]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_receiver_update
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_receiver_update]
@SubmissionID VARCHAR(20),
@ReceiverType VARCHAR(MAX),
@AttachmentStatus VARBINARY(MAX)=NULL,
@AckXML XML = NULL,
@StatusID INT = 0,
@Stage VARCHAR(10),
@State VARCHAR(10)
AS
	BEGIN
		SET NOCOUNT ON
		IF @ReceiverType='SendSubmissionStatus'
			UPDATE 
				[dbo].[efile_receiver] WITH(ROWLOCK) 
			SET 
				[send_submission_status] = @AttachmentStatus 
			WHERE 
				[submission_id] = @SubmissionID 
				AND [is_deleted] = 0
		ELSE IF @ReceiverType='GetAckStatus'
			BEGIN
				UPDATE 
					[dbo].[efile_receiver] WITH(ROWLOCK) 
				SET 
					[get_ack_status] = @AttachmentStatus 
				WHERE 
					[submission_id] = @SubmissionID 
					AND [is_deleted] = 0
			--			if @@rowcount > 0
			IF @State='Success'
			EXEC EFileNameControlCreate @SubmissionID
			END
		ELSE IF @ReceiverType='SubmissionStatus'
			UPDATE 
				[dbo].[efile_receiver] WITH(ROWLOCK) 
			SET 
				[submission_status] = @AttachmentStatus 
			WHERE 
				[submission_id] = @SubmissionID 
				AND [is_deleted] = 0
		ELSE IF @ReceiverType='GetSchedule1'
			UPDATE 
				[dbo].[efile_receiver] WITH(ROWLOCK) 
			SET 
				[schedule1] = @AttachmentStatus 
			WHERE 
				[submission_id] = @SubmissionID 
				AND [is_deleted] = 0
		ELSE IF @ReceiverType='AckXML'
			UPDATE 
				[dbo].[efile_receiver] WITH(ROWLOCK) 
			SET 
				[ack_xml] = @AckXML 
			WHERE 
				[submission_id] = @SubmissionID 
				AND [is_deleted] = 0
		EXEC StatusUpdate @SubmissionID, null, @StatusID, @Stage, @State
		SET NOCOUNT ON
	END
GO
PRINT N'Creating [dbo].[usp_efile_request_response_create]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_request_response_create
	CREATED ON: 12th May 2014
*******************************************************************************************************/


CREATE PROCEDURE [dbo].[usp_efile_request_response_create]
@submission_id VARCHAR(25)= NULL,
@request TEXT = NULL,
@message_id VARCHAR(50),
@response TEXT = NULL,
@error_code VARCHAR(50) = NULL,
@error_message TEXT = NULL,
@error_classification VARCHAR(50)=NULL,
@action VARCHAR(50) = NULL,
@service_action VARCHAR(50) = NULL,
@status_id TINYINT = 0--,
--@Stage varchar(10)=null,
--@State varchar(10)=null
AS
	SET NOCOUNT ON;  
		BEGIN
			INSERT INTO [dbo].[efile_request_response]
			(
				[submission_id], 
				[message_id],
				[request], 
				[response], 
				[action],
				[status_id], 
				[create_time_stamp], 
				[update_time_stamp]
			)
			VALUES
			(
				@submission_id, 
				@message_id,
				@request, 
				@response, 
				@service_action,
				@status_id, 
				GETDATE(), 
				GETDATE()
			)
			IF  @submission_id IS NOT NULL 
				BEGIN
					IF @error_code IS NOT NULL
						BEGIN
						INSERT INTO [dbo].[efile_error]
						(
							[submission_id], 
							[error_code], 
							[error_message], 
							[error_classification], 
							[action],
							[error_picked_up], 
							[error_fixed], 
							[is_deleted], 
							[create_time_stamp], 
							[update_time_stamp]
						)
						VALUES
						(
							@submission_id, 
							@error_code, 
							@error_message, 
							@error_classification, 
							@Action,
							0, 
							0, 
							0, 
							GETDATE(), 
							GETDATE()
						)
						--exec StatusUpdate @SubmissionID, null, @StatusID ,@Stage,@State
						END    
				END
		END
	SET NOCOUNT OFF;
GO
PRINT N'Creating [dbo].[usp_efile_schema_get_by_id]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_schema_get_by_id
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_schema_get_by_id]
	@submission_id VARCHAR(20)
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				eh.[efile_hold_id],
				eh.[tax_return_type_id],
				es.[submission_id],
				eh.[return_id],
				eh.[user_id],
				eh.[user_name],
				eh.[user_email],
				eh.[no_of_attachments],
				eh.[tax_object],
				eh.[efile_trans_id],
				es.[efile_irs_schema],
				es.[manifest_xml]
			FROM 
				[dbo].[efile_hold] eh WITH (NOLOCK)
				JOIN  [dbo].[efile_irs_schema] es WITH(NOLOCK) ON eh.[efile_hold_id] = es.[efile_hold_id]
			WHERE 
				es.[submission_id] = @submission_id 
				AND es.[is_deleted] = 0  
				AND eh.[is_deleted] = 0
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_efile_schema_version_get]...';


GO
/*********************************************************************************************************
	CREATED BY: Praveen T				STORED PROCEDURE NAME: usp_efile_schema_version_get
	CREATED ON: 12 August 2014
*********************************************************************************************************/
CREATE PROCEDURE [dbo].[usp_efile_schema_version_get]
@return_type VARCHAR(50),
@tax_year VARCHAR(10),
@tax_period VARCHAR(50)

AS
BEGIN

    SELECT 
		[efile_schema_version_id],
		[schema_location] 
		FROM [dbo].[efile_schema_version] WITH(NOLOCK) 

    WHERE 
		(return_type=@return_type AND tax_year=@tax_year AND 
		tax_period=@tax_period AND is_deleted=0)

END
GO
PRINT N'Creating [dbo].[usp_efile_search]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_search
	CREATED ON: 9th May 2014
*********************************************************************************************************/


CREATE PROCEDURE [dbo].[usp_efile_search]
(
	@return_id BIGINT = NULL,    
	@business_name VARCHAR(50) = NULL,    
	@ein VARCHAR(30) = NULL,    
	@submission_id VARCHAR(30) = NULL,    
	@date DATETIME = NULL,    
	@description VARCHAR(50) = NULL,
	@form_type INT = NULL
)
AS    
	BEGIN    
		SET NOCOUNT ON;   
			DECLARE @strSQl [NVARCHAR](MAX)    
			SET @strSQl='
				SELECT 
					[ein], 
					[business_name],
					[efile_hold].[TaxReturnTypeID], 
					[returns].[return_id],'''' as Description,
					[efile_irs_schema].[submission_id],     
					[efile_hold].[create_time_stamp], 
					[send_submission_status], 
					[get_ack_status],
					[submission_status],    
					[schedule1],'''' as StatusID,
					[efile_last_status].[stage] + ''-'' + [efile_last_status].[state] as StcStatus 
				FROM 
					[returns] WITH(NOLOCK)      
					JOIN [dbo].[business_info] WITH(NOLOCK) ON [returns].[business_info_id] = [business_info].[business_info_id]   
					LEFT OUTER JOIN [dbo].[efile_hold] WITH(NOLOCK) ON [efile_hold].[return_id] = [returns].[return_id]    
					LEFT OUTER JOIN [dbo].[efile_irs_schema] WITH(NOLOCK) ON [efile_irs_schema].[efile_hold_id] = [efile_hold].[efile_hold_id ]   
					LEFT OUTER JOIN [dbo].[efile_sender] WITH(NOLOCK) ON [efile_irs_schema].[submission_id] = [efile_sender].[submission_id]    
					LEFT OUTER JOIN [dbo].[efile_receiver] WITH(NOLOCK) ON [efile_receiver].[submission_id] = [efile_irs_schema].[submission_id ]   
					LEFT OUTER JOIN [dbo].[efile_last_status] WITH(NOLOCK) ON [efile_last_status].[efile_hold_id] = [efile_hold].[efile_hold_id]    
				WHERE 
					[business_info].[is_deleted] = 0 
					AND [efile_irs_schema].[is_deleted] = 0 
					AND [efile_hold].[is_deleted] = 0     
					AND [efile_sender].[is_deleted] = 0 
					AND [efile_receiver].[is_deleted] = 0 
					AND [efile_irs_schema].[submission_id] IS NOT NULL'    
			IF  
				@return_id IS NOT NULL     
			SET 
				@strSQl = @strSQl + ' and [returns].[return_id] = '+ CAST(@return_id AS VARCHAR(20))    
			IF 
				@business_name IS NOT NULL    
			SET 
				@strSQl = @strSQl + ' and [business_info].[business_name] = '''+ CAST(@business_name AS VARCHAR(50))+''''    
			IF 
				@ein IS NOT NULL     
			SET 
				@strSQl = @strSQl + ' and [business_info].[ein] = ''' + CAST(@EIN AS VARCHAR(30))   +''''    
			IF 
				@submission_id IS NOT NULL     
			SET 
				@strSQl = @strSQl + ' and [efile_irs_schema].[submission_id] = ''' + CAST(@submission_id AS VARCHAR(30))+''''    
			IF 
				@description IS NOT NULL     
			SET 
				@strSQl = @strSQl + ' and [returns].[description] = ''' + CAST(@description AS VARCHAR(30))+''''    
			IF 
				@date IS NOT NULL     
			SET 
				@strSQl = @strSQl + ' and convert(varchar(10),[efile_hold].[create_time_stamp],105) = convert(varchar(10),cast(''' + CAST(@date AS VARCHAR(30))   +''' as datetime),105)'    
			IF 
				@form_type IS NOT NULL     
			SET 
				@strSQl = @strSQl + ' and [tax_return_type_id] =  ''' + CAST(@form_type AS VARCHAR(30))+''''    
			EXEC sp_executesql @strSQl    
		SET NOCOUNT OFF;   
	End
GO
PRINT N'Creating [dbo].[usp_efile_sender_persist]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_sender_persist
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_sender_persist]
	@efile_hold_id INT,
	@dime_attachment VARBINARY(MAX),
	@submission_id VARCHAR(20),
	@message_id VARCHAR(20) =NULL,
	@status_id TINYINT = NULL,
	@stage VARCHAR(10),
	@state VARCHAR(10)
AS
	SET NOCOUNT ON
	SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
		BEGIN TRAN
			IF EXISTS (SELECT 1 FROM [dbo].[efile_sender]  WITH(NOLOCK) WHERE [efile_hold_id] = @efile_hold_id AND [is_deleted] = 0) 
			UPDATE 
				[dbo].[efile_sender]  
			SET 
				[is_deleted] = 1 , 
				[update_time_stamp] = GETDATE() 
			WHERE 
				[efile_hold_id] = @efile_hold_id AND [is_deleted] = 0
			INSERT INTO [dbo].[efile_sender] 
			(
				[efile_hold_id],
				[dime_attachment],
				[submission_id],
				[message_id],
				[is_deleted],
				[create_time_stamp],
				[update_time_stamp]
			)
			VALUES
			(
				@efile_hold_id,
				@dime_attachment,
				@submission_id,
				@message_id,
				0,
				GETDATE(),
				GETDATE()
			)
			EXEC StatusUpdate @submission_id, @efile_hold_id, @status_id, @Stage, @State
		COMMIT TRAN
	SET NOCOUNT ON
GO
PRINT N'Creating [dbo].[usp_efile_transmit_get_all]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_transmit_get_all
	CREATED ON: 8th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_transmit_get_all]
AS 
	BEGIN
		SELECT 
			[efile_transmit_id],
			[return_id],
			[return_type],
			[stage],
			[state],
			[user_id],
			[ip_date_time],
			[ip_time_zone],
			[ip_address],
			[is_deleted]
		FROM  
			[dbo].[efile_transmit] WITH(NOLOCK)
		WHERE
			[stage] ='TRAN' AND [state] = 'Blank' AND [is_deleted] = 0
	END
GO
PRINT N'Creating [dbo].[usp_efile_transmit_persist]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_transmit_persist
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_transmit_persist]
	@user_id BIGINT,        
	@return_id BIGINT,        
	@return_type VARCHAR(20),        
	@stage VARCHAR(10),        
	@state VARCHAR(10),        
	@ip_date_time VARCHAR(50),        
	@ip_time_zone VARCHAR(50),        
	@ip_address VARCHAR(50),        
	@status_id INT        
AS         
	BEGIN 
		SET NOCOUNT ON;        
		--- Temp Fix----------      
		 DECLARE @Day VARCHAR(10),@ProductId TINYINT ,@PaymentDate DATETIME,@Status VARCHAR(5)     
		 SELECT @ProductId=[product-id] FROM [returns] WITH(NOLOCK) WHERE [return_id] = @return_id      
			 IF @ProductId = 5      
		  BEGIN   
			 SET @PaymentDate = getdate()	   
			 SET @Day= datename (dw, @PaymentDate)  
			 SET @PaymentDate=CASE 
				 WHEN @Day = 'Saturday' THEN DATEADD(dd,2,@PaymentDate)      
				 WHEN @Day = 'Sunday' THEN DATEADD(dd,1,@PaymentDate)
				 ELSE GETDATE() END      
		  END      
		-----------------------       
		 If EXISTS (SELECT 1 FROM [dbo].[efile_transmit] WITH(NOLOCK) WHERE [return_id] = @return_id)        
			 Begin        
			   UPDATE  [dbo].[efile_transmit] WITH(ROWLOCK) 
			   SET 
					[is_deleted] = 1 
			   WHERE 
					[return_id] = @return_id        
			   INSERT INTO  [dbo].[efile_transmit]
			   (
				   [user_id],
				   [return_id],
				   [return_type],
				   [stage],
				   [state],
				   [ip_date_time],
				   [ip_time_zone],
				   [ip_address],
				   [status_id],
				   [is_deleted]
			   )        
			   VALUES
			   (
				   @user_id,
				   @return_id,
				   @return_type,
				   @stage,
				   @state,
				   @ip_date_time,
				   @ip_time_zone,
				   @ip_address,
				   @status_id,
				   0
			   ) 
			   --Modified For Multiple E-mail Issue On 15-07-2011---------
			IF EXISTS(SELECT 1 FROM [dbo].[efile_tax_xml] WITH(NOLOCK) WHERE [return_id] = @return_id AND [status_id] = 4) 
				 SET @Status='TRUE'
				  ELSE IF EXISTS(SELECT 1 FROM [dbo].[efile_transmit] WITH(NOLOCK) WHERE [return_id] = @return_id AND [is_deleted] = 1)    
						SET @Status='FALSE' 
				ELSE    
				  SET @Status='TRUE'      
			   SELECT @@Identity AS EfileTransmitID, @Status AS 'Status'  
			   --Update Account Details - Requested Date        
			   UPDATE [dbo].[account_details] WITH(ROWLOCK)        
				 SET  [payment_date] = @PaymentDate       
				 WHERE [return_id] = @return_id         
			  END        
		 ELSE        
			  BEGIN        
			   INSERT INTO [dbo].[efile_transmit]
			   (
				   [user_id],
				   [return_id],
				   [return_type],
				   [stage],
				   [state],
				   [ip_date_time],
				   [ip_time_zone],
				   [ip_address],
				   [status_id],
				   [is_deleted]
			   )        
			   VALUES
			   (
				   @user_id,
				   @return_id,
				   @return_type,
				   @stage,
				   @state,
				   @ip_date_time,
				   @ip_time_zone,
				   @ip_address,
				   @status_id,
				   0
			   )        
			   SELECT @@Identity AS EfileTransmitID,'TRUE' AS 'Status'         
			   --Update Account Details - Requested Date        
			   UPDATE [dbo].[account_details]      
				 SET  
					[payment_date] = @PaymentDate       
				 WHERE 
					[return_id] = @return_id  
			  END 
		  SET NOCOUNT OFF;       
	END
GO
PRINT N'Creating [dbo].[usp_efile_transmit_update]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efile_transmit_update
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efile_transmit_update]
(
	@efile_transmit_id BIGINT,
	@state VARCHAR(10)
)
AS
	BEGIN
		SET NOCOUNT ON;
			UPDATE 
				[dbo].[efile_transmit]  SET [state] = @state 
			WHERE 
				[efile_transmit_id] = @efile_transmit_id
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_efiled_users]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efiled_users
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efiled_users]
@form_type VARCHAR(20)    
AS        
	SET NOCOUNT ON;        
		BEGIN        
			SELECT 
				EH.[efile_hold_id],
				EH.[tax_return_type_id],
				EH.[return_id],
				EH.[create_time_stamp] as 'SubmitDate',
				EH.[efile_trans_id],        
				case EF.[status_id] 
				when 5 then 'Yes' else 'No' End as 'Schedule1pushed',        
				ELS.[stage] as StcStatus,        
				ELS.[state],        
				case isnull(Processed,0) 
					when 1 then 'Paid' else 'NotPaid' End Status,        
				--SEFS.StcStatus,        
				(
					SELECT 
					COUNT(1) 
					FROM 
					[dbo].[efile_irs_schema] WITH(NOLOCK) 
					WHERE 
					EH.[efile_hold_id] = [efile_hold_id]
				) SubmissionCount  ,      
				CASE  WHEN 
					(
						SELECT 
						COUNT(1) 
						FROM 
						[dbo].[efile_tax_xml] EFF WITH(NOLOCK)  
						WHERE 
						EFF.[return_id] = EH.[return_id]
					)   > 1    THEN  'YES'    ELSE 'NO' END AS 'RETRANS',        
					U.[user_id],
					[user_name],
					U.[login_id],
					BI.[business_name],
					BI.[phone],
					EH.[user_email],
					EIRS.[submission_id],
					ELS.[stage],
					CASE (EF.[status_id]) 
						WHEN 1 THEN 'Transmitted'      
						WHEN 2 THEN 'Approved'      
						WHEN 3 THEN 'Accepted'      
						WHEN 4 THEN 'Ready to File'      
						WHEN 5 THEN 'Schedule 1'  
						WHEN 6 THEN 'Rejected'     
						ELSE 'Not Transmitted' END AS 'EfileStatus'     
			FROM 
				[dbo].[efile_hold] EH WITH(NOLOCK)         
				INNER JOIN [dbo].[efile_tax_xml] EF WITH(NOLOCK) ON EF.[efile_trans_id] = EH.[efile_trans_id] and EF.[id_deleted] = 0        
				INNER JOIN [dbo].[efile_irs_schema] EIRS WITH(NOLOCK) ON EH.[efile_hold_id] = EIRS.[efile_hold_id] and EIRS.[is_deleted] = 0         
				INNER JOIN [dbo].[efile_last_status] ELS WITH(NOLOCK) ON EH.[efile_hold_id] = ELS.[efile_hold_id]        
				INNER JOIN [dbo].[returns] RT WITH(NOLOCK) ON RT.[return_id] = EH.[return_id]         
				INNER JOIN [dbo].[business_info] BI WITH(NOLOCK) ON BI.[business_info_id] = RT.[business_info_id]        
				INNER JOIN [dbo].[users] U WITH(NOLOCK) ON U.[user_id] = BI.[user_id]         
				left join [dbo].[orders] O on O.[return_id] = EH.[return_id]         
				--INNER JOIN STCStatus SEFS WITH(NOLOCK) ON SEFS.StcStatusID = ELS.StatusID        
			WHERE 
				EH.[is_deleted] =0    
				and EH.[tax_return_type_id] = @form_type    
			GROUP BY 
				EH.[efile_hold_id],
				EH.[return_id],
				EH.[create_time_stamp],
				EH.[efile_trans_id],        
				U.[user_id],
				[user_name],
				U.[login_id],
				BI.[business_name],
				BI.[phone],
				EH.[user_email],
				EIRS.[submission_id],
				ELS.[stage],
				EF.[status_id],
				O.[processed],        
				ELS.[state],
				EH.[tax_return_type_id]
			ORDER BY 
				EH.[return_id] DESC--,SEFS.StcStatus        
		END
	SET NOCOUNT OFF;
GO
PRINT N'Creating [dbo].[usp_efiled_users_by_id]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_efiled_users_by_id
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_efiled_users_by_id]
@efile_hold_id INT 
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				EH.[efile_hold_id],
				EH.[tax_return_type_id],
				EH.[return_id],
				EH.[create_time_stamp] AS 'SubmitDate',
				EH.[efile_trans_id],
				CASE  WHEN 
					(
						SELECT 
							COUNT(1) 
						FROM 
							[dbo].[efile_tax_xml] EFF WITH(NOLOCK)  
						WHERE 
							EFF.[return_id] = EH.[return_id]
					)   > 1    THEN 'YES' ELSE 'NO' END AS 'RETRANS', 
				U.[user_id],
				[user_name],
				U.[login_id],
				BI.[business_name],
				BI.[phone],
				EH.[user_email],
				EIRS.[submission_id],
				ELS.[stage],
				ELS.[state],
				CASE WHEN 
					(
						SELECT 
							TOP 1 StatusID 
						FROM 
							[dbo].[efile_tax_xml] WITH(NOLOCK) 
						WHERE 
							[efile_trans_id] = EH.[efile_trans_id] 
							and [is_deleted] = 0
					) = 1 
				THEN 'YES' 
				ELSE 'NO' END AS 'User Notified' 
			FROM 
				[dbo].[efile_hold] EH WITH(NOLOCK)         
				INNER JOIN [dbo].[efile_tax_xml] EF WITH(NOLOCK) ON EF.[efile_trans_id] = EH.[efile_trans_id] AND EF.[id_deleted] = 0        
				INNER JOIN [dbo].[efile_irs_schema] EIRS WITH(NOLOCK) ON EH.[efile_hold_id] = EIRS.[efile_hold_id] AND EIRS.[is_deleted] = 0         
				INNER JOIN [dbo].[efile_last_status] ELS WITH(NOLOCK) ON EH.[efile_hold_id] = ELS.[efile_hold_id]        
				INNER JOIN [dbo].[returns] RT WITH(NOLOCK) ON RT.[return_id] = EH.[return_id]         
				INNER JOIN [dbo].[business_info] BI WITH(NOLOCK) ON BI.[business_info_id] = RT.[business_info_id]        
				INNER JOIN [dbo].[users] U WITH(NOLOCK) ON U.[user_id] = BI.[user_id]  
			WHERE 
				EH.[efile_hold_id] = @efile_hold_id 
				AND EH.[is_deleted] = 0
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_admin_efile_count]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_admin_efile_count
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_admin_efile_count]
@from_date DATETIME,
@to_date DATETIME,
@product_id BIGINT=0
AS
	BEGIN
		SET NOCOUNT ON; 
		  IF @product_id = 0
				SELECT 
					COUNT(r.[return_id]) AS EfileCount,
					r.[product_id]
				FROM 
					[dbo].[efile_last_status] els WITH(NOLOCK)
					INNER JOIN [dbo].[efile_hold] eh WITH(NOLOCK) ON eh.[efile_hold_id] = els.[efile_hold_id] 
					INNER JOIN [dbo].[returns] r WITH(NOLOCK) ON eh.[return_id] = r.[return_id] AND eh.[is_deleted] = 0
				WHERE 
					[stage] = 'apmv' 
					AND els.[state] = 'Success' 
					AND els.[status_id] <>21
					AND CAST(CONVERT(VARCHAR(30),r.[create_time_stamp],106) AS DATETIME) 
					BETWEEN CAST(CONVERT(VARCHAR(30),@from_date,106) AS DATETIME) 
					AND CAST(CONVERT(VARCHAR(30),@to_date,106) AS DATETIME)
					GROUP BY r.ProductID
		  ELSE
				SELECT 
					COUNT(r.ReturnID) AS EfileCount,
					r.ProductID
				FROM 
					[dbo].[efile_last_status] els WITH(NOLOCK)
					INNER JOIN [dbo].[efile_hold] eh WITH(NOLOCK) ON eh.[efile_hold_id] = els.[efile_hold_id] 
					INNER JOIN [dbo].[returns] r WITH(NOLOCK) ON eh.[return_id] = r.[return_id] AND eh.[is_deleted] = 0
				WHERE 
					[stage] = 'apmv' 
					AND els.[state] = 'Success' 
					AND els.[status_id] <>21
					AND CAST(CONVERT(VARCHAR(30),r.[create_time_stamp],106) AS DATETIME) 
					BETWEEN CAST(CONVERT(VARCHAR(30),@from_date,106) AS DATETIME) 
					AND CAST(CONVERT(VARCHAR(30),@to_date,106) AS DATETIME)
					AND [product_id] = @product_id
					GROUP BY r.[product_id]
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_get_admin_efile_status]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_admin_efile_status
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_admin_efile_status]
AS
	BEGIN
		--SELECT eh.returnid,els.efileholdid,stage,els.state,els.createtimestamp,eh.username,b.businessname,es.EfileIRSSchema
	 --   FROM efilelaststatus els
		--INNER JOIN efilehold eh ON eh.efileholdid=els.efileholdid
		--INNER JOIN [returns] r ON eh.returnid=r.returnid AND eh.isdeleted=0
	 --   INNER JOIN businessinfo b ON r.businessinfoid=b.businessinfoid
	 --   INNER JOIN EfileIRSSchema es ON eh.efileholdid=es.EfileHoldID
		--WHERE stage != 'apmv' and els.state != 'reconciled' AND es.IsDeleted=0
	 --   ORDER BY els.efileholdid
		SET NOCOUNT ON; 
			SELECT 
				eh.[return_id],
				els.[efile_hold_id],
				[stage],
				els.[state],
				els.[create_time_stamp],
				eh.[user_name],
				b.[business_name],
				CONVERT(VARCHAR(MAX),es.[efile_irs_schema]) [efile_irs_schema],
				COUNT(eq.[submission_id]) AS EfileReqRes
			FROM 
				[dbo].[efile_last_status] els WITH(NOLOCK)
				INNER JOIN [dbo].[efile_hold] eh WITH(NOLOCK) ON eh.[efile_hold_id] = els.[efile_hold_id]
				INNER JOIN [dbo].[returns] r WITH(NOLOCK) ON eh.[return_id] = r.[return_id] AND eh.[is_deleted] = 0
				INNER JOIN [dbo].[business_info] b WITH(NOLOCK) ON r.[business_info_id] = b.[business_info_id]
				INNER JOIN [dbo].[efile_irs_schema] es WITH(NOLOCK) ON eh.[efile_hold_id] = es.[efile_hold_id]
				LEFT JOIN [dbo].[efile_request_response] eq WITH(NOLOCK) ON es.[submission_id] = eq.[submission_id]
			WHERE 
				[stage] != 'apmv' 
				AND els.[state] != 'reconciled' 
				AND es.[is_deleted] = 0
			GROUP BY 
			eh.[return_id],
				els.[efile_hold_id],
				[stage],
				els.[state],
				els.[create_time_stamp],
				eh.[user_name],
				b.[business_name],
				CONVERT(VARCHAR(MAX),es.[efile_irs_schema]),eq.[submission_id]
				ORDER BY els.[efile_hold_id]
		SET NOCOUNT ON; 
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_acknowledge_on_status]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_acknowledge_on_status
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_acknowledge_on_status]
	@stage VARCHAR(10),  
	@state VARCHAR(10)   
AS  
	BEGIN  
		SET NOCOUNT ON;  
			SELECT 
				[efile_sender].[efile_hold_id],'' AS DimeAttachment, 
				[submission_id], 
				[message_id],
				[tax_return_type_id],
				[efile_sender].[irs_system_id]  
			FROM 
				[dbo].[efile_sender] WITH(NOLOCK)  
				JOIN [dbo].[efile_last_status] WITH(NOLOCK) ON [efile_sender].[efile_hold_id] = [efile_last_status].[efile_hold_id]   
				JOIN [dbo].[efile_hold] WITH(NOLOCK) ON  [efile_last_status].[efile_hold_id] = [efile_hold].[efile_hold_id]   
			WHERE 
				[efile_last_status].[stage] = @stage 
				AND [efile_last_status].[stage] = @state 
				AND [efile_sender].[is_deleted] = 0 
				AND [efile_hold].[is_deleted] = 0  
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_attachement_and_xml_by_efile_trans_id]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_attachement_and_xml_by_efile_trans_id
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_attachement_and_xml_by_efile_trans_id]
@efile_trans_id VARCHAR(30)    
AS    
	Begin  
		SET NOCOUNT ON;     
			SELECT 
				[efile_hold].[tax_return_type_id],
				[efile_hold].[efile_hold_id],
				[manifest_xml],
				[submission_id],
				[efile_irs_schema]   
			FROM 
				[dbo].[efile_hold] WITH(NOLOCK)  
				INNER JOIN [dbo].[efile_irs_schema]  WITH(NOLOCK) ON [efile_irs_schema].[efile_hold_id] = [efile_hold].[efile_hold_id]   
			WHERE 
				[efile_trans_id] = @efile_trans_id  
				AND [efile_hold].[is_deleted] = 0 
				AND [efile_irs_schema].[is_deleted] = 0    
			ORDER BY  
				[efile_hold].[efile_hold_id]  DESC 

			SELECT 
				[efile_hold_attachment_id],
				[efile_attachment],
				[type],
				[attachment_name]   
			FROM 
				[dbo].[efile_hold] WITH(NOLOCK)   
				INNER JOIN [dbo].[efile_hold_attachment]  WITH(NOLOCK)  ON [efile_hold_attachment].[efile_hold_id] = [efile_hold].[efile_hold_id]   
			WHERE 
				[efile_trans_id] = @efile_trans_id  
				AND [efile_hold].[is_deleted] = 0  
		SET NOCOUNT OFF; 
	End
GO
PRINT N'Creating [dbo].[usp_get_efile_error_from_error_code]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_error_from_error_code
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_error_from_error_code]
AS
	BEGIN
		SET NOCOUNT ON
			SELECT 
				[efile_error_id],
				[submission_id],
				[error_code], 
				[error_message], 
				[error_classification], 
				[action], 
				[error_picked_up], 
				[error_fixed] 
			FROM
				[dbo].[efile_error] WITH(NOLOCK) 
			WHERE 
				[error_code]  NOT IN 
				(
					SELECT 
						[error_code] 
					FROM 
						[dbo].[stc_error_code] WITH(NOLOCK) 
					WHERE 
						[is_deleted] = 0
				) 
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_error_on_id]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_error_on_id
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_error_on_id]
@efile_error_id INT = NULL
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				[efile_error_id],
				[submission_id],
				[efile_error].[error_code],
				[error_message],
				[error_classification],
				[action],
				[error_picked_up],
				[error_fixed] ,
				[error_fault_response],
				[error_log_error_message],
				[error_type],
				[fix_type],
				[error_fix_type]
			FROM 
				[dbo].[efile_error] WITH(NOLOCK) 
				LEFT OUTER JOIN [dbo].[stc_error_code] WITH(NOLOCK) ON [stc_error_code].[error_code] = [efile_error].[error_code] 
				LEFT OUTER JOIN [dbo].[error_fix_type]  WITH(NOLOCK) ON [error_fix_type].[stc_eror_fix_type_id] = [stc_error_code].[fix_type]
			WHERE 
				[efile_error_id] = @efile_error_id
				AND [efile_error].[is_deleted] = 0
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_error_on_submission_id]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_error_on_submission_id
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_error_on_submission_id]
@submission_id VARCHAR(25) 
AS
	BEGIN
		SET NOCOUNT ON
			SELECT 
				[efile_error_id], 
				[submission_id], 
				[error_code], 
				[error_message], 
				[error_classification], 
				[action], 
				[error_picked_up], 
				[error_fixed], 
				[create_time_stamp] AS 'Time' 
			FROM 
				[dbo].[efile_error] WITH(NOLOCK)
			WHERE 
				[submission_id] = @submission_id
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_error_on_transmission_id]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_error_on_transmission_id
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_error_on_transmission_id]
@efile_trans_id VARCHAR(30)
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				[efile_error_id],
				[tax_return_type_id],
				[error_code],
				[error_message],
				[error_classification],
				[action] 
			FROM 
				[dbo].[efile_hold] WITH(NOLOCK) 
				JOIN [dbo].[efile_irs_schema] WITH(NOLOCK) ON [efile_hold].[efile_hold_id] = [efile_irs_schema].[efile_hold_id]
				JOIN [dbo].[efile_error] WITH(NOLOCK) ON [efile_irs_schema].[submission_id] = [efile_error].[submission_id]
			WHERE 
				[efile_hold].[efile_trans_id] = @efile_trans_id 
				AND [efile_irs_schema].[is_deleted] = 0 
				AND [efile_hold].[is_deleted] = 0
				AND [efile_error].[is_deleted] = 0
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_hold_records_on_acknowledgement]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_hold_records_on_acknowledgement
	CREATED ON: 12th May 2014
*******************************************************************************************************/


CREATE PROCEDURE [dbo].[usp_get_efile_hold_records_on_acknowledgement]
AS  
	BEGIN
		SET NOCOUNT ON; 
			SELECT 
				[tax_return_type_id],
				[sender_id],
				efile_hold.[user_id],
				efile_hold.[return_id],
				business_info.[business_name],
				[no_of_attachments],
				efile_hold.[efile_hold_id],
				[user_name],
				[user_email], 
				[tax_object],
				[env_indicator], 
				[efile_trans_id],
				[stage],
				efile_last_status.[state] ,
				[submission_id],
				[tax_year],
				[tax_period]
			FROM 
				[dbo].[efile_hold] WITH(NOLOCK)   
				JOIN [dbo].[efile_last_status] WITH(NOLOCK) ON  [efile_hold].[efile_hold_id] = [efile_last_status].[efile_hold_id] 
				LEFT OUTER JOIN [dbo].[efile_irs_schema] WITH(NOLOCK) ON [efile_irs_schema].[efile_hold_id] = [efile_hold].[efile_hold_id] AND [efile_irs_schema].[is_deleted] = 0
				JOIN [dbo].[users] WITH(NOLOCK) ON [users].[user_id] = [efile_hold].[user_id]
				JOIN [dbo].[returns] WITH(NOLOCK) ON [returns].[return_id] = [efile_hold].[return_id]
				JOIN [dbo].[business_info] WITH(NOLOCK) ON  [business_info].[business_info_id] = [returns].[business_info_id]
			WHERE 
				[stage] IN('GACK','SCH1') 
				AND [efile_last_status].[state] = 'Success' 
				AND [efile_hold].[is_deleted] = 0 
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_hold_records_on_status]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_hold_records_on_status
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_hold_records_on_status]
@stage VARCHAR(10),
@state VARCHAR(10) = NULL 
AS  
	SET NOCOUNT ON;  
		BEGIN 
			IF  @State IS NULL 
				BEGIN
					SELECT 
						[efile_hold].[tax_return_type_id],
						[sender_id],
						[user_id],
						[return_id], 
						[no_of_attachments],
						[efile_hold].[efile_hold_id] ,
						[user_name],
						[user_email], 
						[tax_object],
						[env_indicator], 
						[efile_trans_id],
						[stage],
						[state] ,
						[submission_id],
						[tax_year],
						[tax_period]
					FROM 
						[dbo].[efile_hold] WITH(NOLOCK)   
						JOIN [dbo].[efile_last_status] WITH(NOLOCK) ON  [efile_hold].[efile_hold_id] = [efile_last_status].[efile_hold_id] 
						--join STCEfileServiceStatus on STCEfileServiceStatus.TaxReturnTypeID=EfileHold.TaxReturnTypeID and IsActive=1
						LEFT OUTER JOIN [dbo].[efile_irs_schema] WITH(NOLOCK) ON [efile_irs_schema].[efile_hold_id] = [efile_hold].[efile_hold_id] AND [efile_irs_schema].[is_deleted] = 0
					WHERE 
						[stage]=@stage 
						AND [efile_hold].[is_deleted] = 0 
				END
			ELSE
				BEGIN
					SELECT 
						[efile_hold].[tax_return_type_id],
						[sender_id],
						[user_id],
						[return_id], 
						[no_of_attachments],
						[efile_hold].[efile_hold_id] ,
						[user_name],
						[user_email], 
						[tax_object],
						[env_indicator], 
						[efile_trans_id],
						[stage],
						[state] ,
						[submission_id],
						[tax_year],
						[tax_period]
					FROM 
						[dbo].[efile_hold] WITH(NOLOCK)   
						JOIN [dbo].[efile_last_status] WITH(NOLOCK) ON  [efile_hold].[efile_hold_id] = [efile_last_status].[efile_hold_id] 
						JOIN [dbo].[stc_efile_service_status] WITH(NOLOCK) ON [stc_efile_service_status].[tax_return_type_id] = [efile_hold].[tax_return_type_id] AND [is_active] = 1
						LEFT OUTER JOIN [dbo].[efile_irs_schema] WITH(NOLOCK) ON [efile_irs_schema].[efile_hold_id] = [efile_hold].[efile_hold_id] AND [efile_irs_schema].[is_deleted] = 0
					WHERE 
						[state] = @State 
						AND [stage] = @stage 
						AND [efile_hold].[is_deleted] = 0 
				END
		END
	SET NOCOUNT OFF;
GO
PRINT N'Creating [dbo].[usp_get_efile_hold_sender_count]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_hold_sender_count
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_hold_sender_count]
@sender_id INT
AS
	BEGIN
		SET NOCOUNT ON;
			BEGIN TRAN
				SELECT 
					COUNT([efile_hold_id]) as 'Count' 
				FROM 
					[dbo].[efile_hold] WITH(NOLOCK)
				WHERE 
					[sender_id] = @sender_id 
					AND CONVERT(VARCHAR(13),[create_time_stamp],107)=CONVERT(VARCHAR(13),GETDATE(),107)
			COMMIT TRAN
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_info_on_stage_status]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_info_on_stage_status
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_info_on_stage_status]
	@stage VARCHAR(10)=NULL,
	@state VARCHAR(10)=NULL
AS
	BEGIN
		SET NOCOUNT ON; 
			IF @stage IS NULL AND @state IS NULL 
				Select 
					eh.[tax_return_type_id], 
					eh.[return_id],
					eh.[user_id],
					eh.[user_name],
					eh.[efile_trans_id],
					eh.[efile_hold_id],
					eh.[tax_object],
					es.[submission_id], 
					es.[efile_irs_schema],
					es.[manifest_xml],
					[stage],
					[state]
				FROM 
					[dbo].[efile_hold] eh
					LEFT OUTER JOIN [dbo].[efile_irs_schema] es ON eh.[efile_hold_id]=es.[efile_hold_id] AND es.[is_deleted] = 0
					JOIN [dbo].[efile_last_status] el ON el.[efile_hold_id] = eh.[efile_hold_id]	
			ELSE
				SELECT 
					eh.[tax_return_type_id], 
					eh.[return_id],
					eh.[user_id],
					eh.[user_name],
					eh.[efile_trans_id],
					eh.[efile_hold_id],
					eh.[tax_object],
					es.[submission_id], 
					es.[efile_irs_schema],
					es.[manifest_xml],
					[stage],
					[state]
				FROM 
					[dbo].[efile_hold] eh
					LEFT OUTER JOIN [dbo].[efile_irs_schema] es ON eh.[efile_hold_id]=es.[efile_hold_id] AND es.[is_deleted] = 0
					JOIN [dbo].[efile_last_status] el ON el.[efile_hold_id] = eh.[efile_hold_id]	 
				WHERE 
					el.[stage]=@stage AND el.[state]=@state
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_irs_schema_on_status]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_irs_schema_on_status
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_irs_schema_on_status]
@Stage VARCHAR(10),    
@State VARCHAR(10)    
AS    
	SET NOCOUNT ON;    
		BEGIN    
			SELECT 
				[efile_irs_schema].[efile_hold_id],
				[tax_return-type_id],
				[efile_irs_schema].[submission_id], 
				[tax_return-type_id] AS 'FormType',
				[efile_hold].[tax_year],
				[efile_hold].[tax_period],
				[efile_irs_schema].[create_time_stamp] AS 'Date' ,
				[manifest_xml], 
				[efile_irs_schema],
				[returns].[product_id]  
			FROM 
				[dbo].[efile_irs_schema] WITH(NOLOCK) 
				JOIN [dbo].[efile_last_status] WITH(NOLOCK) ON [efile_irs_schema].[efile_hold_id] = [efile_last_status].[efile_hold_id]     
				JOIN [dbo].[efile_hold] ON [efile_hold].[efile_hold_id] = [efile_irs_schema].[efile_hold_id]   
				JOIN [dbo].[returns] ON [returns].[return_id] = [efile_hold].[return_id] and [returns].[is_deleted] = 0  
			WHERE 
				[efile_irs_schema].[is_deleted] = 0 
				AND [stage] = @Stage 
				AND [state] = @State 
				AND [efile_hold].[is_deleted] = 0    
		END
	SET NOCOUNT OFF;
GO
PRINT N'Creating [dbo].[usp_get_efile_name_control]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_name_control
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_name_control]
@efile_hold_id BIGINT
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				[name_control],
				[efile_name_control].[user_id],
				[efile_name_control].[business_info_id],
				[efile_name_control].[business_info_name] as businessname 
			FROM 
				[dbo].[efile_name_control] WITH(NOLOCK)  
				INNER JOIN [dbo].[efile_hold] WITH(NOLOCK) ON [efile_name_control].[return_id] = [efile_hold].[return_id]
			WHERE 
				[efile_hold].[efile_hold_id] = @efile_hold_id
			GROUP BY 
				[name_control],
				[efile_name_control].[user_id],
				[efile_name_control].[business_info_id],
				[efile_name_control].[business_info_name]
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_name_control_on_efile_hold_id]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_name_control_on_efile_hold_id
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_name_control_on_efile_hold_id]
@efile_hold_id BIGINT  
AS  
	BEGIN 
		SET NOCOUNT ON; 
			SELECT  
				[name_control] 
			FROM  
				[dbo].[efile_name_control] WITH(NOLOCK) 
			WHERE 
				[business_info_id] =  
				(  
					SELECT 
						bi.[business_info_id] 
					FROM 
						[dbo].[business_info] bi WITH(NOLOCK)    
						JOIN [dbo].[returns] r WITH(NOLOCK)  ON bi.[business_info_id] = r.[business_info_id]  
						JOIN [dbo].[efile_hold] eh WITH(NOLOCK)  ON eh.[return_id] = r.[return_id] 
					WHERE 
						eh.[efile_hold_id] = @efile_hold_id
				)   
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_req_res_by_action_and_time]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_req_res_by_action_and_time
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_req_res_by_action_and_time]
(
	@action [VARCHAR](50) = NULL,          
	@start_time [VARCHAR](100) = NULL,          
	@end_time [VARCHAR](100) = NULL,        
	@date [VARCHAR](100) = NULL  ,      
	@last_hours [CHAR](5) = NULL ,  
	@form_type [VARCHAR](20) = NULL    
)
AS          
	BEGIN        
		SET NOCOUNT ON;          
			DECLARE @SQL NVARCHAR(MAX)            
			SET @SQL =N'
				SELECT 
					[efile_request_response_id],
					isnull(submission_id.[submission_id],'''') [submission_id],  
					[message_id],
					isnull([request],'''') as Request,isnull([response],'''') as Response,
					isnull(efile_request_response.[status_id],'''') as StatusId  ,  
					isnull([state],'''') + '' - '' +isnull([stage],'''') as ''STCStatus'' ,
					efile_request_response.[create_time_stamp] as ''TimeStamp''     
				FROM   
					[dbo].[efile_hold] eh INNER JOIN [dbo].[efile_irs_schema] es on eh.[efile_hold_id] = es.[efile_hold_id]   
					INNER JOIN efile_request_response with(nolock) on es.[submission_id] = [efile_request_response].[submission_id]     
					left outer join [dbo].[efile_last_status] els with(nolock) ON els.[efile_hold_id]=es.[efile_hold_id] 
				WHERE 1 = 1 '          
			SET 
				@date = CONVERT(VARCHAR(20),CONVERT(DATETIME,@date),101)        
			IF 
				@form_type IS NOT NULL  
			SET 
				@SQL = @SQL + ' AND tax_return_type_id = '''+ @form_type +''''  
			IF 
				@action IS NOT NULL          
			SET 
				@SQL = @SQL + 'AND action = ''' + @action +''''          
			IF 
				@date IS NOT NULL          
			SET 
				@sql = @sql +  ' and convert(varchar(100),efile_request_response.create_time_stamp,101) = '''+  @date + ''''        
			SELECT 
				@start_time = CONVERT(VARCHAR(20),CONVERT(DATETIME,@start_time),108), @end_time = CONVERT(VARCHAR(20),CONVERT(DATETIME,@end_time),108)      
			IF 
				(@start_time IS NOT NULL )          
			SET 
				@SQL = @SQL + 'AND CONVERT(VARCHAR(20),efile_request_response.[create_time_stamp],108) >= '''+ @start_time +''''      
			IF 
				(@end_time IS NOT NULL)      
			SET 
				@SQL = @SQL + 'AND CONVERT(VARCHAR(20),efile_request_response.[create_time_stamp],108) <= '''+ @end_time +''''      
			IF 
				(@last_hours   IS NOT NULL and ISNUMERIC(@last_hours) = 1)      
			SET 
				@SQL = @SQL + 'AND efile_request_response.[create_time_stamp] >= dateadd(hh,-('+@last_hours+'),getdate())'      
			EXEC sp_executesql @SQL   
		SET NOCOUNT OFF;       
	END
GO
PRINT N'Creating [dbo].[usp_get_efile_sender_on_status]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_efile_sender_on_status
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_efile_sender_on_status]
@Stage VARCHAR(10),  
@State VARCHAR(10)   
AS  
	BEGIN  
		SET NOCOUNT ON;
			SELECT 
				[efile_sender].[efile_hold_id],
				[dime_attachment], 
				[submission_id], 
				[message_id],
				[tax_return_type_id],
				[efile_sender].[irs_system_id]  
			FROM 
				[dbo].[efile_sender] WITH(NOLOCK)  
				JOIN [dbo].[efile_last_status] WITH(NOLOCK) ON [efile_sender].[efile_hold_id] = [efile_last_status].[efile_hold_id]   
				JOIN [dbo].[efile_hold] WITH(NOLOCK) ON  [efile_last_status].[efile_hold_id] = [efile_hold].[efile_hold_id]   
			WHERE 
				[efile_last_status].[stage] = @Stage
				AND [efile_last_status].[state] = @State 
				AND [efile_sender].[is_deleted] = 0 
				AND [efile_hold].[is_deleted] = 0  
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_latest_efile_status]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_latest_efile_status
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_latest_efile_status]
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				 eh.[return_id],
				 [user_name],
				 [user_email],
				 bi.[business_name],
				 bi.[ein],
				 bi.[phone],
				 els.[state],
				 MAX(eh.[create_time_stamp]) as whenTransmitted,
				 COUNT(eh.[return_id]) as NoofTransmittedTimes 
			 FROM 
				 [dbo].[efile_hold] eh WITH(NOLOCK)
				 LEFT OUTER JOIN [dbo].[business)info] bi ON eh.[user_id] = bi.[user_id] 
				 LEFT OUTER JOIN [dbo].[efile_last_status] els ON els.[efile_hold_id] = eh.[efile_hold_id]
			GROUP BY 
				eh.[return_id],
				[user_name],
				[user_email],
				bi.[business_name],
				bi.[ein],
				bi.[phone],
				els.[state],
				eh.[create_time_stamp]
			ORDER BY 
				eh.[create_time_stamp],
				eh.[return_id] DESC
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_rejected_efile]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_rejected_efile
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_rejected_efile]
AS  
	SET NOCOUNT ON  
		BEGIN  
			SELECT 
				BI.[user_id],
				R.[return_id],
				R.[product_id], 
				STP.[tax_period]+'-'+STY.[tax_year] as Description, 
				EH.[efile_hold_id] as HoldID,   
				EIS.[submission_id], 
				BI.[business_name],'Rejection' as 'Rejection',   
				Eh.[efile_trans_id], 
				ELS.[stage]+'-'+ELS.[state] as 'EfileStatus' ,
				[tax_return_type_id] as 'Type'  
			FROM 
				[dbo].[business_info] BI  WITH(NOLOCK) 
				JOIN [dbo].[returns] R WITH(NOLOCK)  ON BI.[business_info_id] = R.[business_info_id]  
				LEFT OUTER JOIN [dbo].[stc_tax_year] STY WITH(NOLOCK)  ON R.[tax_year_id] = STY.[tax_year_id]  
				LEFT OUTER JOIN [dbo].[stc_tax_period] STP WITH(NOLOCK)  ON R.[tax_period_id] = STP.[tax_period_id]  
				JOIN [dbo].[efile_hold] EH WITH(NOLOCK)  ON EH.[return_id] = R.[return_id] AND EH.[is_deleted] = 0  
				JOIN [dbo].[efile_irs_schema] EIS WITH(NOLOCK)  ON EIS.[efile_hold_id] =EH.[efile_hold_id] AND EIS.[is_deleted]=0  
				JOIN [dbo].[efile_last_status] ELS WITH(NOLOCK)  ON Eh.[efile_hold_id] = ELS.[efile_hold_id]   
			WHERE 
				ELS.State = 'error' OR ELS.State='rejected' 
				AND BI.[is_deleted] = 0 
				AND R.[is_deleted] = 0   
				ORDER BY EH.[efile_hold_id] DESC   
				--SELECT EH.TaxReturnTypeID,EH.ReturnID,ES.EfileHoldID,eh.UserName,EH.EfileTransID,ES.SubmissionID,Stage+' - '+State as  'Status',EH.CreateTimeStamp as 'TransmittedDate'  
				--FROM EfileIRSSchema ES with(nolock)  
				--JOIN EfileLastStatus ELS with(nolock) ON ES.EfileHoldID = ELS.EfileHoldID  
				--Join EfileHold EH with(nolock) on EH.EfileHoldID=ES.EfileHoldID  
				--WHERE State = 'error' or State='rejected' AND ES.IsDeleted = 0 and EH.ISDeleted=0 order by Stage,State   
		END
	SET NOCOUNT ON
GO
PRINT N'Creating [dbo].[usp_get_rpt_payment_and_efile_count]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_rpt_payment_and_efile_count
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_rpt_payment_and_efile_count]
AS  
	BEGIN  
		SET NOCOUNT ON;  
			SELECT  
					r.[return_id], 
					Year(r.[create_time_stamp]) AS Year,  
					Month(r.[create_time_stamp]) AS Month ,
					CASE 
					WHEN els.[stage] IS NOT NULL THEN 1 ELSE 0 END AS [status] 
					INTO #TempPay
				FROM 
					[dbo].[returns] r WITH(NOLOCK)  
					LEFT OUTER JOIN [dbo].[efile_hold] eh WITH(NOLOCK) on eh.[returnid] = r.[return_id] AND eh.[is_deleted] = 0 
					LEFT OUTER JOIN [dbo].[efile_last_status] els WITH(NOLOCK) on els.[efile_hold_id] = eh.[efile_hold_id] AND els.[stage] = 'APMV' AND els.[state] = 'Success' 
				WHERE  
					r.[create_time_stamp]  >= '1-06-2008' 
					AND r.[product_id] = 5 
					AND r.[is_deleted] = 0
					SELECT 
							Year,
							Month, 
							SUM([status]) AS COUNT FROM #TempPay
						GROUP BY 
							Year, 
							Month
						ORDER BY 
							Year,
							MOnth
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_schedule1]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_schedule1
	CREATED ON: 12th May 2014
*******************************************************************************************************/


CREATE PROCEDURE [dbo].[usp_get_schedule1]
@efile_trans_id VARCHAR(30)
AS
	BEGIN
		SET NOCOUNT ON
			Select 
				[schedule1] 
			from 
				[dbo].[efile_hold] WITH(NOLOCK) 
				join  [dbo].[efile_irs_schema] WITH(NOLOCK) on [efile_hold].[efile_hold_id] = [efile_irs_schema].[create_time_stamp]
				join [dbo].[efile_receiver] WITH(NOLOCK) on [efile_receiver].[submission_id] = [efile_irs_schema].[submission_id]
			where 
				[efile_irs_schema].[is_deleted] = 0 
				and [efile_receiver].[is_deleted] = 0 
				and [efile_trans_id] = @efile_trans_id 
				and [efile_hold].[is_deleted] = 0
		SET NOCOUNT OFF;
	end
GO
PRINT N'Creating [dbo].[usp_get_submission_id_for_acknowledgement]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_submission_id_for_acknowledgement
	CREATED ON: 8th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_submission_id_for_acknowledgement]
AS  
	BEGIN  
		SET NOCOUNT ON;  
			SELECT 
				eh.[tax_return_type_id], 
				--ReturnID,
				els.[efile_hold_id],   
				es.[submission_id],
				els.[update_time_stamp] as 'SubmittedDate',
				stage,
				els.[state]
				--UserName  
			FROM 
				[dbo].[efile_last_status] els WITH(NOLOCK)  
				JOIN [dbo].[efile_irs_schema] es WITH(NOLOCK) ON es.[efile_hold_id] = els.[efile_hold_id]  
				JOIN [dbo].[efile_hold] eh WITH(NOLOCK) ON es.[efile_hold_id]=eh.[efile_hold_id]  
			WHERE
				(els.[stage] = 'send' AND [state] = 'Success') 
				OR (els.[stage] = 'GAck' AND ([state] = 'Error' OR [state] = 'Blank' )) 
				AND es.[is_deleted] = 0  
				AND eh.[is_deleted] = 0 
				AND els.[is_deleted] = 0   
		SET NOCOUNT OFF; 
	END
GO
PRINT N'Creating [dbo].[usp_get_submissions]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_submissions
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_get_submissions]
@form_type NVARCHAR(20)
AS  
	BEGIN  
		SET NOCOUNT ON;  
			SELECT 
				[efile_irs_schema].[submission_id], 
				[efile_last_status].[efile_hold_id] AS StatusID,[efile_last_status].[stage] + '-'+ [efile_last_status].[state] AS stcstatus   
			FROM 
				[dbo].[efile_hold] WITH(NOLOCK) 
				INNER JOIN  [dbo].[efile_irs_schema] WITH(NOLOCK)  ON [efile_hold].[efile_hold_id] = [efile_irs_schema].[efile_hold_id]
				JOIN [dbo].[efile_last_status] WITH(NOLOCK) ON [efile_last_status].[efile_hold_id] = [efile_irs_schema].[efile_hold_id]  
			WHERE
				[efile_irs_schema].[is_deleted] =0 
				AND [efile_last_status].[is_deleted] = 0   
				AND  [tax_return_type_id] = @form_type
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_get_submissions_for_sender_channel]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_get_submissions_for_sender_channel
	CREATED ON: 9th May 2014
*********************************************************************************************************/


CREATE PROCEDURE [dbo].[usp_get_submissions_for_sender_channel]
(
	@stage VARCHAR(10),
	@state VARCHAR(50)
)
AS
	BEGIN
		SET NOCOUNT ON
			SELECT 
				eh.[tax_return_type_id],
				eh.[return_id],
				eh.[efile_trans_id],
				es.[efile_hold_id],
				es.[submission_id],
				es.[dime_attachment],
				es.[create_time_stamp] 
			FROM 
				[dbo].[efile_sender] es WITH(NOLOCK)
				JOIN [dbo].[efile_last_status] els WITH(NOLOCK) ON els.[efile_hold_id] = es.[efile_hold_id]
				JOIN [dbo].[efile_hold] eh WITH(NOLOCK) ON es.[efile_hold_id] = eh.[efile_hold_id]
			WHERE 
				els.[stage] = @stage 
				AND els.[state] = @state 
				AND es.[is_deleted] = 0 
				AND els.[is_deleted] = 0 
				AND eh.[is_deleted] = 0
		SET NOCOUNT OFF
	END
GO
PRINT N'Creating [dbo].[usp_rejected_efile_get_on_id]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_rejected_efile_get_on_id
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_rejected_efile_get_on_id]
	@submission_id VARCHAR(20)
AS
	BEGIN
		SET NOCOUNT ON;
			SELECT 
				eh.[tax_return_type_id],
				[efile_irs_schema_id],
				es.[efile_hold_id],
				[efile_irs_schema],
				[manifest_xml],
				[submission_id],
				es.[create_time_stamp]
			FROM 
				[dbo].[efile_irs_schema] es WITH(NOLOCK) 
				JOIN [dbo].[efile_hold] eh WITH(NOLOCK)  ON es.[efile_hold_id] = eh.[efile_hold_id] AND eh.[is_deleted] = 0
			WHERE 
				[submission_id] = @submission_id  AND es.[is_deleted] = 0
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_rpt_get_payment_and_efile_count_old]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_rpt_get_payment_and_efile_count_old
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_rpt_get_payment_and_efile_count_old]
AS
	--BEGIN
	--	SET NOCOUNT ON;
	--		SELECT 
	--			r.return_id, 
	--			Year(r.create_time_stamp) AS Year,  
	--			Month(r.create_time_stamp) AS Month , 
	--			CASE
	--				WHEN els.status_id=25 
	--				THEN 1 
	--				ELSE 0 
	--				END AS status 
	--				INTO #TempPay
	--		FROM 
	--			tax2290_Master.dbo.returns r 
	--		LEFT OUTER JOIN efile_hold eh ON eh.return_id=r.return_id AND eh.is_deleted=0 
	--		LEFT OUTER JOIN efile_last_status els ON els.efile_hold_id=eh.efile_hold_id AND els.status_id=25 
	--		WHERE 
	--			r.create_time_stamp <='1-06-2008' AND r.product_id=1 AND r.is_deleted=0
	--		SELECT 
	--			year,
	--			Month, 
	--			sum(Status) AS COUNT FROM #TempPay
	--			GROUP BY
	--				Year, 
	--				Month
	--			ORDER BY 
	--				Year,
	--				Month
	--	SET NOCOUNT OFF;
	--END
GO
PRINT N'Creating [dbo].[usp_status_update]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_status_update
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_status_update]
(
	@submission_id VARCHAR(20)=null,
	@efile_hold_id BIGINT=null,
	@status_id INT= 0,
	@stage VARCHAR(10)= null,
	@state VARCHAR(10)= null
)
AS
	BEGIN
		SET NOCOUNT ON;
			IF @submission_id IS NOT NULL AND @efile_hold_id IS NULL
				SELECT
					@efile_hold_id = eh.[efile_hold_id] 
				FROM 
					[dbo].[efile_hold] eh WITH(NOLOCK) 
					JOIN [dbo].[efile_irs_schema] eis WITH(NOLOCK) 
					ON eis.[efile_hold_id]=eh.[efile_hold_id] 
					AND eis.[submission_id]=@submission_id 
					AND eis.[is_deleted]=0 
					AND eh.[is_deleted]=0
				SELECT
					@efile_hold_id
			IF @efile_hold_id is NULL RETURN
				UPDATE 
					[dbo].[efile_last_status] WITH(ROWLOCK)
				SET 
					[status_id] = @status_id, 
					[stage] = @stage, 
					[state] = @state, 
					[update_time_stamp] = GETDATE()
				WHERE 
					[efile_hold_id] = @efile_hold_id AND [is_deleted] = 0
			IF @@ROWCOUNT = 0
				INSERT INTO [dbo].[efile_last_status]
				(
					[efile_hold_id], 
					[status_id], 
					[stage],
					[state],
					[is_deleted], 
					[create_time_stamp], 
					[update_time_stamp]
				) 
				VALUES 
				(
					@efile_hold_id,
					@status_id,
					@stage,
					@state,
					0, 
					GETDATE(), 
					GETDATE()
				)
				INSERT INTO [dbo].[efile_progress] 
				(
					[efile_hold_id], 
					[progress_status], 
					[stage],
					[state],
					[create_time_stamp], 
					[update_time_stamp]
				) 
				VALUES 
				( 
					@efile_hold_id, 
					@status_id, 
					@stage,
					@state,
					GETDATE(), 
					GETDATE()
				) 
		SET NOCOUNT OFF;
	END
GO
PRINT N'Creating [dbo].[usp_update_system_status]...';


GO
/*******************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_update_system_status
	CREATED ON: 12th May 2014
*******************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_update_system_status]
@irs_system_id  VARCHAR(20),
@efile_hold_id  BIGINT
AS
	SET NOCOUNT ON; 
		BEGIN
			UPDATE 
				[dbo].[efile_hold] WITH(ROWLOCK) 
			SET  
				[irs_system_id] = @irs_system_id
			WHERE
				[efile_hold_id] = @efile_hold_id 
			UPDATE 
				[dbo].[efile_sender] WITH(ROWLOCK) 
			SET  
				[irs_system_id] = @irs_system_id
			WHERE 
				[efile_hold_id] = @efile_hold_id 
		END
	SET NOCOUNT OFF;
GO
PRINT N'Creating [dbo].[usp_upload_files]...';


GO
/*********************************************************************************************************
	CREATED BY: Yogalakshmi				STORED PROCEDURE NAME: usp_upload_files
	CREATED ON: 9th May 2014
*********************************************************************************************************/

CREATE PROCEDURE [dbo].[usp_upload_files]
	@submission_id VARCHAR(30) = NULL,
	@zip VARBINARY(MAX) = NULL,
	@get_ack_status VARBINARY(MAX) = NULL,
	@schedule1 VARBINARY(MAX) = NULL,
	@stage VARCHAR(20) = NULL,
	@state VARCHAR(20)
AS
	BEGIN
		SET NOCOUNT ON; 
			DECLARE @EfileHoldID [BIGINT]
			IF @submission_id IS NULL
				BEGIN		
					RETURN
				END 
			ELSE
				BEGIN
					SELECT 
						@EfileHoldID = [efile_hold_id] 
					FROM 
						[dbo].[efile_irs_schema] WITH(NOLOCK) 
					WHERE  
						[submission_id] = @submission_id AND [is_deleted] = 0
				END
			IF @zip IS NOT NULL
				BEGIN
					UPDATE [dbo].[efile_sender] WITH(ROWLOCK) 
					SET 
						[dime_attachment] = @zip,[update_time_stamp] = GETDATE() 	
					WHERE 
						[submission_id] = @submission_id AND is_deleted = 0
				IF @@rowcount = 0
					INSERT INTO [dbo].[efile_sender]
						(
							[efile_hold_id],
							[dime_attachment],
							[submission_id],
							[message_id],
							[is_deleted],
							[create_time_stamp],
							[update_time_stamp]
						) 
						VALUES 
						(
							@EfileHoldID,
							@zip,
							@submission_id,
							NULL,
							0,
							GETDATE(),
							GETDATE()
						)	
					EXEC  Statusupdate @submission_id, @EfileHoldID, NULL, @stage, @state
				END 
			IF @get_ack_status IS NOT NULL
				BEGIN
					UPDATE [dbo].[efile_receiver] WITH(ROWLOCK) 
					SET 
						[get_ack_status] = @get_ack_status , 
						[update_time_stamp] = GETDATE() 
					WHERE 
						[submission_id] = @submission_id AND [is_deleted] = 0
					IF @@rowcount = 0
						INSERT INTO [dbo].[efile_receiver]
						(
							[submission_id],
							[send_submission_status],
							[get_ack_status],
							[submission_status],
							[schedule1],
							[is_deleted],
							[create_time_stamp],
							[update_time_stamp]
						)
						VALUES
						(
							@submission_id,
							null,
							@get_ack_status,
							NULL,
							NULL,
							0,
							GETDATE(),
							GETDATE()
						)
						EXEC  Statusupdate @submission_id, @EfileHoldID, NULL, @stage, @state
				END 
			IF @Schedule1 IS NOT NULL	
				BEGIN
					UPDATE [dbo].[efile_receiver] WITH(ROWLOCK) 
					SET 
						[schedule1] = @Schedule1, 
						[update_time_stamp] =GETDATE() 
					WHERE
						[submission_id] = @submission_id AND [is_deleted] = 0
					IF @@rowcount = 0
						INSERT INTO [dbo].[efile_receiver]
						(
							[submission_id],
							[send_submission_status],
							[get_ack_status],
							[submission_status],
							[schedule1],
							[is_deleted],
							[create_time_stamp],
							[update_time_stamp]
						)
						VALUES
						(
							@submission_id,
							NULL,
							NULL,
							NULL,
							@Schedule1,
							0,
							GETDATE(),
							GETDATE()
						)
					EXEC  Statusupdate @submission_id, @EfileHoldID, NULL, @stage, @state
				END
		SET NOCOUNT OFF;
	END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


--13 Aug 2014 Praveen T Included for Efile Service
CREATE SYNONYM [dbo].[efile_control] FOR TAX1040_Master_DB.[dbo].[efile_control]
CREATE SYNONYM [dbo].[efile_irs_users] FOR TAX1040_Master_DB.[dbo].[efile_irs_users]
CREATE SYNONYM [dbo].[efile_schema_version] FOR TAX1040_Master_DB.[dbo].[efile_schema_version]
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.'
GO
